{"ast":null,"code":"var _jsxFileName = \"/home/kawtar/Desktop/Invoice_Project_Frontend/src/Components/Invoice.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../css/invoice.css';\nimport axios from '../Components/router/axiosInstance';\nimport Swal from 'sweetalert2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Invoice = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    NumFacture: \"\",\n    NomClient: \"\",\n    NumBonLiv: \"\",\n    dateBonLiv: \"\",\n    TypeValidation: \"\",\n    dateBonCommande: \"\",\n    MontantHT: \"\",\n    DateFacture: \"\",\n    Taux: \"\",\n    // TVA: \"\",\n    //MontantTTC: \"\",\n    NomEmetteur: \"\",\n    TypeContrat: \"contrat\",\n    EtabliPar: \"\",\n    EtaPayement: \"PAYEE\",\n    ModeReg: \"ESPÈCE\",\n    MontantEnc: \"\",\n    NumRemise: \"\",\n    NumCheque: \"\"\n  });\n  const [emetteurList, setEmetteurList] = useState([]);\n  // État pour suivre les champs qui doivent afficher un input au lieu d'un select\n  const [dynamicInputs, setDynamicInputs] = useState({});\n\n  // Cette version de 'handleChange' distingue les changements d'état entre les ‘select’ et les ‘input’.\n  const handleChange = event => {\n    const {\n      name,\n      value,\n      type\n    } = event.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n\n    // Mettre à jour uniquement sur changements provenant d'un élément 'select'\n    if (type === 'select-one') {\n      setDynamicInputs(prev => ({\n        ...prev,\n        [name]: value === 'Autre'\n      }));\n    }\n  };\n\n  //    // Gérez la transformation de select en input ici\n  //    if (value === 'Autre') {\n  //      setDynamicInputs(prev => ({ ...prev, [name]: true }));\n  //    } else {\n  //      setDynamicInputs(prev => ({ ...prev, [name]: true }));\n  //    }\n  //  };\n  // const handleChange = (e) => {\n  //   const { name, value } = e.target;\n  //   setFormData(prev => ({\n  //     ...prev,\n  //     [name]: value\n  //   }));\n  // };\n\n  const handleBlur = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === 'NomEmetteur') {\n      let emetteurs = JSON.parse(localStorage.getItem('emetteurs') || '[]');\n      if (value && !emetteurs.includes(value)) {\n        emetteurs.push(value);\n        localStorage.setItem('emetteurs', JSON.stringify(emetteurs));\n      }\n    }\n  };\n  const handleFocus = e => {\n    const name = e.target.name;\n    if (name === 'NomEmetteur') {\n      const storedEmetteurs = JSON.parse(localStorage.getItem('emetteurs') || '[]');\n      setEmetteurList(storedEmetteurs);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(formData);\n    try {\n      const response = await axios.post('http://localhost:8000/api/enregistrerFacture', formData);\n      Swal.fire({\n        icon: 'success',\n        title: 'Enregistrement réussi',\n        text: 'Les données ont été enregistrées avec succès.'\n      });\n      setFormData({\n        NumFacture: '',\n        NomClient: '',\n        NumBonLiv: '',\n        dateBonLiv: '',\n        TypeValidation: '',\n        dateBonCommande: '',\n        dateValidation: '',\n        MontantHT: '',\n        DateFacture: '',\n        Taux: '',\n        //TVA: '',\n        //MontantTTC: '',\n        NomEmetteur: '',\n        TypeContrat: 'contrat',\n        EtabliPar: '',\n        EtaPayement: 'PAYEE',\n        ModeReg: 'ESPÈCE',\n        MontantEnc: '',\n        NumRemise: '',\n        NumCheque: ''\n      });\n    } catch (error) {\n      console.error('Erreur lors de l\\'enregistrement de la facture:', error);\n      Swal.fire({\n        icon: 'error',\n        title: 'Erreur',\n        text: 'Une erreur est survenue lors de l\\'enregistrement des données. Veuillez réessayer.'\n      });\n    }\n  };\n  const fieldsConfig = [{\n    label: 'Nº de Facture',\n    type: 'text',\n    min: '0',\n    name: 'NumFacture'\n  }, {\n    label: 'Date de Facture',\n    type: 'date',\n    name: 'DateFacture'\n  }, {\n    label: 'Nom Client',\n    type: 'text',\n    name: 'NomClient'\n  }, {\n    label: 'Nº Bon de livraison',\n    type: 'text',\n    min: '0',\n    name: 'NumBonLiv'\n  }, {\n    label: 'Date de Livraison',\n    type: 'date',\n    name: 'dateBonLiv'\n  }, {\n    label: 'Type de validation',\n    type: 'select',\n    options: ['[Choisir Type Validation]', 'WhatsApp', 'Bon de Commande', 'Bon accord', 'Autre'],\n    name: 'TypeValidation'\n  },\n  // { label: 'DatBon de Commande', type: 'date', name: 'dateBonCommande' },\n  {\n    label: 'Date de validation',\n    type: 'date',\n    name: 'dateValidation'\n  }, {\n    label: 'Montant HT',\n    type: 'number',\n    min: '0',\n    name: 'MontantHT'\n  }, {\n    label: 'Taux',\n    type: 'select',\n    options: ['[Taux %]', '0', '20', 'Autre'],\n    name: 'Taux'\n  }, {\n    label: 'Emetteur',\n    type: 'text',\n    name: 'NomEmetteur'\n  }, {\n    label: 'Type de contrat',\n    type: 'select',\n    options: ['[Choisir Type de contrat]', 'contrat', 'Ponctuel', 'Autre'],\n    name: 'TypeContrat'\n  }, {\n    label: 'Etablit Par',\n    type: 'text',\n    name: 'EtabliPar'\n  }, {\n    label: 'PAYEE / IMPAYEE',\n    type: 'select',\n    options: ['[Choisir PAYEE / IMPAYEE]', 'PAYEE', 'IMPAYEE', 'Autre'],\n    name: 'EtaPayement'\n  }, {\n    label: 'Mode de reglement',\n    type: 'select',\n    options: ['[MODE DE REGLEMENT]', 'ESPÈCE', 'CHÈQUE', 'VIREMENT', 'VIREMENT ESPECE', 'PAR EFFET', 'Autre'],\n    name: 'ModeReg'\n  }, {\n    label: 'Montant encaisse',\n    type: 'number',\n    min: '0',\n    name: 'MontantEnc'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"invoice\",\n    children: [/*#__PURE__*/_jsxDEV(\"center\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Nouvelle Facture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [fieldsConfig.map((field, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: field.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this), dynamicInputs[field.name] ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: field.name,\n            value: formData[field.name],\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 17\n          }, this) : field.type === 'select' ? /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"selectFact\",\n            name: field.name,\n            value: formData[field.name],\n            onChange: handleChange,\n            required: true,\n            children: field.options.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option,\n              disabled: option.startsWith('[') && option !== formData[field.name],\n              children: option\n            }, optionIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: field.type === 'sting' ? 'text' : field.type,\n            name: field.name,\n            value: formData[field.name],\n            onChange: handleChange,\n            onFocus: field.name === 'NomEmetteur' ? handleFocus : undefined,\n            onBlur: field.name === 'NomEmetteur' ? handleBlur : undefined,\n            list: field.name === 'NomEmetteur' ? \"emetteur-options\" : undefined,\n            min: field.min,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 17\n          }, this), field.name === 'NomEmetteur' && /*#__PURE__*/_jsxDEV(\"datalist\", {\n            id: \"emetteur-options\",\n            children: emetteurList.map((emetteur, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: emetteur\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)), formData.TypeValidation === 'Bon de Commande' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Num de Bon Commande\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              name: \"NumBonCommande\",\n              value: formData.NumBonCommande,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this)\n        }, void 0, false), formData.ModeReg === 'CHÈQUE' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Num\\xE9ro de Remise\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"NumRemise\",\n              value: formData.NumRemise,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Num\\xE9ro de Ch\\xE8que\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"NumCheque\",\n              value: formData.NumCheque,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Enregistrer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n_s(Invoice, \"KO1antDZoLYKLGV0HIP5/g044hY=\");\n_c = Invoice;\nexport default Invoice;\nvar _c;\n$RefreshReg$(_c, \"Invoice\");","map":{"version":3,"names":["React","useState","axios","Swal","jsxDEV","_jsxDEV","Fragment","_Fragment","Invoice","_s","formData","setFormData","NumFacture","NomClient","NumBonLiv","dateBonLiv","TypeValidation","dateBonCommande","MontantHT","DateFacture","Taux","NomEmetteur","TypeContrat","EtabliPar","EtaPayement","ModeReg","MontantEnc","NumRemise","NumCheque","emetteurList","setEmetteurList","dynamicInputs","setDynamicInputs","handleChange","event","name","value","type","target","prev","handleBlur","e","emetteurs","JSON","parse","localStorage","getItem","includes","push","setItem","stringify","handleFocus","storedEmetteurs","handleSubmit","preventDefault","console","log","response","post","fire","icon","title","text","dateValidation","error","fieldsConfig","label","min","options","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","map","field","index","onChange","required","option","optionIndex","disabled","startsWith","onFocus","undefined","onBlur","list","id","emetteur","idx","NumBonCommande","_c","$RefreshReg$"],"sources":["/home/kawtar/Desktop/Invoice_Project_Frontend/src/Components/Invoice.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../css/invoice.css';\r\nimport axios from '../Components/router/axiosInstance';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst Invoice = () => {\r\n  const [formData, setFormData] = useState({\r\n    NumFacture: \"\",\r\n    NomClient: \"\",\r\n    NumBonLiv: \"\",\r\n    dateBonLiv: \"\",\r\n    TypeValidation: \"\",\r\n    dateBonCommande:\"\",\r\n    MontantHT: \"\",\r\n    DateFacture: \"\",\r\n    Taux: \"\",\r\n   // TVA: \"\",\r\n  //MontantTTC: \"\",\r\n    NomEmetteur: \"\",\r\n    TypeContrat: \"contrat\",\r\n    EtabliPar: \"\",\r\n    EtaPayement: \"PAYEE\",\r\n    ModeReg: \"ESPÈCE\",\r\n    MontantEnc: \"\",\r\n    NumRemise: \"\",\r\n    NumCheque: \"\",\r\n  });\r\n  const [emetteurList, setEmetteurList] = useState([]);\r\n   // État pour suivre les champs qui doivent afficher un input au lieu d'un select\r\n   const [dynamicInputs, setDynamicInputs] = useState({});\r\n\r\n   // Cette version de 'handleChange' distingue les changements d'état entre les ‘select’ et les ‘input’.\r\nconst handleChange = (event) => {\r\n  const { name, value, type } = event.target;\r\n  setFormData(prev => ({ ...prev, [name]: value }));\r\n  \r\n  // Mettre à jour uniquement sur changements provenant d'un élément 'select'\r\n  if (type === 'select-one') {\r\n    setDynamicInputs(prev => ({ ...prev, [name]: value === 'Autre' }));\r\n  }\r\n};\r\n\r\n  \r\n  //    // Gérez la transformation de select en input ici\r\n  //    if (value === 'Autre') {\r\n  //      setDynamicInputs(prev => ({ ...prev, [name]: true }));\r\n  //    } else {\r\n  //      setDynamicInputs(prev => ({ ...prev, [name]: true }));\r\n  //    }\r\n  //  };\r\n  // const handleChange = (e) => {\r\n  //   const { name, value } = e.target;\r\n  //   setFormData(prev => ({\r\n  //     ...prev,\r\n  //     [name]: value\r\n  //   }));\r\n  // };\r\n\r\n\r\n  const handleBlur = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === 'NomEmetteur') {\r\n      let emetteurs = JSON.parse(localStorage.getItem('emetteurs') || '[]');\r\n      if (value && !emetteurs.includes(value)) {\r\n        emetteurs.push(value);\r\n        localStorage.setItem('emetteurs', JSON.stringify(emetteurs));\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleFocus = (e) => {\r\n    const name = e.target.name;\r\n    if (name === 'NomEmetteur') {\r\n      const storedEmetteurs = JSON.parse(localStorage.getItem('emetteurs') || '[]');\r\n      setEmetteurList(storedEmetteurs);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    console.log(formData)\r\n    try {\r\n      const response = await axios.post('http://localhost:8000/api/enregistrerFacture', formData);\r\n      Swal.fire({\r\n        icon: 'success',\r\n        title: 'Enregistrement réussi',\r\n        text: 'Les données ont été enregistrées avec succès.'\r\n      });\r\n      setFormData({\r\n        NumFacture: '',\r\n        NomClient: '',\r\n        NumBonLiv: '',\r\n        dateBonLiv: '',\r\n        TypeValidation: '',\r\n        dateBonCommande:'',\r\n        dateValidation: '',\r\n        MontantHT: '',\r\n        DateFacture: '',\r\n        Taux: '',\r\n        //TVA: '',\r\n        //MontantTTC: '',\r\n        NomEmetteur: '',\r\n        TypeContrat: 'contrat',\r\n        EtabliPar: '',\r\n        EtaPayement: 'PAYEE',\r\n        ModeReg: 'ESPÈCE',\r\n        MontantEnc: '',\r\n        NumRemise: '',\r\n        NumCheque: '',\r\n      });\r\n    } catch (error) {\r\n      console.error('Erreur lors de l\\'enregistrement de la facture:', error);\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Erreur',\r\n        text: 'Une erreur est survenue lors de l\\'enregistrement des données. Veuillez réessayer.'\r\n      });\r\n    }\r\n  };\r\n\r\n  const fieldsConfig = [\r\n    { label: 'Nº de Facture', type: 'text', min: '0', name: 'NumFacture' },\r\n    { label: 'Date de Facture', type: 'date', name: 'DateFacture' },\r\n    { label: 'Nom Client', type: 'text', name: 'NomClient' },\r\n    { label: 'Nº Bon de livraison', type: 'text', min: '0', name: 'NumBonLiv' },\r\n    { label: 'Date de Livraison', type: 'date', name: 'dateBonLiv' },\r\n    { label: 'Type de validation', type: 'select', options: ['[Choisir Type Validation]','WhatsApp', 'Bon de Commande', 'Bon accord','Autre'], name: 'TypeValidation' },\r\n   // { label: 'DatBon de Commande', type: 'date', name: 'dateBonCommande' },\r\n    { label: 'Date de validation', type: 'date', name: 'dateValidation' },\r\n    { label: 'Montant HT', type: 'number', min: '0', name: 'MontantHT' },\r\n    { label: 'Taux', type: 'select',options: ['[Taux %]', '0','20','Autre'], name: 'Taux' },\r\n    { label: 'Emetteur', type: 'text', name: 'NomEmetteur' },\r\n    { label: 'Type de contrat', type: 'select', options: ['[Choisir Type de contrat]', 'contrat', 'Ponctuel','Autre'], name: 'TypeContrat' },\r\n    { label: 'Etablit Par', type: 'text', name: 'EtabliPar' },\r\n    { label: 'PAYEE / IMPAYEE', type: 'select', options: ['[Choisir PAYEE / IMPAYEE]', 'PAYEE', 'IMPAYEE','Autre'], name: 'EtaPayement' },\r\n    { label: 'Mode de reglement', type: 'select', options: ['[MODE DE REGLEMENT]', 'ESPÈCE', 'CHÈQUE', 'VIREMENT','VIREMENT ESPECE','PAR EFFET','Autre'], name: 'ModeReg' },\r\n    { label: 'Montant encaisse', type: 'number', min: '0', name: 'MontantEnc' }\r\n  ];\r\n  \r\n  return (\r\n    <div className='invoice'>\r\n      <center><h1>Nouvelle Facture</h1></center>\r\n      <form className=\"form\" onSubmit={handleSubmit}>\r\n        <div className=\"input-container\">\r\n          {fieldsConfig.map((field, index) => (\r\n            <div key={index} className='item'>\r\n              <label>{field.label}</label>\r\n              {dynamicInputs[field.name] ? (\r\n                <input\r\n                  type=\"text\"\r\n                  name={field.name}\r\n                  value={formData[field.name]}\r\n                  onChange={handleChange}\r\n                  required\r\n                />\r\n                \r\n              ) : field.type === 'select' ? (\r\n                <select\r\n                  className='selectFact'\r\n                  name={field.name}\r\n                  value={formData[field.name]}\r\n                  onChange={handleChange}\r\n                  required\r\n                >\r\n                  {field.options.map((option, optionIndex) => (\r\n                    <option\r\n                      key={optionIndex}\r\n                      value={option}\r\n                      disabled={option.startsWith('[') && option !== formData[field.name]}\r\n                    >\r\n                      {option}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              ) : (\r\n                \r\n                <input\r\n                  type={field.type === 'sting' ? 'text' : field.type}\r\n                  name={field.name}\r\n                  value={formData[field.name]}\r\n                  onChange={handleChange}\r\n                  onFocus={field.name === 'NomEmetteur' ? handleFocus : undefined}\r\n                  onBlur={field.name === 'NomEmetteur' ? handleBlur : undefined}\r\n                  list={field.name === 'NomEmetteur' ? \"emetteur-options\" : undefined}\r\n                  min={field.min}\r\n                  required\r\n                />\r\n              )}\r\n              {field.name === 'NomEmetteur' && (\r\n                <datalist id=\"emetteur-options\">\r\n                  {emetteurList.map((emetteur, idx) => (\r\n                    <option key={idx} value={emetteur} />\r\n                  ))}\r\n                </datalist>\r\n              )}\r\n            </div>\r\n          ))}\r\n          {formData.TypeValidation === 'Bon de Commande' && (\r\n            <>\r\n              <div className='item'>\r\n                <label>Num de Bon Commande</label>\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"NumBonCommande\"\r\n                  value={formData.NumBonCommande}\r\n                  onChange={handleChange}\r\n                  required\r\n                />\r\n              </div>\r\n            </>\r\n          )}\r\n          {/* Champs conditionnels pour le mode de paiement par chèque */}\r\n          {formData.ModeReg === 'CHÈQUE' && (\r\n            <>\r\n              <div className='item'>\r\n                <label>Numéro de Remise</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"NumRemise\"\r\n                  value={formData.NumRemise}\r\n                  onChange={handleChange}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className='item'>\r\n                <label>Numéro de Chèque</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"NumCheque\"\r\n                  value={formData.NumCheque}\r\n                  onChange={handleChange}\r\n                  required\r\n                />\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n        <div className=\"button-container\">\r\n          <button type=\"submit\">Enregistrer</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Invoice;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}