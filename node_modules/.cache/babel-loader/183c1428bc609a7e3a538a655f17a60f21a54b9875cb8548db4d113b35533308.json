{"ast":null,"code":"var _jsxFileName = \"/home/kawtar/Desktop/Invoice_Project_Frontend/src/Components/Login.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { Navigate } from 'react-router-dom';\n// import '../css/Login.css'; // Assurez-vous de créer un fichier Form.css pour les styles\n\n// const Login = () => {\n//   const[email,setEmail]=useState();\n//   const[password,setPassword]=useState();\n//   const[redirect,setRedirect]=useState();\n\n//   const submit = async (e) => {\n//     e.preventDefault();\n//     await fetch(\n//         'http://localhost:8000/api/login',\n//         {\n//             method:'POST',\n//             headers:{'content-Type':'application/json'},\n//             credentials:'include',\n//             body:JSON.stringify(\n//                 {\n//                     email,\n//                     password\n//                 }\n//             )\n//         }\n//     )\n\n//     setRedirect(true);\n//   }\n\n//   if(redirect){\n//     return <Navigate to=\"/Visualiser\" />\n//   }\n\n//   return (\n//     <div className=\"Mycontainer Main-login\">\n//       <div className=\"Mycolumn bg-image image\">\n//       </div>\n//       <div className=\"Mycolumn\">\n//             <div className='login'>\n//                 <h3 class=\"display-4\">Se connecter</h3>\n//                 <p class=\"text-muted mb-4\">Merci de remplire vos donnees </p>\n//                 <form onSubmit={submit}>\n//                     <div class=\"MyMyform-group mb-3\">\n//                         <input id=\"inputEmail\" type=\"email\" placeholder=\"Email address\" required=\"\" autofocus=\"\" class=\"form-control rounded-pill border-0 shadow-sm px-4\" onChange={(e)=>setEmail(e.target.value)}/>\n//                     </div>\n//                     <div class=\"MyMyform-group mb-3\">\n//                         <input id=\"inputPassword\" type=\"password\" placeholder=\"Password\" required=\"\" class=\"form-control rounded-pill border-0 shadow-sm px-4 text-primary\" onChange={(e)=>setPassword(e.target.value)}/>\n//                     </div>\n//                     <div class=\"Myform-group Myform-check mb-3\">\n//                         <input id=\"rememberMe\" type=\"checkbox\" class=\"form-check-input\"/>\n//                         <label for=\"rememberMe\" class=\"form-check-label\">Se souvenir de moi</label>\n//                     </div>\n//                     <button type=\"submit\" class=\"Mybtn \">SIGN IN</button>\n//                 </form>\n//             </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Login;\n\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import axios from 'axios';\n// import { useAuth } from '../ProtectionComponent/auth-context';\n// import '../css/Login.css'; // Ensure the CSS file exists for styling\n\n// const Login = () => {\n//   const { isLogin } = useAuth();\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [Error,setError]=useState('');\n//   const navigate = useNavigate();\n\n//   const submit = async (e) => {\n//     e.preventDefault();\n//     const response = await fetch(\n//         'http://localhost:8000/api/login',\n//         {\n//             method: 'POST',\n//             headers: { 'Content-Type': 'application/json' },\n//             credentials: 'include',\n//             body: JSON.stringify({ email, password })\n//         }\n//     );\n\n//     if (response.ok) {\n//       // const token = response.data.token;\n//       // document.cookie = token=token; \n\n//       const data = await response.json();\n//       isLogin(data.jwt);\n//       navigate('/Visualiser'); // Navigate to another route      \n//     } else {\n//       alert(\"Login failed! Check your credentials.\");\n//     }\n//   }\n\n//   return (\n//     <div className=\"Mycontainer Main-login\">\n//       <div className=\"Mycolumn bg-image image\"></div>\n//       <div className=\"Mycolumn\">\n//         <div className='login'>\n//             <h3 className=\"display-4\">Se connecter</h3>\n//             <p className=\"text-muted mb-4\">Merci de remplir vos données</p>\n//             <form onSubmit={submit}>\n//                 <div className=\"MyMyform-group mb-3\">\n//                     <input id=\"inputEmail\" type=\"email\" placeholder=\"Email address\" required=\"\" autofocus=\"\" className=\"form-control rounded-pill border-0 shadow-sm px-4\" onChange={(e) => setEmail(e.target.value)} />\n//                 </div>\n//                 <div className=\"MyMyform-group mb-3\">\n//                     <input id=\"inputPassword\" type=\"password\" placeholder=\"Password\" required=\"\" className=\"form-control rounded-pill border-0 shadow-sm px-4 text-primary\" onChange={(e) => setPassword(e.target.value)} />\n//                 </div>\n//                 <div className=\"Myform-group Myform-check mb-3\">\n//                     <input id=\"rememberMe\" type=\"checkbox\" className=\"form-check-input\" />\n//                     <label htmlFor=\"rememberMe\" className=\"form-check-label\">Se souvenir de moi</label>\n//                 </div>\n//                 <button type=\"submit\" className=\"Mybtn \">SIGN IN</button>\n//             </form>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Login\n\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { useAuth } from '../ProtectionComponent/auth-context';\n// import '../css/Login.css'; // Ensure the CSS file exists for styling\n\n// const Login = () => {\n//   const { isLogin } = useAuth();\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [error, setError] = useState('');\n//   const [showPassword, setShowPassword] = useState(false); // State to toggle password visibility\n//   const navigate = useNavigate();\n\n//   const submit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await fetch(\n//         'http://localhost:8000/api/login',\n//         {\n//           method: 'POST',\n//           headers: { 'Content-Type': 'application/json' },\n//           credentials: 'include',\n//           body: JSON.stringify({ email, password })\n//         }\n//       );\n\n//       if (response.ok) {\n//         const data = await response.json();\n//         isLogin(data.jwt);\n//         navigate('/Visualiser');\n//       } else {\n//         setError('Email ou mot de passe incorrect.');\n//       }\n//     } catch (err) {\n//       setError('Login failed due to server error');\n//     }\n//   }\n\n//   const toggleShowPassword = () => {\n//     setShowPassword(!showPassword);\n//   }\n\n//   return (\n//     <div className=\"Mycontainer Main-login\">\n//       <div className=\"Mycolumn bg-image image\"></div>\n//       <div className=\"Mycolumn\">\n//         <div className='login'>\n//           <h3 className=\"display-4\">Se connecter</h3>\n//           <p className=\"text-muted mb-4\">Merci de remplir vos données</p>\n//           <form onSubmit={submit}>\n//             <div className=\"MyMyform-group mb-3\">\n//               <input\n//                 id=\"inputEmail\"\n//                 type=\"email\"\n//                 placeholder=\"Email address\"\n//                 required\n//                 autoFocus\n//                 className={`form-control rounded-pill border-0 shadow-sm px-4 ${error ? 'is-invalid' : ''}`}\n//                 onChange={(e) => setEmail(e.target.value)}\n//               />\n//             </div>\n//             <div className=\"MyMyform-group mb-3\">\n//               <input\n//                 id=\"inputPassword\"\n//                 type={showPassword ? \"text\" : \"password\"}\n//                 placeholder=\"Password\"\n//                 required\n//                 className={`form-control rounded-pill border-0 shadow-sm px-4 text-primary ${error ? 'is-invalid' : ''}`}\n//                 onChange={(e) => setPassword(e.target.value)}\n//               />\n//               {error && <div className=\"invalid-feedback\">{error}</div>}\n//             </div>\n//             <div className=\"Myform-group Myform-check mb-3\">\n//               <input \n//                 id=\"AfficherMdp\" \n//                 type=\"checkbox\" \n//                 className=\"form-check-input\" \n//                 onChange={toggleShowPassword}\n//               />\n//               <label htmlFor=\"AfficherMdp\" className=\"form-check-label\">Afficher le mot de passe</label>\n//             </div>\n//             <button type=\"submit\" className=\"Mybtn\">SIGN IN</button>\n//           </form>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Login;\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { setToken } from './router/auth';\nimport '../css/Login.css'; // Ensure the CSS file exists for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState('');\n  const [showPassword, setShowPassword] = useState(false); // State to toggle password visibility\n  const navigate = useNavigate();\n  const submit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:8000/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setToken(data.jwt);\n        navigate('/Visualiser');\n      } else {\n        setError('Email ou mot de passe incorrect.');\n      }\n    } catch (err) {\n      setError('Login failed due to server error');\n    }\n  };\n  const toggleShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Mycontainer Main-login\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Mycolumn bg-image image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Mycolumn\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"display-4\",\n          children: \"Se connecter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-muted mb-4\",\n          children: \"Merci de remplir vos donn\\xE9es\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: submit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"MyMyform-group mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"inputEmail\",\n              type: \"email\",\n              placeholder: \"Email address\",\n              required: true,\n              autoFocus: true,\n              className: `form-control rounded-pill border-0 shadow-sm px-4 ${error ? 'is-invalid' : ''}`,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"MyMyform-group mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"inputPassword\",\n              type: showPassword ? \"text\" : \"password\",\n              placeholder: \"Password\",\n              required: true,\n              className: `form-control rounded-pill border-0 shadow-sm px-4 text-primary ${error ? 'is-invalid' : ''}`,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invalid-feedback\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Myform-group Myform-check mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"AfficherMdp\",\n              type: \"checkbox\",\n              className: \"form-check-input\",\n              onChange: toggleShowPassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"AfficherMdp\",\n              className: \"form-check-label\",\n              children: \"Afficher le mot de passe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"Mybtn\",\n            children: \"SIGN IN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 268,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"YIUeGH0cxes1uCGCJgXhyePBTZA=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","setToken","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","error","setError","showPassword","setShowPassword","navigate","submit","e","preventDefault","response","fetch","method","headers","credentials","body","JSON","stringify","ok","data","json","jwt","err","toggleShowPassword","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","id","type","placeholder","required","autoFocus","onChange","target","value","htmlFor","_c","$RefreshReg$"],"sources":["/home/kawtar/Desktop/Invoice_Project_Frontend/src/Components/Login.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { Navigate } from 'react-router-dom';\r\n// import '../css/Login.css'; // Assurez-vous de créer un fichier Form.css pour les styles\r\n\r\n// const Login = () => {\r\n//   const[email,setEmail]=useState();\r\n//   const[password,setPassword]=useState();\r\n//   const[redirect,setRedirect]=useState();\r\n\r\n//   const submit = async (e) => {\r\n//     e.preventDefault();\r\n//     await fetch(\r\n//         'http://localhost:8000/api/login',\r\n//         {\r\n//             method:'POST',\r\n//             headers:{'content-Type':'application/json'},\r\n//             credentials:'include',\r\n//             body:JSON.stringify(\r\n//                 {\r\n//                     email,\r\n//                     password\r\n//                 }\r\n//             )\r\n//         }\r\n//     )\r\n\r\n//     setRedirect(true);\r\n//   }\r\n\r\n\r\n//   if(redirect){\r\n//     return <Navigate to=\"/Visualiser\" />\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"Mycontainer Main-login\">\r\n//       <div className=\"Mycolumn bg-image image\">\r\n//       </div>\r\n//       <div className=\"Mycolumn\">\r\n//             <div className='login'>\r\n//                 <h3 class=\"display-4\">Se connecter</h3>\r\n//                 <p class=\"text-muted mb-4\">Merci de remplire vos donnees </p>\r\n//                 <form onSubmit={submit}>\r\n//                     <div class=\"MyMyform-group mb-3\">\r\n//                         <input id=\"inputEmail\" type=\"email\" placeholder=\"Email address\" required=\"\" autofocus=\"\" class=\"form-control rounded-pill border-0 shadow-sm px-4\" onChange={(e)=>setEmail(e.target.value)}/>\r\n//                     </div>\r\n//                     <div class=\"MyMyform-group mb-3\">\r\n//                         <input id=\"inputPassword\" type=\"password\" placeholder=\"Password\" required=\"\" class=\"form-control rounded-pill border-0 shadow-sm px-4 text-primary\" onChange={(e)=>setPassword(e.target.value)}/>\r\n//                     </div>\r\n//                     <div class=\"Myform-group Myform-check mb-3\">\r\n//                         <input id=\"rememberMe\" type=\"checkbox\" class=\"form-check-input\"/>\r\n//                         <label for=\"rememberMe\" class=\"form-check-label\">Se souvenir de moi</label>\r\n//                     </div>\r\n//                     <button type=\"submit\" class=\"Mybtn \">SIGN IN</button>\r\n//                 </form>\r\n//             </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Login;\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import axios from 'axios';\r\n// import { useAuth } from '../ProtectionComponent/auth-context';\r\n// import '../css/Login.css'; // Ensure the CSS file exists for styling\r\n\r\n// const Login = () => {\r\n//   const { isLogin } = useAuth();\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [Error,setError]=useState('');\r\n//   const navigate = useNavigate();\r\n\r\n  \r\n\r\n//   const submit = async (e) => {\r\n//     e.preventDefault();\r\n//     const response = await fetch(\r\n//         'http://localhost:8000/api/login',\r\n//         {\r\n//             method: 'POST',\r\n//             headers: { 'Content-Type': 'application/json' },\r\n//             credentials: 'include',\r\n//             body: JSON.stringify({ email, password })\r\n//         }\r\n//     );\r\n\r\n//     if (response.ok) {\r\n//       // const token = response.data.token;\r\n//       // document.cookie = token=token; \r\n\r\n//       const data = await response.json();\r\n//       isLogin(data.jwt);\r\n//       navigate('/Visualiser'); // Navigate to another route      \r\n//     } else {\r\n//       alert(\"Login failed! Check your credentials.\");\r\n//     }\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"Mycontainer Main-login\">\r\n//       <div className=\"Mycolumn bg-image image\"></div>\r\n//       <div className=\"Mycolumn\">\r\n//         <div className='login'>\r\n//             <h3 className=\"display-4\">Se connecter</h3>\r\n//             <p className=\"text-muted mb-4\">Merci de remplir vos données</p>\r\n//             <form onSubmit={submit}>\r\n//                 <div className=\"MyMyform-group mb-3\">\r\n//                     <input id=\"inputEmail\" type=\"email\" placeholder=\"Email address\" required=\"\" autofocus=\"\" className=\"form-control rounded-pill border-0 shadow-sm px-4\" onChange={(e) => setEmail(e.target.value)} />\r\n//                 </div>\r\n//                 <div className=\"MyMyform-group mb-3\">\r\n//                     <input id=\"inputPassword\" type=\"password\" placeholder=\"Password\" required=\"\" className=\"form-control rounded-pill border-0 shadow-sm px-4 text-primary\" onChange={(e) => setPassword(e.target.value)} />\r\n//                 </div>\r\n//                 <div className=\"Myform-group Myform-check mb-3\">\r\n//                     <input id=\"rememberMe\" type=\"checkbox\" className=\"form-check-input\" />\r\n//                     <label htmlFor=\"rememberMe\" className=\"form-check-label\">Se souvenir de moi</label>\r\n//                 </div>\r\n//                 <button type=\"submit\" className=\"Mybtn \">SIGN IN</button>\r\n//             </form>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Login\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { useAuth } from '../ProtectionComponent/auth-context';\r\n// import '../css/Login.css'; // Ensure the CSS file exists for styling\r\n\r\n// const Login = () => {\r\n//   const { isLogin } = useAuth();\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [error, setError] = useState('');\r\n//   const [showPassword, setShowPassword] = useState(false); // State to toggle password visibility\r\n//   const navigate = useNavigate();\r\n\r\n//   const submit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const response = await fetch(\r\n//         'http://localhost:8000/api/login',\r\n//         {\r\n//           method: 'POST',\r\n//           headers: { 'Content-Type': 'application/json' },\r\n//           credentials: 'include',\r\n//           body: JSON.stringify({ email, password })\r\n//         }\r\n//       );\r\n\r\n//       if (response.ok) {\r\n//         const data = await response.json();\r\n//         isLogin(data.jwt);\r\n//         navigate('/Visualiser');\r\n//       } else {\r\n//         setError('Email ou mot de passe incorrect.');\r\n//       }\r\n//     } catch (err) {\r\n//       setError('Login failed due to server error');\r\n//     }\r\n//   }\r\n\r\n//   const toggleShowPassword = () => {\r\n//     setShowPassword(!showPassword);\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"Mycontainer Main-login\">\r\n//       <div className=\"Mycolumn bg-image image\"></div>\r\n//       <div className=\"Mycolumn\">\r\n//         <div className='login'>\r\n//           <h3 className=\"display-4\">Se connecter</h3>\r\n//           <p className=\"text-muted mb-4\">Merci de remplir vos données</p>\r\n//           <form onSubmit={submit}>\r\n//             <div className=\"MyMyform-group mb-3\">\r\n//               <input\r\n//                 id=\"inputEmail\"\r\n//                 type=\"email\"\r\n//                 placeholder=\"Email address\"\r\n//                 required\r\n//                 autoFocus\r\n//                 className={`form-control rounded-pill border-0 shadow-sm px-4 ${error ? 'is-invalid' : ''}`}\r\n//                 onChange={(e) => setEmail(e.target.value)}\r\n//               />\r\n//             </div>\r\n//             <div className=\"MyMyform-group mb-3\">\r\n//               <input\r\n//                 id=\"inputPassword\"\r\n//                 type={showPassword ? \"text\" : \"password\"}\r\n//                 placeholder=\"Password\"\r\n//                 required\r\n//                 className={`form-control rounded-pill border-0 shadow-sm px-4 text-primary ${error ? 'is-invalid' : ''}`}\r\n//                 onChange={(e) => setPassword(e.target.value)}\r\n//               />\r\n//               {error && <div className=\"invalid-feedback\">{error}</div>}\r\n//             </div>\r\n//             <div className=\"Myform-group Myform-check mb-3\">\r\n//               <input \r\n//                 id=\"AfficherMdp\" \r\n//                 type=\"checkbox\" \r\n//                 className=\"form-check-input\" \r\n//                 onChange={toggleShowPassword}\r\n//               />\r\n//               <label htmlFor=\"AfficherMdp\" className=\"form-check-label\">Afficher le mot de passe</label>\r\n//             </div>\r\n//             <button type=\"submit\" className=\"Mybtn\">SIGN IN</button>\r\n//           </form>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Login;\r\n\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { setToken } from './router/auth';\r\nimport '../css/Login.css'; // Ensure the CSS file exists for styling\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState('');\r\n  const [showPassword, setShowPassword] = useState(false); // State to toggle password visibility\r\n  const navigate = useNavigate();\r\n\r\n  const submit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch(\r\n        'http://localhost:8000/api/login',\r\n        {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          credentials: 'include',\r\n          body: JSON.stringify({ email, password })\r\n        }\r\n      );\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setToken(data.jwt);\r\n        navigate('/Visualiser');\r\n      } else {\r\n        setError('Email ou mot de passe incorrect.');\r\n      }\r\n    } catch (err) {\r\n      setError('Login failed due to server error');\r\n    }\r\n  }\r\n\r\n  const toggleShowPassword = () => {\r\n    setShowPassword(!showPassword);\r\n  }\r\n\r\n  return (\r\n    <div className=\"Mycontainer Main-login\">\r\n      <div className=\"Mycolumn bg-image image\"></div>\r\n      <div className=\"Mycolumn\">\r\n        <div className='login'>\r\n          <h3 className=\"display-4\">Se connecter</h3>\r\n          <p className=\"text-muted mb-4\">Merci de remplir vos données</p>\r\n          <form onSubmit={submit}>\r\n            <div className=\"MyMyform-group mb-3\">\r\n              <input\r\n                id=\"inputEmail\"\r\n                type=\"email\"\r\n                placeholder=\"Email address\"\r\n                required\r\n                autoFocus\r\n                className={`form-control rounded-pill border-0 shadow-sm px-4 ${error ? 'is-invalid' : ''}`}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"MyMyform-group mb-3\">\r\n              <input\r\n                id=\"inputPassword\"\r\n                type={showPassword ? \"text\" : \"password\"}\r\n                placeholder=\"Password\"\r\n                required\r\n                className={`form-control rounded-pill border-0 shadow-sm px-4 text-primary ${error ? 'is-invalid' : ''}`}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n              {error && <div className=\"invalid-feedback\">{error}</div>}\r\n            </div>\r\n            <div className=\"Myform-group Myform-check mb-3\">\r\n              <input \r\n                id=\"AfficherMdp\" \r\n                type=\"checkbox\" \r\n                className=\"form-check-input\" \r\n                onChange={toggleShowPassword}\r\n              />\r\n              <label htmlFor=\"AfficherMdp\" className=\"form-check-label\">Afficher le mot de passe</label>\r\n            </div>\r\n            <button type=\"submit\" className=\"Mybtn\">SIGN IN</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,QAAQ,QAAQ,eAAe;AACxC,OAAO,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;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"},"metadata":{},"sourceType":"module","externalDependencies":[]}