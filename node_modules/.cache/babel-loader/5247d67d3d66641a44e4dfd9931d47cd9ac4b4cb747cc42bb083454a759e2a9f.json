{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus ZenBook 14\\\\Desktop\\\\My-github\\\\Invoice Project\\\\src\\\\Components\\\\GestionComptes\\\\GestionCompte.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import '../../css/GestionCompte.css'; // Assurez-vous d'avoir ce fichier CSS dans le même dossier\n\n// const GestionCompte = () => {\n//   return (\n//     <div className=\"container GestionCompte\">\n//       <div className=\"box add\">\n//         <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"6em\" height=\"6em\" viewBox=\"0 0 24 24\"><path fill=\"none\" stroke=\"white\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M17 10h3m3 0h-3m0 0V7m0 3v3M1 20v-1a7 7 0 0 1 7-7v0a7 7 0 0 1 7 7v1m-7-8a4 4 0 1 0 0-8a4 4 0 0 0 0 8\"></path></svg>\n//         <div>Ajouter un utilisateur</div>\n//       </div>\n//       <div className=\"box management\">\n//       <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"5em\" height=\"5em\" viewBox=\"0 0 2048 2048\"><path fill=\"white\" d=\"M1148 1152q-83-62-179-95t-201-33q-88 0-170 23t-153 64t-129 100t-100 130t-65 153t-23 170H0q0-120 35-231t101-205t156-167t204-115q-56-35-100-82t-76-104t-47-119t-17-129q0-106 40-199t110-162T569 41T768 0t199 40t162 110t110 163t41 199q0 66-16 129t-48 119t-76 103t-101 83q60 23 113 54v152zM384 512q0 80 30 149t82 122t122 83t150 30q79 0 149-30t122-82t83-122t30-150q0-79-30-149t-82-122t-123-83t-149-30q-80 0-149 30t-122 82t-83 123t-30 149m1664 768v768H1024v-768h256v-256h512v256zm-640 0h256v-128h-256zm512 384h-128v128h-128v-128h-256v128h-128v-128h-128v256h768zm0-256h-768v128h768z\"></path></svg>\n//       <div>Editer les comptes</div>\n//       </div>\n//       <div className=\"box add-emmetteur\">\n//       <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"5em\" height=\"5em\" viewBox=\"0 0 24 24\"><path fill=\"white\" d=\"M3 6h13c.55 0 1-.45 1-1s-.45-1-1-1H3c-.55 0-1 .45-1 1s.45 1 1 1m12 11h2v-3h.18c.63 0 1.1-.58.98-1.2l-1-5c-.09-.46-.5-.8-.98-.8H2.82c-.48 0-.89.34-.98.8l-1 5c-.12.62.35 1.2.98 1.2H2v5c0 .55.45 1 1 1h7c.55 0 1-.45 1-1v-5h4zm-6 1H4v-4h5z\"></path><path fill=\"white\" d=\"M22 18h-2v-2c0-.55-.45-1-1-1s-1 .45-1 1v2h-2c-.55 0-1 .45-1 1s.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1v-2h2c.55 0 1-.45 1-1s-.45-1-1-1\"></path></svg><div>Ajouter un émetteur</div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default GestionCompte;\n\n// import React, { useState } from 'react';\n// import '../../css/GestionCompte.css'; // Assurez-vous d'avoir ce fichier CSS dans le même dossier\n\n// const GestionCompte = () => {\n//   const [formVisible, setFormVisible] = useState(false);\n//   const [activeBoxId, setActiveBoxId] = useState(null);\n\n//   const handleBoxClick = (boxId) => {\n//     setActiveBoxId(boxId);  // Définit l'ID de la boîte active\n//   };\n\n//   const toggleFormVisibility = () => {\n//     setFormVisible(!formVisible);\n//   }\n\n//   return (\n//     <div className=\"GestionCompte\">\n//       <div className={`container ${formVisible ? \"smaller\" : \"\"}`}>\n//         <div className=\"box add\" onClick={toggleFormVisibility}>\n//             <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"6em\" height=\"6em\" viewBox=\"0 0 24 24\"><path fill=\"none\" stroke=\"white\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M17 10h3m3 0h-3m0 0V7m0 3v3M1 20v-1a7 7 0 0 1 7-7v0a7 7 0 0 1 7 7v1m-7-8a4 4 0 1 0 0-8a4 4 0 0 0 0 8\"></path></svg>\n//             <div>Créer un utilisateur</div>\n//         </div>\n//         <div className=\"box management\" onClick={toggleFormVisibility}>\n//             <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"4em\" height=\"5em\" viewBox=\"0 0 2048 2048\"><path fill=\"white\" d=\"M1148 1152q-83-62-179-95t-201-33q-88 0-170 23t-153 64t-129 100t-100 130t-65 153t-23 170H0q0-120 35-231t101-205t156-167t204-115q-56-35-100-82t-76-104t-47-119t-17-129q0-106 40-199t110-162T569 41T768 0t199 40t162 110t110 163t41 199q0 66-16 129t-48 119t-76 103t-101 83q60 23 113 54v152zM384 512q0 80 30 149t82 122t122 83t150 30q79 0 149-30t122-82t83-122t30-150q0-79-30-149t-82-122t-123-83t-149-30q-80 0-149 30t-122 82t-83 123t-30 149m1664 768v768H1024v-768h256v-256h512v256zm-640 0h256v-128h-256zm512 384h-128v128h-128v-128h-256v128h-128v-128h-128v256h768zm0-256h-768v128h768z\"></path></svg>\n//            <div>Gérer</div>\n//         </div>\n//         <div className=\"box add-emmetteur\" onClick={toggleFormVisibility}>\n//             <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"5em\" height=\"5em\" viewBox=\"0 0 24 24\"><path fill=\"white\" d=\"M3 6h13c.55 0 1-.45 1-1s-.45-1-1-1H3c-.55 0-1 .45-1 1s.45 1 1 1m12 11h2v-3h.18c.63 0 1.1-.58.98-1.2l-1-5c-.09-.46-.5-.8-.98-.8H2.82c-.48 0-.89.34-.98.8l-1 5c-.12.62.35 1.2.98 1.2H2v5c0 .55.45 1 1 1h7c.55 0 1-.45 1-1v-5h4zm-6 1H4v-4h5z\"></path><path fill=\"white\" d=\"M22 18h-2v-2c0-.55-.45-1-1-1s-1 .45-1 1v2h-2c-.55 0-1 .45-1 1s.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1v-2h2c.55 0 1-.45 1-1s-.45-1-1-1\"></path></svg>\n//             <div>Ajouter un émetteur</div>\n//         </div>\n//       </div>\n//       {formVisible && (\n// <form className=\"form\">\n//   <input type=\"text\" placeholder=\"Nom\" required />\n//   <input type=\"email\" placeholder=\"Adresse Email\" required />\n//   <input type=\"password\" placeholder=\"Mot de passe\" required />\n//   <input type=\"password\" placeholder=\"Mot de passe\" required />\n//   <button type=\"submit\">Enregistrer</button>\n// </form>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default GestionCompte;\n\n// import React, { useState } from 'react';\n// import '../../css/GestionCompte.css'; // Assurez-vous d'avoir ce fichier CSS dans le même dossier\n\n// const GestionCompte = () => {\n//   const [formVisible, setFormVisible] = useState(false);\n//   const [TableVisible, setTableVisible] = useState(false);\n//   const [activeBoxId, setActiveBoxId] = useState(null);\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const [itemsPerPage] = useState(5); \n//   const [users, setUsers] = useState([\n//     { id: 1, name: \"Alice\", email: \"alice@example.com\", password: \"password123\" ,},\n//     { id: 2, name: \"Bob\", email: \"bob@example.com\", password: \"password456\" },\n//     { id: 3, name: \"Carol\", email: \"carol@example.com\", password: \"password789\" },\n//     { id: 1, name: \"Alice\", email: \"alice@example.com\", password: \"password123\" ,},\n//     { id: 2, name: \"Bob\", email: \"bob@example.com\", password: \"password456\" },\n//     { id: 3, name: \"Carol\", email: \"carol@example.com\", password: \"password789\" },\n//     { id: 1, name: \"Alice\", email: \"alice@example.com\", password: \"password123\" ,},\n//     { id: 2, name: \"Bob\", email: \"bob@example.com\", password: \"password456\" },\n//     { id: 3, name: \"Carol\", email: \"carol@example.com\", password: \"password789\" },\n//     { id: 1, name: \"Alice\", email: \"alice@example.com\", password: \"password123\" ,},\n//     { id: 2, name: \"Bob\", email: \"bob@example.com\", password: \"password456\" },\n//     { id: 3, name: \"Carol\", email: \"carol@example.com\", password: \"password789\" },\n//     { id: 1, name: \"Alice\", email: \"alice@example.com\", password: \"password123\" ,},\n//     { id: 2, name: \"Bob\", email: \"bob@example.com\", password: \"password456\" },\n//     { id: 3, name: \"Carol\", email: \"carol@example.com\", password: \"password789\" },\n//     { id: 1, name: \"Alice\", email: \"alice@example.com\", password: \"password123\" ,},\n//     { id: 2, name: \"Bob\", email: \"bob@example.com\", password: \"password456\" },\n//     { id: 3, name: \"Carol\", email: \"carol@example.com\", password: \"password789\" },\n//     { id: 1, name: \"Alice\", email: \"alice@example.com\", password: \"password123\" ,},\n//     { id: 2, name: \"Bob\", email: \"bob@example.com\", password: \"password456\" },\n//     { id: 3, name: \"Carol\", email: \"carol@example.com\", password: \"password789\" },\n//     { id: 1, name: \"Alice\", email: \"alice@example.com\", password: \"password123\" ,},\n//     { id: 2, name: \"Bob\", email: \"bob@example.com\", password: \"password456\" },\n//     { id: 3, name: \"Carol\", email: \"carol@example.com\", password: \"password789\" }\n//    ]);\n\n//     // Calculate the last item on the current page\n//     const indexOfLastItem = currentPage * itemsPerPage;\n//     const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n//     const currentItems = users.slice(indexOfFirstItem, indexOfLastItem);\n\n//     // Change page\n//     const paginate = (pageNumber) => setCurrentPage(pageNumber);\n//     const nextPage = () => setCurrentPage(prev => (prev < pageNumbers.length ? prev + 1 : prev));\n//     const previousPage = () => setCurrentPage(prev => (prev > 1 ? prev - 1 : prev));\n\n//     const pageNumbers = [];\n//     for (let i = 1; i <= Math.ceil(users.length / itemsPerPage); i++) {\n//         pageNumbers.push(i);\n//     }\n\n//     const handleBoxClick = (boxId) => {\n//     setActiveBoxId(boxId);  // Sets the active box ID\n\n//     if (boxId === 'create') {\n//         setTableVisible(false);\n//         setFormVisible(true);  // Shows the form when a box is clicked\n//     } else if (boxId === 'manage') {\n//         setFormVisible(false);\n//         setTableVisible(true);  // Assumes there is a similar hook for table visibility\n//     }\n//     // No need for an else block if there are no other actions to perform\n//     };\n\n//   return (\n//     <div className=\"GestionCompte\">\n//       <div className={`container ${formVisible ? \"smaller\" : \"\"}`}>\n//         <div className={`box add ${activeBoxId === 'create' ? 'active' : ''} ${activeBoxId !== null ? 'active-top' : ''}`} onClick={() => handleBoxClick('create')}>\n//             <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"4em\" height=\"4em\" viewBox=\"0 0 24 24\"><path fill=\"none\" stroke=\"white\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M17 10h3m3 0h-3m0 0V7m0 3v3M1 20v-1a7 7 0 0 1 7-7v0a7 7 0 0 1 7 7v1m-7-8a4 4 0 1 0 0-8a4 4 0 0 0 0 8\"></path></svg>           \n//             <div>Créer un utilisateur</div>\n//         </div>\n//         <div className={`box management ${activeBoxId === 'manage' ? 'active' : ''} ${activeBoxId !== null ? 'active-top' : ''}`} onClick={() => handleBoxClick('manage')}>\n//             <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"4em\" height=\"5em\" viewBox=\"0 0 2048 2048\"><path fill=\"white\" d=\"M1148 1152q-83-62-179-95t-201-33q-88 0-170 23t-153 64t-129 100t-100 130t-65 153t-23 170H0q0-120 35-231t101-205t156-167t204-115q-56-35-100-82t-76-104t-47-119t-17-129q0-106 40-199t110-162T569 41T768 0t199 40t162 110t110 163t41 199q0 66-16 129t-48 119t-76 103t-101 83q60 23 113 54v152zM384 512q0 80 30 149t82 122t122 83t150 30q79 0 149-30t122-82t83-122t30-150q0-79-30-149t-82-122t-123-83t-149-30q-80 0-149 30t-122 82t-83 123t-30 149m1664 768v768H1024v-768h256v-256h512v256zm-640 0h256v-128h-256zm512 384h-128v128h-128v-128h-256v128h-128v-128h-128v256h768zm0-256h-768v128h768z\"></path></svg>  \n//             <div>Editer les comptes</div>\n//         </div>\n\n//       </div>\n//       {formVisible && (\n//         <form className=\"form\">\n//             <div className=\"form-row\">\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"nom\">Nom</label>\n//                     <input id=\"nom\" type=\"text\" placeholder=\"Nom\" required />\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"email\">Adresse Email</label>\n//                     <input id=\"email\" type=\"email\" placeholder=\"Adresse Email\" required />\n//                 </div>\n//             </div>\n//             <div className=\"form-row\">\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"password1\">Mot de passe</label>\n//                     <input id=\"password1\" type=\"password\" placeholder=\"Mot de passe\" required />\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"password2\">Confirmer le mot de passe</label>\n//                     <input id=\"password2\" type=\"password\" placeholder=\"Mot de passe\" required />\n//                 </div>\n//             </div>\n//             <button type=\"submit\">Enregistrer</button>\n//         </form>\n//       )}\n\n//       {TableVisible && (\n//         <>\n//                     <table className=\"user-table\">\n//                         <thead>\n//                             <tr>\n//                                 <th>Name</th>\n//                                 <th>Email</th>\n//                                 <th>Password</th>\n//                                 <th>Actions</th>\n//                             </tr>\n//                         </thead>\n//                         <tbody>\n//                             {currentItems.map(user => (\n//                                 <tr key={user.id}>\n//                                     <td>{user.name}</td>\n//                                     <td>{user.email}</td>\n//                                     <td>{user.password}</td>\n//                                     <td>\n//                                         <div className=\"action-icons\">\n//                                             {/* SVGs here */}\n//                                         </div>\n//                                     </td>\n//                                 </tr>\n//                             ))}\n//                         </tbody>\n//                     </table>\n//                     <div className=\"pagination\">\n//                         <button onClick={previousPage} disabled={currentPage === 1}>Previous</button>\n//                         {pageNumbers.map(number => (\n//                             <button key={number} className={currentPage === number ? 'active' : ''} onClick={() => paginate(number)}>\n//                                 {number}\n//                             </button>\n//                         ))}\n//                         <button onClick={nextPage} disabled={currentPage === pageNumbers.length}>Next</button>\n//                     </div>\n//                 </>\n//         )}\n//     </div>\n//   );\n// }\n\n// export default GestionCompte;\n\nimport React, { useState } from 'react';\nimport '../../css/GestionCompte.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GestionCompte = () => {\n  _s();\n  const [formVisible, setFormVisible] = useState(false);\n  const [TableVisible, setTableVisible] = useState(false);\n  const [activeBoxId, setActiveBoxId] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(5);\n  const [users, setUsers] = useState([{\n    id: 1,\n    name: \"Alice\",\n    email: \"alice@example.com\",\n    password: \"password123\"\n  }, {\n    id: 2,\n    name: \"Bob\",\n    email: \"bob@example.com\",\n    password: \"password456\"\n  }, {\n    id: 3,\n    name: \"Carol\",\n    email: \"carol@example.com\",\n    password: \"password789\"\n  }, {\n    id: 1,\n    name: \"Alice\",\n    email: \"alice@example.com\",\n    password: \"password123\"\n  }, {\n    id: 2,\n    name: \"Bob\",\n    email: \"bob@example.com\",\n    password: \"password456\"\n  }, {\n    id: 3,\n    name: \"Carol\",\n    email: \"carol@example.com\",\n    password: \"password789\"\n  }, {\n    id: 1,\n    name: \"Alice\",\n    email: \"alice@example.com\",\n    password: \"password123\"\n  }, {\n    id: 2,\n    name: \"Bob\",\n    email: \"bob@example.com\",\n    password: \"password456\"\n  }, {\n    id: 3,\n    name: \"Carol\",\n    email: \"carol@example.com\",\n    password: \"password789\"\n  }, {\n    id: 1,\n    name: \"Alice\",\n    email: \"alice@example.com\",\n    password: \"password123\"\n  }, {\n    id: 2,\n    name: \"Bob\",\n    email: \"bob@example.com\",\n    password: \"password456\"\n  }, {\n    id: 3,\n    name: \"Carol\",\n    email: \"carol@example.com\",\n    password: \"password789\"\n  }, {\n    id: 1,\n    name: \"Alice\",\n    email: \"alice@example.com\",\n    password: \"password123\"\n  }, {\n    id: 2,\n    name: \"Bob\",\n    email: \"bob@example.com\",\n    password: \"password456\"\n  }, {\n    id: 3,\n    name: \"Carol\",\n    email: \"carol@example.com\",\n    password: \"password789\"\n  }, {\n    id: 1,\n    name: \"Alice\",\n    email: \"alice@example.com\",\n    password: \"password123\"\n  }, {\n    id: 2,\n    name: \"Bob\",\n    email: \"bob@example.com\",\n    password: \"password456\"\n  }, {\n    id: 3,\n    name: \"Carol\",\n    email: \"carol@example.com\",\n    password: \"password789\"\n  }, {\n    id: 1,\n    name: \"Alice\",\n    email: \"alice@example.com\",\n    password: \"password123\"\n  }, {\n    id: 2,\n    name: \"Bob\",\n    email: \"bob@example.com\",\n    password: \"password456\"\n  }, {\n    id: 3,\n    name: \"Carol\",\n    email: \"carol@example.com\",\n    password: \"password789\"\n  }, {\n    id: 1,\n    name: \"Alice\",\n    email: \"alice@example.com\",\n    password: \"password123\"\n  }, {\n    id: 2,\n    name: \"Bob\",\n    email: \"bob@example.com\",\n    password: \"password456\"\n  }, {\n    id: 3,\n    name: \"Carol\",\n    email: \"carol@example.com\",\n    password: \"password789\"\n  }]);\n\n  // Pagination logic\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = users.slice(indexOfFirstItem, indexOfLastItem);\n  const pageNumbers = [];\n  for (let i = 1; i <= Math.ceil(users.length / itemsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  const nextPage = () => {\n    if (currentPage < pageNumbers.length) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n  const previousPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n  const handleBoxClick = boxId => {\n    setActiveBoxId(boxId);\n    if (boxId === 'create') {\n      setTableVisible(false);\n      setFormVisible(true);\n    } else if (boxId === 'manage') {\n      setFormVisible(false);\n      setTableVisible(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"GestionCompte\",\n    children: TableVisible && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"user-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: currentItems.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"action-icons\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 19\n            }, this)]\n          }, user.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: previousPage,\n          disabled: currentPage === 1,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }, this), pageNumbers.map(number => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: currentPage === number ? 'active' : '',\n          onClick: () => paginate(number),\n          children: number\n        }, number, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: nextPage,\n          disabled: currentPage === pageNumbers.length,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 297,\n    columnNumber: 5\n  }, this);\n};\n_s(GestionCompte, \"7ds750n9Y124IZKDLOiPuZYX3Zw=\");\n_c = GestionCompte;\nexport default GestionCompte;\nvar _c;\n$RefreshReg$(_c, \"GestionCompte\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","GestionCompte","_s","formVisible","setFormVisible","TableVisible","setTableVisible","activeBoxId","setActiveBoxId","currentPage","setCurrentPage","itemsPerPage","users","setUsers","id","name","email","password","indexOfLastItem","indexOfFirstItem","currentItems","slice","pageNumbers","i","Math","ceil","length","push","paginate","pageNumber","nextPage","previousPage","handleBoxClick","boxId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","onClick","disabled","number","_c","$RefreshReg$"],"sources":["C:/Users/Asus ZenBook 14/Desktop/My-github/Invoice Project/src/Components/GestionComptes/GestionCompte.js"],"sourcesContent":["// import React from 'react';\r\n// import '../../css/GestionCompte.css'; // Assurez-vous d'avoir ce fichier CSS dans le même dossier\r\n\r\n// const GestionCompte = () => {\r\n//   return (\r\n//     <div className=\"container GestionCompte\">\r\n//       <div className=\"box add\">\r\n//         <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"6em\" height=\"6em\" viewBox=\"0 0 24 24\"><path fill=\"none\" stroke=\"white\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M17 10h3m3 0h-3m0 0V7m0 3v3M1 20v-1a7 7 0 0 1 7-7v0a7 7 0 0 1 7 7v1m-7-8a4 4 0 1 0 0-8a4 4 0 0 0 0 8\"></path></svg>\r\n//         <div>Ajouter un utilisateur</div>\r\n//       </div>\r\n//       <div className=\"box management\">\r\n//       <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"5em\" height=\"5em\" viewBox=\"0 0 2048 2048\"><path fill=\"white\" d=\"M1148 1152q-83-62-179-95t-201-33q-88 0-170 23t-153 64t-129 100t-100 130t-65 153t-23 170H0q0-120 35-231t101-205t156-167t204-115q-56-35-100-82t-76-104t-47-119t-17-129q0-106 40-199t110-162T569 41T768 0t199 40t162 110t110 163t41 199q0 66-16 129t-48 119t-76 103t-101 83q60 23 113 54v152zM384 512q0 80 30 149t82 122t122 83t150 30q79 0 149-30t122-82t83-122t30-150q0-79-30-149t-82-122t-123-83t-149-30q-80 0-149 30t-122 82t-83 123t-30 149m1664 768v768H1024v-768h256v-256h512v256zm-640 0h256v-128h-256zm512 384h-128v128h-128v-128h-256v128h-128v-128h-128v256h768zm0-256h-768v128h768z\"></path></svg>\r\n//       <div>Editer les comptes</div>\r\n//       </div>\r\n//       <div className=\"box add-emmetteur\">\r\n//       <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"5em\" height=\"5em\" viewBox=\"0 0 24 24\"><path fill=\"white\" d=\"M3 6h13c.55 0 1-.45 1-1s-.45-1-1-1H3c-.55 0-1 .45-1 1s.45 1 1 1m12 11h2v-3h.18c.63 0 1.1-.58.98-1.2l-1-5c-.09-.46-.5-.8-.98-.8H2.82c-.48 0-.89.34-.98.8l-1 5c-.12.62.35 1.2.98 1.2H2v5c0 .55.45 1 1 1h7c.55 0 1-.45 1-1v-5h4zm-6 1H4v-4h5z\"></path><path fill=\"white\" d=\"M22 18h-2v-2c0-.55-.45-1-1-1s-1 .45-1 1v2h-2c-.55 0-1 .45-1 1s.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1v-2h2c.55 0 1-.45 1-1s-.45-1-1-1\"></path></svg><div>Ajouter un émetteur</div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default GestionCompte;\r\n\r\n// import React, { useState } from 'react';\r\n// import '../../css/GestionCompte.css'; // Assurez-vous d'avoir ce fichier CSS dans le même dossier\r\n\r\n// const GestionCompte = () => {\r\n//   const [formVisible, setFormVisible] = useState(false);\r\n//   const [activeBoxId, setActiveBoxId] = useState(null);\r\n\r\n//   const handleBoxClick = (boxId) => {\r\n//     setActiveBoxId(boxId);  // Définit l'ID de la boîte active\r\n//   };\r\n\r\n//   const toggleFormVisibility = () => {\r\n//     setFormVisible(!formVisible);\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"GestionCompte\">\r\n//       <div className={`container ${formVisible ? \"smaller\" : \"\"}`}>\r\n//         <div className=\"box add\" onClick={toggleFormVisibility}>\r\n//             <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"6em\" height=\"6em\" viewBox=\"0 0 24 24\"><path fill=\"none\" stroke=\"white\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M17 10h3m3 0h-3m0 0V7m0 3v3M1 20v-1a7 7 0 0 1 7-7v0a7 7 0 0 1 7 7v1m-7-8a4 4 0 1 0 0-8a4 4 0 0 0 0 8\"></path></svg>\r\n//             <div>Créer un utilisateur</div>\r\n//         </div>\r\n//         <div className=\"box management\" onClick={toggleFormVisibility}>\r\n//             <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"4em\" height=\"5em\" viewBox=\"0 0 2048 2048\"><path fill=\"white\" d=\"M1148 1152q-83-62-179-95t-201-33q-88 0-170 23t-153 64t-129 100t-100 130t-65 153t-23 170H0q0-120 35-231t101-205t156-167t204-115q-56-35-100-82t-76-104t-47-119t-17-129q0-106 40-199t110-162T569 41T768 0t199 40t162 110t110 163t41 199q0 66-16 129t-48 119t-76 103t-101 83q60 23 113 54v152zM384 512q0 80 30 149t82 122t122 83t150 30q79 0 149-30t122-82t83-122t30-150q0-79-30-149t-82-122t-123-83t-149-30q-80 0-149 30t-122 82t-83 123t-30 149m1664 768v768H1024v-768h256v-256h512v256zm-640 0h256v-128h-256zm512 384h-128v128h-128v-128h-256v128h-128v-128h-128v256h768zm0-256h-768v128h768z\"></path></svg>\r\n//            <div>Gérer</div>\r\n//         </div>\r\n//         <div className=\"box add-emmetteur\" onClick={toggleFormVisibility}>\r\n//             <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"5em\" height=\"5em\" viewBox=\"0 0 24 24\"><path fill=\"white\" d=\"M3 6h13c.55 0 1-.45 1-1s-.45-1-1-1H3c-.55 0-1 .45-1 1s.45 1 1 1m12 11h2v-3h.18c.63 0 1.1-.58.98-1.2l-1-5c-.09-.46-.5-.8-.98-.8H2.82c-.48 0-.89.34-.98.8l-1 5c-.12.62.35 1.2.98 1.2H2v5c0 .55.45 1 1 1h7c.55 0 1-.45 1-1v-5h4zm-6 1H4v-4h5z\"></path><path fill=\"white\" d=\"M22 18h-2v-2c0-.55-.45-1-1-1s-1 .45-1 1v2h-2c-.55 0-1 .45-1 1s.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1v-2h2c.55 0 1-.45 1-1s-.45-1-1-1\"></path></svg>\r\n//             <div>Ajouter un émetteur</div>\r\n//         </div>\r\n//       </div>\r\n//       {formVisible && (\r\n        // <form className=\"form\">\r\n        //   <input type=\"text\" placeholder=\"Nom\" required />\r\n        //   <input type=\"email\" placeholder=\"Adresse Email\" required />\r\n        //   <input type=\"password\" placeholder=\"Mot de passe\" required />\r\n        //   <input type=\"password\" placeholder=\"Mot de passe\" required />\r\n        //   <button type=\"submit\">Enregistrer</button>\r\n        // </form>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default GestionCompte;\r\n\r\n// import React, { useState } from 'react';\r\n// import '../../css/GestionCompte.css'; // Assurez-vous d'avoir ce fichier CSS dans le même dossier\r\n\r\n// const GestionCompte = () => {\r\n//   const [formVisible, setFormVisible] = useState(false);\r\n//   const [TableVisible, setTableVisible] = useState(false);\r\n//   const [activeBoxId, setActiveBoxId] = useState(null);\r\n//   const [currentPage, setCurrentPage] = useState(1);\r\n//   const [itemsPerPage] = useState(5); \r\n//   const [users, setUsers] = useState([\r\n//     { id: 1, name: \"Alice\", email: \"alice@example.com\", password: \"password123\" ,},\r\n//     { id: 2, name: \"Bob\", email: \"bob@example.com\", password: \"password456\" },\r\n//     { id: 3, name: \"Carol\", email: \"carol@example.com\", password: \"password789\" },\r\n//     { id: 1, name: \"Alice\", email: \"alice@example.com\", password: \"password123\" ,},\r\n//     { id: 2, name: \"Bob\", email: \"bob@example.com\", password: \"password456\" },\r\n//     { id: 3, name: \"Carol\", email: \"carol@example.com\", password: \"password789\" },\r\n//     { id: 1, name: \"Alice\", email: \"alice@example.com\", password: \"password123\" ,},\r\n//     { id: 2, name: \"Bob\", email: \"bob@example.com\", password: \"password456\" },\r\n//     { id: 3, name: \"Carol\", email: \"carol@example.com\", password: \"password789\" },\r\n//     { id: 1, name: \"Alice\", email: \"alice@example.com\", password: \"password123\" ,},\r\n//     { id: 2, name: \"Bob\", email: \"bob@example.com\", password: \"password456\" },\r\n//     { id: 3, name: \"Carol\", email: \"carol@example.com\", password: \"password789\" },\r\n//     { id: 1, name: \"Alice\", email: \"alice@example.com\", password: \"password123\" ,},\r\n//     { id: 2, name: \"Bob\", email: \"bob@example.com\", password: \"password456\" },\r\n//     { id: 3, name: \"Carol\", email: \"carol@example.com\", password: \"password789\" },\r\n//     { id: 1, name: \"Alice\", email: \"alice@example.com\", password: \"password123\" ,},\r\n//     { id: 2, name: \"Bob\", email: \"bob@example.com\", password: \"password456\" },\r\n//     { id: 3, name: \"Carol\", email: \"carol@example.com\", password: \"password789\" },\r\n//     { id: 1, name: \"Alice\", email: \"alice@example.com\", password: \"password123\" ,},\r\n//     { id: 2, name: \"Bob\", email: \"bob@example.com\", password: \"password456\" },\r\n//     { id: 3, name: \"Carol\", email: \"carol@example.com\", password: \"password789\" },\r\n//     { id: 1, name: \"Alice\", email: \"alice@example.com\", password: \"password123\" ,},\r\n//     { id: 2, name: \"Bob\", email: \"bob@example.com\", password: \"password456\" },\r\n//     { id: 3, name: \"Carol\", email: \"carol@example.com\", password: \"password789\" }\r\n//    ]);\r\n\r\n//     // Calculate the last item on the current page\r\n//     const indexOfLastItem = currentPage * itemsPerPage;\r\n//     const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n//     const currentItems = users.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n//     // Change page\r\n//     const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n//     const nextPage = () => setCurrentPage(prev => (prev < pageNumbers.length ? prev + 1 : prev));\r\n//     const previousPage = () => setCurrentPage(prev => (prev > 1 ? prev - 1 : prev));\r\n\r\n//     const pageNumbers = [];\r\n//     for (let i = 1; i <= Math.ceil(users.length / itemsPerPage); i++) {\r\n//         pageNumbers.push(i);\r\n//     }\r\n    \r\n//     const handleBoxClick = (boxId) => {\r\n//     setActiveBoxId(boxId);  // Sets the active box ID\r\n\r\n//     if (boxId === 'create') {\r\n//         setTableVisible(false);\r\n//         setFormVisible(true);  // Shows the form when a box is clicked\r\n//     } else if (boxId === 'manage') {\r\n//         setFormVisible(false);\r\n//         setTableVisible(true);  // Assumes there is a similar hook for table visibility\r\n//     }\r\n//     // No need for an else block if there are no other actions to perform\r\n//     };\r\n\r\n    \r\n\r\n\r\n\r\n\r\n//   return (\r\n//     <div className=\"GestionCompte\">\r\n//       <div className={`container ${formVisible ? \"smaller\" : \"\"}`}>\r\n//         <div className={`box add ${activeBoxId === 'create' ? 'active' : ''} ${activeBoxId !== null ? 'active-top' : ''}`} onClick={() => handleBoxClick('create')}>\r\n//             <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"4em\" height=\"4em\" viewBox=\"0 0 24 24\"><path fill=\"none\" stroke=\"white\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M17 10h3m3 0h-3m0 0V7m0 3v3M1 20v-1a7 7 0 0 1 7-7v0a7 7 0 0 1 7 7v1m-7-8a4 4 0 1 0 0-8a4 4 0 0 0 0 8\"></path></svg>           \r\n//             <div>Créer un utilisateur</div>\r\n//         </div>\r\n//         <div className={`box management ${activeBoxId === 'manage' ? 'active' : ''} ${activeBoxId !== null ? 'active-top' : ''}`} onClick={() => handleBoxClick('manage')}>\r\n//             <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"4em\" height=\"5em\" viewBox=\"0 0 2048 2048\"><path fill=\"white\" d=\"M1148 1152q-83-62-179-95t-201-33q-88 0-170 23t-153 64t-129 100t-100 130t-65 153t-23 170H0q0-120 35-231t101-205t156-167t204-115q-56-35-100-82t-76-104t-47-119t-17-129q0-106 40-199t110-162T569 41T768 0t199 40t162 110t110 163t41 199q0 66-16 129t-48 119t-76 103t-101 83q60 23 113 54v152zM384 512q0 80 30 149t82 122t122 83t150 30q79 0 149-30t122-82t83-122t30-150q0-79-30-149t-82-122t-123-83t-149-30q-80 0-149 30t-122 82t-83 123t-30 149m1664 768v768H1024v-768h256v-256h512v256zm-640 0h256v-128h-256zm512 384h-128v128h-128v-128h-256v128h-128v-128h-128v256h768zm0-256h-768v128h768z\"></path></svg>  \r\n//             <div>Editer les comptes</div>\r\n//         </div>\r\n\r\n//       </div>\r\n//       {formVisible && (\r\n//         <form className=\"form\">\r\n//             <div className=\"form-row\">\r\n//                 <div className=\"form-group\">\r\n//                     <label htmlFor=\"nom\">Nom</label>\r\n//                     <input id=\"nom\" type=\"text\" placeholder=\"Nom\" required />\r\n//                 </div>\r\n//                 <div className=\"form-group\">\r\n//                     <label htmlFor=\"email\">Adresse Email</label>\r\n//                     <input id=\"email\" type=\"email\" placeholder=\"Adresse Email\" required />\r\n//                 </div>\r\n//             </div>\r\n//             <div className=\"form-row\">\r\n//                 <div className=\"form-group\">\r\n//                     <label htmlFor=\"password1\">Mot de passe</label>\r\n//                     <input id=\"password1\" type=\"password\" placeholder=\"Mot de passe\" required />\r\n//                 </div>\r\n//                 <div className=\"form-group\">\r\n//                     <label htmlFor=\"password2\">Confirmer le mot de passe</label>\r\n//                     <input id=\"password2\" type=\"password\" placeholder=\"Mot de passe\" required />\r\n//                 </div>\r\n//             </div>\r\n//             <button type=\"submit\">Enregistrer</button>\r\n//         </form>\r\n//       )}\r\n            \r\n//       {TableVisible && (\r\n//         <>\r\n//                     <table className=\"user-table\">\r\n//                         <thead>\r\n//                             <tr>\r\n//                                 <th>Name</th>\r\n//                                 <th>Email</th>\r\n//                                 <th>Password</th>\r\n//                                 <th>Actions</th>\r\n//                             </tr>\r\n//                         </thead>\r\n//                         <tbody>\r\n//                             {currentItems.map(user => (\r\n//                                 <tr key={user.id}>\r\n//                                     <td>{user.name}</td>\r\n//                                     <td>{user.email}</td>\r\n//                                     <td>{user.password}</td>\r\n//                                     <td>\r\n//                                         <div className=\"action-icons\">\r\n//                                             {/* SVGs here */}\r\n//                                         </div>\r\n//                                     </td>\r\n//                                 </tr>\r\n//                             ))}\r\n//                         </tbody>\r\n//                     </table>\r\n//                     <div className=\"pagination\">\r\n//                         <button onClick={previousPage} disabled={currentPage === 1}>Previous</button>\r\n//                         {pageNumbers.map(number => (\r\n//                             <button key={number} className={currentPage === number ? 'active' : ''} onClick={() => paginate(number)}>\r\n//                                 {number}\r\n//                             </button>\r\n//                         ))}\r\n//                         <button onClick={nextPage} disabled={currentPage === pageNumbers.length}>Next</button>\r\n//                     </div>\r\n//                 </>\r\n//         )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default GestionCompte;\r\n\r\n\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport '../../css/GestionCompte.css';\r\n\r\nconst GestionCompte = () => {\r\n  const [formVisible, setFormVisible] = useState(false);\r\n  const [TableVisible, setTableVisible] = useState(false);\r\n  const [activeBoxId, setActiveBoxId] = useState(null);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [itemsPerPage] = useState(5);\r\n  const [users, setUsers] = useState([\r\n    { id: 1, name: \"Alice\", email: \"alice@example.com\", password: \"password123\" ,},\r\n    { id: 2, name: \"Bob\", email: \"bob@example.com\", password: \"password456\" },\r\n    { id: 3, name: \"Carol\", email: \"carol@example.com\", password: \"password789\" },\r\n    { id: 1, name: \"Alice\", email: \"alice@example.com\", password: \"password123\" ,},\r\n    { id: 2, name: \"Bob\", email: \"bob@example.com\", password: \"password456\" },\r\n    { id: 3, name: \"Carol\", email: \"carol@example.com\", password: \"password789\" },\r\n    { id: 1, name: \"Alice\", email: \"alice@example.com\", password: \"password123\" ,},\r\n    { id: 2, name: \"Bob\", email: \"bob@example.com\", password: \"password456\" },\r\n    { id: 3, name: \"Carol\", email: \"carol@example.com\", password: \"password789\" },\r\n    { id: 1, name: \"Alice\", email: \"alice@example.com\", password: \"password123\" ,},\r\n    { id: 2, name: \"Bob\", email: \"bob@example.com\", password: \"password456\" },\r\n    { id: 3, name: \"Carol\", email: \"carol@example.com\", password: \"password789\" },\r\n    { id: 1, name: \"Alice\", email: \"alice@example.com\", password: \"password123\" ,},\r\n    { id: 2, name: \"Bob\", email: \"bob@example.com\", password: \"password456\" },\r\n    { id: 3, name: \"Carol\", email: \"carol@example.com\", password: \"password789\" },\r\n    { id: 1, name: \"Alice\", email: \"alice@example.com\", password: \"password123\" ,},\r\n    { id: 2, name: \"Bob\", email: \"bob@example.com\", password: \"password456\" },\r\n    { id: 3, name: \"Carol\", email: \"carol@example.com\", password: \"password789\" },\r\n    { id: 1, name: \"Alice\", email: \"alice@example.com\", password: \"password123\" ,},\r\n    { id: 2, name: \"Bob\", email: \"bob@example.com\", password: \"password456\" },\r\n    { id: 3, name: \"Carol\", email: \"carol@example.com\", password: \"password789\" },\r\n    { id: 1, name: \"Alice\", email: \"alice@example.com\", password: \"password123\" ,},\r\n    { id: 2, name: \"Bob\", email: \"bob@example.com\", password: \"password456\" },\r\n    { id: 3, name: \"Carol\", email: \"carol@example.com\", password: \"password789\" }\r\n   ]);\r\n\r\n  // Pagination logic\r\n  const indexOfLastItem = currentPage * itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  const currentItems = users.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n  const pageNumbers = [];\r\n  for (let i = 1; i <= Math.ceil(users.length / itemsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  const nextPage = () => {\r\n    if (currentPage < pageNumbers.length) {\r\n      setCurrentPage(currentPage + 1);\r\n    }\r\n  };\r\n\r\n  const previousPage = () => {\r\n    if (currentPage > 1) {\r\n      setCurrentPage(currentPage - 1);\r\n    }\r\n  };\r\n\r\n  const handleBoxClick = (boxId) => {\r\n    setActiveBoxId(boxId);\r\n\r\n    if (boxId === 'create') {\r\n      setTableVisible(false);\r\n      setFormVisible(true);\r\n    } else if (boxId === 'manage') {\r\n      setFormVisible(false);\r\n      setTableVisible(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"GestionCompte\">\r\n      {/* UI elements and JSX */}\r\n      {TableVisible && (\r\n        <>\r\n          <table className=\"user-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Email</th>\r\n                <th>Password</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {currentItems.map(user => (\r\n                <tr key={user.id}>\r\n                  <td>{user.name}</td>\r\n                  <td>{user.email}</td>\r\n                  <td>{user.password}</td>\r\n                  <td>\r\n                    <div className=\"action-icons\">\r\n                      {/* SVGs here */}\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n          <div className=\"pagination\">\r\n            <button onClick={previousPage} disabled={currentPage === 1}>Previous</button>\r\n            {pageNumbers.map(number => (\r\n              <button key={number} className={currentPage === number ? 'active' : ''} onClick={() => paginate(number)}>\r\n                {number}\r\n              </button>\r\n            ))}\r\n            <button onClick={nextPage} disabled={currentPage === pageNumbers.length}>Next</button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GestionCompte;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQ;AACA;AACA;AACA;AACA;AACA;AACA;AACR;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAErC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,C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"},"metadata":{},"sourceType":"module","externalDependencies":[]}