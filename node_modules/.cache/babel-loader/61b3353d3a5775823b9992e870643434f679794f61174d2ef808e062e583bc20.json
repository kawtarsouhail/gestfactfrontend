{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus ZenBook 14\\\\Desktop\\\\React\\\\Preparation\\\\src\\\\CalculIMC.js\",\n  _s = $RefreshSig$();\nimport React, { useState, use } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Ajouter } from \"./Redux/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CalculIMC() {\n  _s();\n  let [id, setId] = useState();\n  const [Poids, setPoids] = useState();\n  const [Taille, setTaille] = useState();\n  const [IMC, setIMC] = useState();\n  const [Avis, setAvis] = useState();\n  const dispatch = useDispatch();\n  const CalculIMC = () => {\n    alert(IMC);\n    switch (true) {\n      case IMC < 16.5:\n        return setAvis('Denutrition');\n      case IMC > 16.5 && IMC < 18.5:\n        return setAvis('Maigreur');\n      case IMC > 18.5 && IMC < 20:\n        return setAvis('Corpulance Normale');\n      case IMC > 25 && IMC < 30:\n        return setAvis('Surpoids');\n      default:\n        return setAvis('Obesite morible ou massive');\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    setIMC(Poids / Math.pow(Taille, 2));\n    CalculIMC();\n    setId(id += 1);\n    dispatch(Ajouter({\n      id,\n      Poids,\n      Taille,\n      IMC,\n      Avis\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Poids (en kg) \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        onChange: e => setPoids(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Taille (en cm) \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        onChange: e => setTaille(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => handleSubmit(e),\n        children: \"Calculer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Votre Indice de Masse Corporelle est:\", IMC]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Avis de notre expert :\", Avis]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(CalculIMC, \"tcZqLkhFXKfPQBFyQsfXFog98zE=\", false, function () {\n  return [useDispatch];\n});\n_c = CalculIMC;\nvar _c;\n$RefreshReg$(_c, \"CalculIMC\");","map":{"version":3,"names":["React","useState","use","useDispatch","Ajouter","jsxDEV","_jsxDEV","Fragment","_Fragment","CalculIMC","_s","id","setId","Poids","setPoids","Taille","setTaille","IMC","setIMC","Avis","setAvis","dispatch","alert","handleSubmit","e","preventDefault","Math","pow","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","target","value","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Asus ZenBook 14/Desktop/React/Preparation/src/CalculIMC.js"],"sourcesContent":["import React,{useState,use} from \"react\";\r\nimport {useDispatch } from \"react-redux\";\r\nimport { Ajouter } from \"./Redux/actions\";\r\n\r\nexport default function CalculIMC(){\r\n    let [id,setId]=useState();\r\n    const [Poids,setPoids]=useState();\r\n    const [Taille,setTaille]=useState();\r\n    const [IMC,setIMC]=useState();\r\n    const [Avis,setAvis]=useState();\r\n    \r\n    const dispatch=useDispatch();\r\n\r\n    const CalculIMC=()=>{\r\n        alert(IMC)\r\n        switch(true){\r\n            case (IMC<16.5):\r\n                return setAvis('Denutrition');\r\n            case (IMC>16.5 && IMC<18.5 ):\r\n                return setAvis('Maigreur');\r\n            case (IMC>18.5 && IMC<20 ):\r\n                return setAvis('Corpulance Normale');\r\n            case (IMC>25 && IMC<30 ):\r\n                return setAvis('Surpoids');\r\n            default:\r\n                return setAvis('Obesite morible ou massive');\r\n        }\r\n    }\r\n\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        setIMC(Poids/Math.pow(Taille,2));\r\n        CalculIMC();\r\n        setId(id+=1);\r\n        dispatch(Ajouter({id,Poids,Taille,IMC,Avis}))\r\n    }\r\n    return(\r\n        <>\r\n            <form>\r\n                <label>Poids (en kg) </label>\r\n                <input type=\"number\" onChange={(e)=>setPoids(e.target.value)}></input>\r\n                <label>Taille (en cm) </label>\r\n                <input type=\"number\" onChange={(e)=>setTaille(e.target.value)}></input>\r\n                <button onClick={(e)=>handleSubmit(e)}>Calculer</button>\r\n                <p>Votre Indice de Masse Corporelle est:{IMC}</p>\r\n                <p>Avis de notre expert :{Avis}</p>\r\n            </form>\r\n        </>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}