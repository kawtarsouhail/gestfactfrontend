{"ast":null,"code":"var _jsxFileName = \"/home/kawtar/Desktop/STAGEGITFRONTEND/gestfactfrontend/src/router/index.js\";\nimport { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom';\nimport React from 'react';\nimport Login from '../component/login';\nimport PageNotFound from '../pages/pageNotFound';\nimport Layout from \"../layout/layout\";\nimport Invoice from \"../component/Invoice\";\nimport MainVisualiser from \"../component/MainVisualiser\";\nimport Table from \"../component/Table\";\nimport Visualiser from \"../component/Visualiser\";\nimport GestionCompte from \"../component/GestionCompte\";\n\n// Fonction pour vérifier si l'utilisateur est authentifié\nconst isAuthenticated = () => {\n  const token = localStorage.getItem('token'); // Récupérer le jeton depuis le localStorage\n  // Vérifier si le jeton est présent et s'il est valide (par exemple, en vérifiant sa signature)\n  return token !== null; // Renvoie vrai si le jeton est présent, faux sinon\n};\n\n// Composant de route privée pour protéger les ressources nécessitant une authentification\nconst PrivateRoute = ({\n  element: Element,\n  ...rest\n}) => /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n  element: isAuthenticated() ? /*#__PURE__*/React.createElement(Element, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 49\n    }\n  }) : /*#__PURE__*/React.createElement(Navigate, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 63\n    }\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 3\n  }\n}));\nconst router = /*#__PURE__*/React.createElement(BrowserRouter, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Routes, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Route, {\n  path: \"/\",\n  element: /*#__PURE__*/React.createElement(Login, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 32\n    }\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(Route, {\n  element: /*#__PURE__*/React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 18\n    }\n  }),\n  children: [{\n    path: '/invoice',\n    element: /*#__PURE__*/React.createElement(Invoice, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 40\n      }\n    })\n  }, {\n    path: '/MainVisualiser',\n    element: /*#__PURE__*/React.createElement(MainVisualiser, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 47\n      }\n    })\n  }, {\n    path: '/Table',\n    element: /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 38\n      }\n    })\n  }, {\n    path: '/Visualiser',\n    element: /*#__PURE__*/React.createElement(Visualiser, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 43\n      }\n    })\n  }, {\n    path: '/GestionCompte',\n    element: /*#__PURE__*/React.createElement(GestionCompte, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 46\n      }\n    })\n  }, {\n    path: '/',\n    element: isAuthenticated() ? /*#__PURE__*/React.createElement(Navigate, {\n      to: \"/MainVisualiser\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 53\n      }\n    }) : /*#__PURE__*/React.createElement(Navigate, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 89\n      }\n    })\n  }, {\n    path: '*',\n    element: /*#__PURE__*/React.createElement(PageNotFound, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 33\n      }\n    })\n  }],\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }\n})));\nexport default router;","map":{"version":3,"names":["BrowserRouter","Routes","Route","Navigate","React","Login","PageNotFound","Layout","Invoice","MainVisualiser","Table","Visualiser","GestionCompte","isAuthenticated","token","localStorage","getItem","PrivateRoute","element","Element","rest","createElement","Object","assign","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","to","router","path","children"],"sources":["/home/kawtar/Desktop/STAGEGITFRONTEND/gestfactfrontend/src/router/index.js"],"sourcesContent":["import { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom';\nimport React from 'react';\nimport Login from '../component/login';\nimport PageNotFound from '../pages/pageNotFound';\nimport Layout from \"../layout/layout\";\nimport Invoice from \"../component/Invoice\";\nimport MainVisualiser from \"../component/MainVisualiser\";\nimport Table from \"../component/Table\";\nimport Visualiser from \"../component/Visualiser\";\nimport GestionCompte from \"../component/GestionCompte\";\n\n// Fonction pour vérifier si l'utilisateur est authentifié\nconst isAuthenticated = () => {\n  const token = localStorage.getItem('token'); // Récupérer le jeton depuis le localStorage\n  // Vérifier si le jeton est présent et s'il est valide (par exemple, en vérifiant sa signature)\n  return token !== null; // Renvoie vrai si le jeton est présent, faux sinon\n};\n\n// Composant de route privée pour protéger les ressources nécessitant une authentification\nconst PrivateRoute = ({ element: Element, ...rest }) => (\n  <Route {...rest} element={isAuthenticated() ? <Element /> : <Navigate to='/login' />} />\n);\n\nconst router = (\n  <BrowserRouter>\n    <Routes>\n      <Route path=\"/\" element={<Login />} />\n      <Route\n        element={<Layout />}\n        children={[\n          { path: '/invoice', element: <Invoice /> },\n          { path: '/MainVisualiser', element: <MainVisualiser /> },\n          { path: '/Table', element: <Table /> },\n          { path: '/Visualiser', element: <Visualiser /> },\n          { path: '/GestionCompte', element: <GestionCompte /> },\n          { path: '/', element: isAuthenticated() ? <Navigate to=\"/MainVisualiser\" /> : <Navigate to=\"/\" /> },\n          { path: '*', element: <PageNotFound /> }\n        ]}\n      />\n    </Routes>\n  </BrowserRouter>\n);\n\nexport default router;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}