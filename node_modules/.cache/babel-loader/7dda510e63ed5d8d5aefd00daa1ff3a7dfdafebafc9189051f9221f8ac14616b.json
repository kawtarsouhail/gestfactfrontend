{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus ZenBook 14\\\\Desktop\\\\My-github\\\\Invoice Project Frontend\\\\src\\\\Components\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/auth/AuthContext.js\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  useEffect(() => {\n    const checkAuth = () => {\n      const token = Cookies.get('authToken');\n      setIsAuthenticated(!!token);\n    };\n\n    // Check auth on mount and subscribe to changes\n    checkAuth();\n    // Optional: Consider adding an event listener for changes in auth status if needed\n\n    return () => {\n      // Cleanup if necessary\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"JkS3Meyzlj18m4l86SBr9YDqEkQ=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","Cookies","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","checkAuth","token","get","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/Asus ZenBook 14/Desktop/My-github/Invoice Project Frontend/src/Components/AuthContext.js"],"sourcesContent":["// src/auth/AuthContext.js\r\nimport React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst AuthContext = createContext(null);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const checkAuth = () => {\r\n            const token = Cookies.get('authToken');\r\n            setIsAuthenticated(!!token);\r\n        };\r\n\r\n        // Check auth on mount and subscribe to changes\r\n        checkAuth();\r\n        // Optional: Consider adding an event listener for changes in auth status if needed\r\n\r\n        return () => {\r\n            // Cleanup if necessary\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ isAuthenticated }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,WAAW,gBAAGP,aAAa,CAAC,IAAI,CAAC;AAEvC,OAAO,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAE7DC,SAAS,CAAC,MAAM;IACZ,MAAMU,SAAS,GAAGA,CAAA,KAAM;MACpB,MAAMC,KAAK,GAAGV,OAAO,CAACW,GAAG,CAAC,WAAW,CAAC;MACtCH,kBAAkB,CAAC,CAAC,CAACE,KAAK,CAAC;IAC/B,CAAC;;IAED;IACAD,SAAS,CAAC,CAAC;IACX;;IAEA,OAAO,MAAM;MACT;IAAA,CACH;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIP,OAAA,CAACC,WAAW,CAACS,QAAQ;IAACC,KAAK,EAAE;MAAEN;IAAgB,CAAE;IAAAF,QAAA,EAC5CA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACX,EAAA,CAvBWF,YAAY;AAAAc,EAAA,GAAZd,YAAY;AAyBzB,OAAO,MAAMe,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMvB,UAAU,CAACM,WAAW,CAAC;AAAA;AAACiB,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}