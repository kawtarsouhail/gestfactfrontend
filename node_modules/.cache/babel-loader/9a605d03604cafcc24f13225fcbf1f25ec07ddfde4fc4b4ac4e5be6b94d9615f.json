{"ast":null,"code":"var _jsxFileName = \"/home/kawtar/Desktop/Invoice_Project_Frontend/src/Components/GestionComptes/TableUsers.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from '../router/axiosInstance';\n// import '../../css/Table.css'; // Import custom CSS file for styling\n// import Swal from 'sweetalert2';\n// import { getToken,deleteToken } from '../router/auth';\n// import { Link, useNavigate } from \"react-router-dom\";\n\n// const TableUsers = ({ data: initialData, itemsPerPage, reloadData }) => {\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const [selectedRow, setSelectedRow] = useState(null);\n//   const [rowToDelete, setRowToDelete] = useState(null);\n//   const [role, setRole] = useState('');\n//   const [data, setData] = useState(initialData);\n//   const [passwordError, setPasswordError] = useState('');\n//   const [error, setError] = useState(null); \n//   const [user, setUser] = useState(null); \n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const fetchUser = async () => {\n//       try {\n//         const token = getToken();\n\n//         if (token) {\n//           const response = await axios.get('http://localhost:8000/api/user', {\n//           });\n//           setUser(response.data.user.id);\n//         }\n//       } catch (error) {\n//         setError(error);\n//       }\n//     };\n\n//     fetchUser();\n//   }, []);\n\n//   useEffect(() => {\n//     setData(initialData);\n//   }, [initialData]);\n\n//   const [formData, setFormData] = useState({\n//     name: '',\n//     email: '',\n//     role: '',\n//     password: '',\n//     password_confirmation: ''\n//   });\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData(prevState => ({\n//       ...prevState,\n//       [name]: value\n//     }));\n//   };\n\n//   const handleRoleChange = (e) => {\n//     setRole(e.target.value);\n//     handleChange(e)\n//   };\n\n//   const handleLogout = async () => {\n//     try {\n//       const token = getToken();\n\n//       if (token) {\n//         await axios.post('http://localhost:8000/api/logout', null, {\n//         });\n//         deleteToken();\n//         navigate('/');  \n//       }\n//     } catch (error) {\n//       console.error('Logout failed', error);\n//       }\n//       };\n\n//   const handleUpdateUser = async (e) => {\n//     e.preventDefault();\n//     if (formData.password !== formData.password_confirmation) {\n//       setPasswordError(\"Les mots de passe ne correspondent pas !\");\n//       return;\n//     }\n//     setPasswordError('');\n\n//     try {\n//       const updatedData = {\n//         name: formData.name,\n//         email: formData.email,\n//         role: formData.role,\n//         password: formData.password ,\n//         password_confirmation: formData.password_confirmation ,\n//       };\n\n//       const response = await axios.put(`http://localhost:8000/api/modifier/${selectedRow.id}`, updatedData);\n//       console.log(selectedRow.id);\n//       console.log(typeof selectedRow.id);\n//       if (response.data) {\n//       reloadData();\n//       handleCloseModal();\n\n//       if (selectedRow.id != user) {\n\n//         Swal.fire({\n//           icon: 'success',\n//           title: 'Mis à jour!',\n//           text: `Le compte de ${updatedData.name} a été mis à jour avec succès.`,\n//           confirmButtonColor: '#3085d6',\n//         });\n//       } else {\n//         Swal.fire({\n//           icon: 'success',\n//           title: 'Mis à jour!',\n//           text: `Le compte de ${updatedData.name} a été mis à jour avec succès merci de refaire votre login .`,\n//           confirmButtonColor: '#3085d6',\n//         });\n//         handleLogout()\n//       }\n//     }\n//     } catch (error) {\n//       console.error(\"Échec de la mise à jour de l'utilisateur :\", error);\n//       alert(\"Une erreur s'est produite lors de la mise à jour de l'utilisateur.\");\n//     }\n//   };\n\n//   const handleShowModal = (rowData) => {\n//     setSelectedRow(rowData);\n//     setFormData({\n//       name: rowData.name,\n//       email: rowData.email,\n//       role: rowData.roles,\n//       password: '',\n//       password_confirmation: ''\n//     });\n//     console.log(formData);\n//   };\n\n//   const handleCloseModal = () => {\n//     setSelectedRow(null);\n//     setPasswordError(''); // Clear password error when closing modal\n//   };\n\n//   // const  = (e) => {\n//   //   setRole(e.target.value);\n//   //   handleChange(e)\n//   // };\n\n//   const handleDeleteRow = async () => {\n//     if (!rowToDelete) return;\n\n//     try {\n//       const ItemId=rowToDelete.id;\n//       const response = await axios.delete(`http://localhost:8000/api/supprimer/${ItemId}`);\n\n//       if (response.status !== 200) {\n//         throw new Error('Failed to delete the user');\n//       }\n\n//       reloadData();\n//       setData(data.filter(item => item.id !== rowToDelete.id));\n//       setRowToDelete(null);\n\n//       Swal.fire({\n//         icon: 'success',\n//         title: 'Supprimé!',\n//         text: `Le compte ${rowToDelete.name} a été supprimé avec succès.`,\n//         confirmButtonColor: '#3085d6',\n//       });\n//     } catch (error) {\n//       console.error(\"Failed to delete user:\", error);\n//     }\n//   };\n\n//   const handleShowDeleteModal = (item) => {\n//     setRowToDelete(item);\n//   };  \n\n//   const totalPages = Math.ceil(data.length / itemsPerPage);\n\n//   const handleChangePage = (page) => {\n//     setCurrentPage(page);\n//   };\n\n//   const renderDeleteConfirmationModal = () => {\n//     if (!rowToDelete) return null;\n\n//     return (\n//       <div className=\"modal-delete\">\n//         <div className=\"modal-content\">\n//           <span className=\"close\" onClick={() => setRowToDelete(null)}>&times;</span>\n//           <h2>Confirmation de suppression</h2>\n//           <p>Voulez-vous vraiment supprimer ce compte {rowToDelete.name}?</p>\n//           <div className='btns' style={{ textAlign: 'center', marginTop: '20px' }}>\n//             <button className='btn-delete' onClick={handleDeleteRow} style={{ marginRight: '10px'}}>Supprimer</button>\n//             <button onClick={() => setRowToDelete(null)}>Annuler</button>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   };\n\n//   const renderTableData = () => {\n//     const startIndex = (currentPage - 1) * itemsPerPage;\n//     const endIndex = startIndex + itemsPerPage;\n//     return data.slice(startIndex, endIndex).map((item, index) => (\n//       <tr key={startIndex + index}>\n//         <td>{item.name}</td>\n//         <td>{item.email}</td>\n//         <td>{item.roles}</td>\n//         <td>***********</td>\n//         <td>\n//           <div className='actions'>\n//             <span className=\"tooltip\">\n//               <svg onClick={() => handleShowModal(item)} xmlns=\"http://www.w3.org/2000/svg\" width=\"1.2em\" height=\"1.2em\" viewBox=\"0 0 24 24\"><path fill=\"#78c2ff\" d=\"m21.561 5.318l-2.879-2.879A1.495 1.495 0 0 0 17.621 2c-.385 0-.768.146-1.061.439L13 6H4a1 1 0 0 0-1 1v13a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1v-9l3.561-3.561c.293-.293.439-.677.439-1.061s-.146-.767-.439-1.06M11.5 14.672L9.328 12.5l6.293-6.293l2.172 2.172zm-2.561-1.339l1.756 1.728L9 15zM16 19H5V8h6l-3.18 3.18c-.293.293-.478.812-.629 1.289c-.16.5-.191 1.056-.191 1.47V17h3.061c.414 0 1.108-.1 1.571-.29c.464-.19.896-.347 1.188-.64L16 13zm2.5-11.328L16.328 5.5l1.293-1.293l2.171 2.172z\"></path></svg>\n//               <span className=\"tooltiptext\">Modifier</span>\n//             </span>\n//             <span className=\"tooltip\">\n//               <svg onClick={() => handleShowDeleteModal(item)}  xmlns=\"http://www.w3.org/2000/svg\" width=\"1.6em\" height=\"1.6em\" viewBox=\"0 0 24 24\"><path fill=\"#00a6ed\" d=\"M12 2c5.53 0 10 4.47 10 10s-4.47 10-10 10S2 17.53 2 12S6.47 2 12 2m5 5h-2.5l-1-1h-3l-1 1H7v2h10zM9 18h6a1 1 0 0 0 1-1v-7H8v7a1 1 0 0 0 1 1\"></path></svg>\n//               <span className=\"tooltiptext\">Supprimer</span>\n//             </span>\n//           </div>\n//         </td>\n//       </tr>\n//     ));\n//   };\n\n//   const renderPagination = () => {\n//     const pages = [];\n//     const maxPagesToShow = 5;\n//     const startPage = Math.max(1, currentPage - Math.floor(maxPagesToShow / 2));\n//     const endPage = Math.min(totalPages, startPage + maxPagesToShow - 1);\n\n//     for (let i = startPage; i <= endPage; i++) {\n//       pages.push(\n//         <li className={`page-item ${currentPage === i ? 'active' : ''}`} key={i}>\n//           <button className=\"page-link\" onClick={() => handleChangePage(i)}>{i}</button>\n//         </li>\n//       );\n//     }\n\n//     const previousButton = (\n//       <li className={`page-item ${currentPage === 1 ? 'disabled' : ''}`}>\n//         <button className=\"page-link\" onClick={() => handleChangePage(currentPage - 1)}>Previous</button>\n//       </li>\n//     );\n\n//     const nextButton = (\n//       <li className={`page-item ${currentPage === totalPages ? 'disabled' : ''}`}>\n//         <button className=\"page-link\" onClick={() => handleChangePage(currentPage + 1)}>Next</button>\n//       </li>\n//     );\n\n//     return (\n//       <nav>\n//         <ul className=\"pagination\">\n//           {previousButton}\n//           {pages}\n//           {nextButton}\n//         </ul>\n//       </nav>\n//     );\n//   };\n\n//   const renderModal = () => {\n//     if (!selectedRow) return null;\n//     console.log(formData);\n//     return (\n//       <div className=\"modal\">\n//         <div className=\"modal-content\">\n//           <span className=\"close\" onClick={handleCloseModal}>&times;</span>\n//           <h3>Mettre à jour les informations :</h3>\n//           <form onSubmit={handleUpdateUser}>\n//             <div className='modal-items'>\n//               <div className=\"modal-item\">\n//                 <label>Nom Complet :</label>\n//                 <input\n//                   type=\"text\"\n//                   name=\"name\"\n//                   value={formData.name}\n//                   onChange={handleChange}\n//                   required\n//                 />\n//               </div>\n//               <div className=\"modal-item\">\n//                 <label>Email:</label>\n//                 <input\n//                   type=\"email\"\n//                   name=\"email\"\n//                   value={formData.email}\n//                   onChange={handleChange}\n//                   required\n//                 />\n//               </div>\n//               <div className=\"modal-item\">\n//                 <label>Mot de passe:</label>\n//                 <input\n//                   type=\"password\"\n//                   name=\"password\"\n//                   value={formData.password}\n//                   onChange={handleChange}\n//                   required\n//                 />\n//               </div>\n//               <div className=\"modal-item\">\n//                 <label>Confirmer Mot de passe:</label>\n//                 <input\n//                   type=\"password\"\n//                   name=\"password_confirmation\"\n//                   value={formData.password_confirmation}\n//                   onChange={handleChange}\n//                   required\n//                 />\n//                 {passwordError && <div style={{ color: 'red', marginTop: '5px' }}>{passwordError}</div>}\n//               </div>\n//               <div className=\"modal-item\">\n//                 <label htmlFor=\"role\">Rôle:</label>\n//                 <select name=\"role\" id=\"role\" required value={formData.role}  onChange={handleRoleChange} className='selectrole'>\n//                   <option value=\"\" disabled selected>Choose a role</option>\n//                   <option value=\"Super Admin\">Super Admin</option>\n//                   <option value=\"Admin\">Admin</option>\n//                   <option value=\"Utilisateur\">Utilisateur</option>\n//                 </select>\n//               </div>\n//             </div>\n//             <button type=\"submit\">Enregistrer</button>\n//           </form>\n//         </div>\n//       </div>\n//     );\n//   };\n\n//   return (\n//     <div className=\"table-container\">\n//       <table className=\"table\">\n//         <thead className=\"thead-dark\">\n//           <tr>\n//             <th>Nom</th>\n//             <th>Adresse Email</th>\n//             <th>Rôle</th>\n//             <th>Mot de passe</th>\n//             <th>Action</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {renderTableData()}\n//         </tbody>\n//       </table>\n//       {renderPagination()}\n//       {renderModal()}\n//       {renderDeleteConfirmationModal()}\n//     </div>\n//   );\n// };\n\n// export default TableUsers;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from '../router/axiosInstance';\nimport '../../css/Table.css'; // Import custom CSS file for styling\nimport Swal from 'sweetalert2';\nimport { getToken, deleteToken } from '../router/auth';\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[A-Za-z\\d@$!%*?&]{8,}$/;\nconst TableUsers = ({\n  data: initialData,\n  itemsPerPage,\n  reloadData\n}) => {\n  _s();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [selectedRow, setSelectedRow] = useState(null);\n  const [rowToDelete, setRowToDelete] = useState(null);\n  const [role, setRole] = useState('');\n  const [data, setData] = useState(initialData);\n  const [passwordError, setPasswordError] = useState('');\n  const [error, setError] = useState(null);\n  const [user, setUser] = useState(null);\n  const navigate = useNavigate();\n  const [password, setPassword] = useState('');\n  const [password_confirmation, setConfirmPassword] = useState('');\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const token = getToken();\n        if (token) {\n          const response = await axios.get('http://localhost:8000/api/user', {});\n          setUser(response.data.user.id);\n        }\n      } catch (error) {\n        setError(error);\n      }\n    };\n    fetchUser();\n  }, []);\n  useEffect(() => {\n    setData(initialData);\n  }, [initialData]);\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    role: '',\n    password: '',\n    password_confirmation: ''\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const handleRoleChange = e => {\n    setRole(e.target.value);\n    handleChange(e);\n  };\n  const handleLogout = async () => {\n    try {\n      const token = getToken();\n      if (token) {\n        await axios.post('http://localhost:8000/api/logout', null, {});\n        deleteToken();\n        navigate('/');\n      }\n    } catch (error) {\n      console.error('Logout failed', error);\n    }\n  };\n  const handleUpdateUser = async e => {\n    e.preventDefault();\n\n    // Check if passwords match and meet criteria\n    if (password !== password_confirmation) {\n      setPasswordError(\"Les mots de passe ne correspondent pas !\");\n      return;\n    }\n    // else if (!passwordRegex.test(password)) {\n    //   setPasswordError('Le mot de passe doit contenir au moins 8 caractères, incluant une majuscule, une minuscule et un chiffre.');\n    //   return;\n    // }\n\n    setPasswordError(''); // Reset password error\n\n    try {\n      const updatedData = {\n        name: formData.name,\n        email: formData.email,\n        role: formData.role,\n        password: formData.password,\n        password_confirmation: formData.password_confirmation\n      };\n      const response = await axios.put(`http://localhost:8000/api/modifier/${selectedRow.id}`, updatedData);\n      if (response.data) {\n        reloadData();\n        handleCloseModal();\n        if (selectedRow.id !== user) {\n          Swal.fire({\n            icon: 'success',\n            title: 'Mis à jour!',\n            text: `Le compte de ${updatedData.name} a été mis à jour avec succès.`,\n            confirmButtonColor: '#3085d6'\n          });\n        } else {\n          Swal.fire({\n            icon: 'success',\n            title: 'Mis à jour!',\n            text: `Le compte de ${updatedData.name} a été mis à jour avec succès. Merci de vous reconnecter.`,\n            confirmButtonColor: '#3085d6'\n          });\n          handleLogout();\n        }\n      }\n    } catch (error) {\n      console.error(\"Échec de la mise à jour de l'utilisateur :\", error);\n      alert(\"Une erreur s'est produite lors de la mise à jour de l'utilisateur.\");\n    }\n  };\n  const handlePasswordChange = e => {\n    const newPass = e.target.value;\n    setPassword(newPass);\n    handleChange(e);\n    if (!passwordRegex.test(newPass)) {\n      setPasswordError('Le mot de passe doit contenir au moins 8 caractères, incluant une majuscule, une minuscule, un chiffre et un caractère spécial.');\n    } else {\n      setPasswordError('');\n    }\n  };\n  const handleShowModal = rowData => {\n    setSelectedRow(rowData);\n    setFormData({\n      name: rowData.name,\n      email: rowData.email,\n      role: rowData.roles,\n      password: '',\n      password_confirmation: ''\n    });\n    console.log(formData);\n  };\n  const handleCloseModal = () => {\n    setSelectedRow(null);\n    setPasswordError(''); // Clear password error when closing modal\n  };\n\n  // const  = (e) => {\n  //   setRole(e.target.value);\n  //   handleChange(e)\n  // };\n\n  const handleDeleteRow = async () => {\n    if (!rowToDelete) return;\n    try {\n      const ItemId = rowToDelete.id;\n      const response = await axios.delete(`http://localhost:8000/api/supprimer/${ItemId}`);\n      if (response.status !== 200) {\n        throw new Error('Failed to delete the user');\n      }\n      reloadData();\n      setData(data.filter(item => item.id !== rowToDelete.id));\n      setRowToDelete(null);\n      Swal.fire({\n        icon: 'success',\n        title: 'Supprimé!',\n        text: `Le compte ${rowToDelete.name} a été supprimé avec succès.`,\n        confirmButtonColor: '#3085d6'\n      });\n    } catch (error) {\n      console.error(\"Failed to delete user:\", error);\n    }\n  };\n  const handleShowDeleteModal = item => {\n    setRowToDelete(item);\n  };\n  const handleConfirmPasswordChange = e => {\n    setConfirmPassword(e.target.value);\n    handleChange(e);\n  };\n  const totalPages = Math.ceil(data.length / itemsPerPage);\n  const handleChangePage = page => {\n    setCurrentPage(page);\n  };\n  const renderDeleteConfirmationModal = () => {\n    if (!rowToDelete) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-delete\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close\",\n          onClick: () => setRowToDelete(null),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Confirmation de suppression\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Voulez-vous vraiment supprimer ce compte \", rowToDelete.name, \"?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btns\",\n          style: {\n            textAlign: 'center',\n            marginTop: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-delete\",\n            onClick: handleDeleteRow,\n            style: {\n              marginRight: '10px'\n            },\n            children: \"Supprimer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setRowToDelete(null),\n            children: \"Annuler\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 580,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 7\n    }, this);\n  };\n  const renderTableData = () => {\n    const startIndex = (currentPage - 1) * itemsPerPage;\n    const endIndex = startIndex + itemsPerPage;\n    return data.slice(startIndex, endIndex).map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: item.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: item.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: item.roles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: \"***********\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tooltip\",\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              onClick: () => handleShowModal(item),\n              xmlns: \"http://www.w3.org/2000/svg\",\n              width: \"1.2em\",\n              height: \"1.2em\",\n              viewBox: \"0 0 24 24\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                fill: \"#78c2ff\",\n                d: \"m21.561 5.318l-2.879-2.879A1.495 1.495 0 0 0 17.621 2c-.385 0-.768.146-1.061.439L13 6H4a1 1 0 0 0-1 1v13a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1v-9l3.561-3.561c.293-.293.439-.677.439-1.061s-.146-.767-.439-1.06M11.5 14.672L9.328 12.5l6.293-6.293l2.172 2.172zm-2.561-1.339l1.756 1.728L9 15zM16 19H5V8h6l-3.18 3.18c-.293.293-.478.812-.629 1.289c-.16.5-.191 1.056-.191 1.47V17h3.061c.414 0 1.108-.1 1.571-.29c.464-.19.896-.347 1.188-.64L16 13zm2.5-11.328L16.328 5.5l1.293-1.293l2.171 2.172z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 599,\n                columnNumber: 142\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 599,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"tooltiptext\",\n              children: \"Modifier\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 600,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tooltip\",\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              onClick: () => handleShowDeleteModal(item),\n              xmlns: \"http://www.w3.org/2000/svg\",\n              width: \"1.6em\",\n              height: \"1.6em\",\n              viewBox: \"0 0 24 24\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                fill: \"#00a6ed\",\n                d: \"M12 2c5.53 0 10 4.47 10 10s-4.47 10-10 10S2 17.53 2 12S6.47 2 12 2m5 5h-2.5l-1-1h-3l-1 1H7v2h10zM9 18h6a1 1 0 0 0 1-1v-7H8v7a1 1 0 0 0 1 1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 603,\n                columnNumber: 149\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 603,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"tooltiptext\",\n              children: \"Supprimer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 604,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 602,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 9\n      }, this)]\n    }, startIndex + index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 7\n    }, this));\n  };\n  const renderPagination = () => {\n    const pages = [];\n    const maxPagesToShow = 5;\n    const startPage = Math.max(1, currentPage - Math.floor(maxPagesToShow / 2));\n    const endPage = Math.min(totalPages, startPage + maxPagesToShow - 1);\n    for (let i = startPage; i <= endPage; i++) {\n      pages.push( /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `page-item ${currentPage === i ? 'active' : ''}`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"page-link\",\n          onClick: () => handleChangePage(i),\n          children: i\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 621,\n          columnNumber: 11\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 9\n      }, this));\n    }\n    const previousButton = /*#__PURE__*/_jsxDEV(\"li\", {\n      className: `page-item ${currentPage === 1 ? 'disabled' : ''}`,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"page-link\",\n        onClick: () => handleChangePage(currentPage - 1),\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 628,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 7\n    }, this);\n    const nextButton = /*#__PURE__*/_jsxDEV(\"li\", {\n      className: `page-item ${currentPage === totalPages ? 'disabled' : ''}`,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"page-link\",\n        onClick: () => handleChangePage(currentPage + 1),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 634,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 7\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"pagination\",\n        children: [previousButton, pages, nextButton]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 639,\n      columnNumber: 7\n    }, this);\n  };\n  const renderModal = () => {\n    if (!selectedRow) return null;\n    console.log(formData);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close\",\n          onClick: handleCloseModal,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Mettre \\xE0 jour les informations :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleUpdateUser,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-items\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Nom Complet :\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 660,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"name\",\n                value: formData.name,\n                onChange: handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 661,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 659,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Email:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 670,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                name: \"email\",\n                value: formData.email,\n                onChange: handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 671,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 669,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Mot de passe:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 680,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                name: \"password\",\n                value: formData.password,\n                onChange: handlePasswordChange,\n                required: true,\n                title: \"Le mot de passe doit contenir au moins 8 caract\\xE8res, incluant une majuscule, une minuscule et un chiffre\",\n                className: passwordError ? 'input-error input-infos' : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 681,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 679,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Confirmer Mot de passe:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 692,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                name: \"password_confirmation\",\n                value: formData.password_confirmation,\n                onChange: handleConfirmPasswordChange,\n                required: true,\n                className: passwordError ? 'input-error' : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 693,\n                columnNumber: 17\n              }, this), passwordError && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: 'red',\n                  marginTop: '5px'\n                },\n                children: passwordError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 701,\n                columnNumber: 35\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 691,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"role\",\n                children: \"R\\xF4le:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 704,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"role\",\n                id: \"role\",\n                required: true,\n                value: formData.role,\n                onChange: handleRoleChange,\n                className: \"selectrole\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  disabled: true,\n                  selected: true,\n                  children: \"Choose a role\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 706,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Super Admin\",\n                  children: \"Super Admin\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 707,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Admin\",\n                  children: \"Admin\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 708,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Utilisateur\",\n                  children: \"Utilisateur\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 709,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 705,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 703,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 658,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Enregistrer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 713,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 657,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 654,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 653,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"thead-dark\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 725,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Adresse Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 726,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"R\\xF4le\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 727,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Mot de passe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 728,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 729,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 724,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 723,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: renderTableData()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 732,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 722,\n      columnNumber: 7\n    }, this), renderPagination(), renderModal(), renderDeleteConfirmationModal()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 721,\n    columnNumber: 5\n  }, this);\n};\n_s(TableUsers, \"FpK54NIq3b0/e746osfWsBtf5bs=\", false, function () {\n  return [useNavigate];\n});\n_c = TableUsers;\nexport default TableUsers;\nvar _c;\n$RefreshReg$(_c, \"TableUsers\");","map":{"version":3,"names":["React","useState","useEffect","axios","Swal","getToken","deleteToken","Link","useNavigate","jsxDEV","_jsxDEV","passwordRegex","TableUsers","data","initialData","itemsPerPage","reloadData","_s","currentPage","setCurrentPage","selectedRow","setSelectedRow","rowToDelete","setRowToDelete","role","setRole","setData","passwordError","setPasswordError","error","setError","user","setUser","navigate","password","setPassword","password_confirmation","setConfirmPassword","fetchUser","token","response","get","id","formData","setFormData","name","email","handleChange","e","value","target","prevState","handleRoleChange","handleLogout","post","console","handleUpdateUser","preventDefault","updatedData","put","handleCloseModal","fire","icon","title","text","confirmButtonColor","alert","handlePasswordChange","newPass","test","handleShowModal","rowData","roles","log","handleDeleteRow","ItemId","delete","status","Error","filter","item","handleShowDeleteModal","handleConfirmPasswordChange","totalPages","Math","ceil","length","handleChangePage","page","renderDeleteConfirmationModal","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","marginTop","marginRight","renderTableData","startIndex","endIndex","slice","map","index","xmlns","width","height","viewBox","fill","d","renderPagination","pages","maxPagesToShow","startPage","max","floor","endPage","min","i","push","previousButton","nextButton","renderModal","onSubmit","type","onChange","required","color","htmlFor","disabled","selected","_c","$RefreshReg$"],"sources":["/home/kawtar/Desktop/Invoice_Project_Frontend/src/Components/GestionComptes/TableUsers.js"],"sourcesContent":["\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from '../router/axiosInstance';\r\n// import '../../css/Table.css'; // Import custom CSS file for styling\r\n// import Swal from 'sweetalert2';\r\n// import { getToken,deleteToken } from '../router/auth';\r\n// import { Link, useNavigate } from \"react-router-dom\";\r\n\r\n\r\n// const TableUsers = ({ data: initialData, itemsPerPage, reloadData }) => {\r\n//   const [currentPage, setCurrentPage] = useState(1);\r\n//   const [selectedRow, setSelectedRow] = useState(null);\r\n//   const [rowToDelete, setRowToDelete] = useState(null);\r\n//   const [role, setRole] = useState('');\r\n//   const [data, setData] = useState(initialData);\r\n//   const [passwordError, setPasswordError] = useState('');\r\n//   const [error, setError] = useState(null); \r\n//   const [user, setUser] = useState(null); \r\n//   const navigate = useNavigate();\r\n\r\n    \r\n//   useEffect(() => {\r\n//     const fetchUser = async () => {\r\n//       try {\r\n//         const token = getToken();\r\n\r\n//         if (token) {\r\n//           const response = await axios.get('http://localhost:8000/api/user', {\r\n//           });\r\n//           setUser(response.data.user.id);\r\n//         }\r\n//       } catch (error) {\r\n//         setError(error);\r\n//       }\r\n//     };\r\n\r\n//     fetchUser();\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     setData(initialData);\r\n//   }, [initialData]);\r\n  \r\n//   const [formData, setFormData] = useState({\r\n//     name: '',\r\n//     email: '',\r\n//     role: '',\r\n//     password: '',\r\n//     password_confirmation: ''\r\n//   });\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData(prevState => ({\r\n//       ...prevState,\r\n//       [name]: value\r\n//     }));\r\n//   };\r\n\r\n//   const handleRoleChange = (e) => {\r\n//     setRole(e.target.value);\r\n//     handleChange(e)\r\n//   };\r\n\r\n//   const handleLogout = async () => {\r\n//     try {\r\n//       const token = getToken();\r\n  \r\n//       if (token) {\r\n//         await axios.post('http://localhost:8000/api/logout', null, {\r\n//         });\r\n//         deleteToken();\r\n//         navigate('/');  \r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Logout failed', error);\r\n//       }\r\n//       };\r\n\r\n//   const handleUpdateUser = async (e) => {\r\n//     e.preventDefault();\r\n//     if (formData.password !== formData.password_confirmation) {\r\n//       setPasswordError(\"Les mots de passe ne correspondent pas !\");\r\n//       return;\r\n//     }\r\n//     setPasswordError('');\r\n  \r\n//     try {\r\n//       const updatedData = {\r\n//         name: formData.name,\r\n//         email: formData.email,\r\n//         role: formData.role,\r\n//         password: formData.password ,\r\n//         password_confirmation: formData.password_confirmation ,\r\n//       };\r\n     \r\n//       const response = await axios.put(`http://localhost:8000/api/modifier/${selectedRow.id}`, updatedData);\r\n//       console.log(selectedRow.id);\r\n//       console.log(typeof selectedRow.id);\r\n//       if (response.data) {\r\n//       reloadData();\r\n//       handleCloseModal();\r\n\r\n//       if (selectedRow.id != user) {\r\n\r\n//         Swal.fire({\r\n//           icon: 'success',\r\n//           title: 'Mis à jour!',\r\n//           text: `Le compte de ${updatedData.name} a été mis à jour avec succès.`,\r\n//           confirmButtonColor: '#3085d6',\r\n//         });\r\n//       } else {\r\n//         Swal.fire({\r\n//           icon: 'success',\r\n//           title: 'Mis à jour!',\r\n//           text: `Le compte de ${updatedData.name} a été mis à jour avec succès merci de refaire votre login .`,\r\n//           confirmButtonColor: '#3085d6',\r\n//         });\r\n//         handleLogout()\r\n//       }\r\n//     }\r\n//     } catch (error) {\r\n//       console.error(\"Échec de la mise à jour de l'utilisateur :\", error);\r\n//       alert(\"Une erreur s'est produite lors de la mise à jour de l'utilisateur.\");\r\n//     }\r\n//   };\r\n  \r\n\r\n//   const handleShowModal = (rowData) => {\r\n//     setSelectedRow(rowData);\r\n//     setFormData({\r\n//       name: rowData.name,\r\n//       email: rowData.email,\r\n//       role: rowData.roles,\r\n//       password: '',\r\n//       password_confirmation: ''\r\n//     });\r\n//     console.log(formData);\r\n//   };\r\n\r\n//   const handleCloseModal = () => {\r\n//     setSelectedRow(null);\r\n//     setPasswordError(''); // Clear password error when closing modal\r\n//   };\r\n\r\n//   // const  = (e) => {\r\n//   //   setRole(e.target.value);\r\n//   //   handleChange(e)\r\n//   // };\r\n\r\n//   const handleDeleteRow = async () => {\r\n//     if (!rowToDelete) return;\r\n\r\n//     try {\r\n//       const ItemId=rowToDelete.id;\r\n//       const response = await axios.delete(`http://localhost:8000/api/supprimer/${ItemId}`);\r\n\r\n//       if (response.status !== 200) {\r\n//         throw new Error('Failed to delete the user');\r\n//       }\r\n\r\n//       reloadData();\r\n//       setData(data.filter(item => item.id !== rowToDelete.id));\r\n//       setRowToDelete(null);\r\n\r\n//       Swal.fire({\r\n//         icon: 'success',\r\n//         title: 'Supprimé!',\r\n//         text: `Le compte ${rowToDelete.name} a été supprimé avec succès.`,\r\n//         confirmButtonColor: '#3085d6',\r\n//       });\r\n//     } catch (error) {\r\n//       console.error(\"Failed to delete user:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleShowDeleteModal = (item) => {\r\n//     setRowToDelete(item);\r\n//   };  \r\n\r\n//   const totalPages = Math.ceil(data.length / itemsPerPage);\r\n\r\n//   const handleChangePage = (page) => {\r\n//     setCurrentPage(page);\r\n//   };\r\n\r\n//   const renderDeleteConfirmationModal = () => {\r\n//     if (!rowToDelete) return null;\r\n\r\n//     return (\r\n//       <div className=\"modal-delete\">\r\n//         <div className=\"modal-content\">\r\n//           <span className=\"close\" onClick={() => setRowToDelete(null)}>&times;</span>\r\n//           <h2>Confirmation de suppression</h2>\r\n//           <p>Voulez-vous vraiment supprimer ce compte {rowToDelete.name}?</p>\r\n//           <div className='btns' style={{ textAlign: 'center', marginTop: '20px' }}>\r\n//             <button className='btn-delete' onClick={handleDeleteRow} style={{ marginRight: '10px'}}>Supprimer</button>\r\n//             <button onClick={() => setRowToDelete(null)}>Annuler</button>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   };\r\n\r\n//   const renderTableData = () => {\r\n//     const startIndex = (currentPage - 1) * itemsPerPage;\r\n//     const endIndex = startIndex + itemsPerPage;\r\n//     return data.slice(startIndex, endIndex).map((item, index) => (\r\n//       <tr key={startIndex + index}>\r\n//         <td>{item.name}</td>\r\n//         <td>{item.email}</td>\r\n//         <td>{item.roles}</td>\r\n//         <td>***********</td>\r\n//         <td>\r\n//           <div className='actions'>\r\n//             <span className=\"tooltip\">\r\n//               <svg onClick={() => handleShowModal(item)} xmlns=\"http://www.w3.org/2000/svg\" width=\"1.2em\" height=\"1.2em\" viewBox=\"0 0 24 24\"><path fill=\"#78c2ff\" d=\"m21.561 5.318l-2.879-2.879A1.495 1.495 0 0 0 17.621 2c-.385 0-.768.146-1.061.439L13 6H4a1 1 0 0 0-1 1v13a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1v-9l3.561-3.561c.293-.293.439-.677.439-1.061s-.146-.767-.439-1.06M11.5 14.672L9.328 12.5l6.293-6.293l2.172 2.172zm-2.561-1.339l1.756 1.728L9 15zM16 19H5V8h6l-3.18 3.18c-.293.293-.478.812-.629 1.289c-.16.5-.191 1.056-.191 1.47V17h3.061c.414 0 1.108-.1 1.571-.29c.464-.19.896-.347 1.188-.64L16 13zm2.5-11.328L16.328 5.5l1.293-1.293l2.171 2.172z\"></path></svg>\r\n//               <span className=\"tooltiptext\">Modifier</span>\r\n//             </span>\r\n//             <span className=\"tooltip\">\r\n//               <svg onClick={() => handleShowDeleteModal(item)}  xmlns=\"http://www.w3.org/2000/svg\" width=\"1.6em\" height=\"1.6em\" viewBox=\"0 0 24 24\"><path fill=\"#00a6ed\" d=\"M12 2c5.53 0 10 4.47 10 10s-4.47 10-10 10S2 17.53 2 12S6.47 2 12 2m5 5h-2.5l-1-1h-3l-1 1H7v2h10zM9 18h6a1 1 0 0 0 1-1v-7H8v7a1 1 0 0 0 1 1\"></path></svg>\r\n//               <span className=\"tooltiptext\">Supprimer</span>\r\n//             </span>\r\n//           </div>\r\n//         </td>\r\n//       </tr>\r\n//     ));\r\n//   };\r\n\r\n//   const renderPagination = () => {\r\n//     const pages = [];\r\n//     const maxPagesToShow = 5;\r\n//     const startPage = Math.max(1, currentPage - Math.floor(maxPagesToShow / 2));\r\n//     const endPage = Math.min(totalPages, startPage + maxPagesToShow - 1);\r\n\r\n//     for (let i = startPage; i <= endPage; i++) {\r\n//       pages.push(\r\n//         <li className={`page-item ${currentPage === i ? 'active' : ''}`} key={i}>\r\n//           <button className=\"page-link\" onClick={() => handleChangePage(i)}>{i}</button>\r\n//         </li>\r\n//       );\r\n//     }\r\n\r\n//     const previousButton = (\r\n//       <li className={`page-item ${currentPage === 1 ? 'disabled' : ''}`}>\r\n//         <button className=\"page-link\" onClick={() => handleChangePage(currentPage - 1)}>Previous</button>\r\n//       </li>\r\n//     );\r\n\r\n//     const nextButton = (\r\n//       <li className={`page-item ${currentPage === totalPages ? 'disabled' : ''}`}>\r\n//         <button className=\"page-link\" onClick={() => handleChangePage(currentPage + 1)}>Next</button>\r\n//       </li>\r\n//     );\r\n\r\n//     return (\r\n//       <nav>\r\n//         <ul className=\"pagination\">\r\n//           {previousButton}\r\n//           {pages}\r\n//           {nextButton}\r\n//         </ul>\r\n//       </nav>\r\n//     );\r\n//   };\r\n\r\n//   const renderModal = () => {\r\n//     if (!selectedRow) return null;\r\n//     console.log(formData);\r\n//     return (\r\n//       <div className=\"modal\">\r\n//         <div className=\"modal-content\">\r\n//           <span className=\"close\" onClick={handleCloseModal}>&times;</span>\r\n//           <h3>Mettre à jour les informations :</h3>\r\n//           <form onSubmit={handleUpdateUser}>\r\n//             <div className='modal-items'>\r\n//               <div className=\"modal-item\">\r\n//                 <label>Nom Complet :</label>\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   name=\"name\"\r\n//                   value={formData.name}\r\n//                   onChange={handleChange}\r\n//                   required\r\n//                 />\r\n//               </div>\r\n//               <div className=\"modal-item\">\r\n//                 <label>Email:</label>\r\n//                 <input\r\n//                   type=\"email\"\r\n//                   name=\"email\"\r\n//                   value={formData.email}\r\n//                   onChange={handleChange}\r\n//                   required\r\n//                 />\r\n//               </div>\r\n//               <div className=\"modal-item\">\r\n//                 <label>Mot de passe:</label>\r\n//                 <input\r\n//                   type=\"password\"\r\n//                   name=\"password\"\r\n//                   value={formData.password}\r\n//                   onChange={handleChange}\r\n//                   required\r\n//                 />\r\n//               </div>\r\n//               <div className=\"modal-item\">\r\n//                 <label>Confirmer Mot de passe:</label>\r\n//                 <input\r\n//                   type=\"password\"\r\n//                   name=\"password_confirmation\"\r\n//                   value={formData.password_confirmation}\r\n//                   onChange={handleChange}\r\n//                   required\r\n//                 />\r\n//                 {passwordError && <div style={{ color: 'red', marginTop: '5px' }}>{passwordError}</div>}\r\n//               </div>\r\n//               <div className=\"modal-item\">\r\n//                 <label htmlFor=\"role\">Rôle:</label>\r\n//                 <select name=\"role\" id=\"role\" required value={formData.role}  onChange={handleRoleChange} className='selectrole'>\r\n//                   <option value=\"\" disabled selected>Choose a role</option>\r\n//                   <option value=\"Super Admin\">Super Admin</option>\r\n//                   <option value=\"Admin\">Admin</option>\r\n//                   <option value=\"Utilisateur\">Utilisateur</option>\r\n//                 </select>\r\n//               </div>\r\n//             </div>\r\n//             <button type=\"submit\">Enregistrer</button>\r\n//           </form>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"table-container\">\r\n//       <table className=\"table\">\r\n//         <thead className=\"thead-dark\">\r\n//           <tr>\r\n//             <th>Nom</th>\r\n//             <th>Adresse Email</th>\r\n//             <th>Rôle</th>\r\n//             <th>Mot de passe</th>\r\n//             <th>Action</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {renderTableData()}\r\n//         </tbody>\r\n//       </table>\r\n//       {renderPagination()}\r\n//       {renderModal()}\r\n//       {renderDeleteConfirmationModal()}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default TableUsers;\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from '../router/axiosInstance';\r\nimport '../../css/Table.css'; // Import custom CSS file for styling\r\nimport Swal from 'sweetalert2';\r\nimport { getToken,deleteToken } from '../router/auth';\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nconst passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[A-Za-z\\d@$!%*?&]{8,}$/;\r\n\r\n\r\nconst TableUsers = ({ data: initialData, itemsPerPage, reloadData }) => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [selectedRow, setSelectedRow] = useState(null);\r\n  const [rowToDelete, setRowToDelete] = useState(null);\r\n  const [role, setRole] = useState('');\r\n  const [data, setData] = useState(initialData);\r\n  const [passwordError, setPasswordError] = useState('');\r\n  const [error, setError] = useState(null); \r\n  const [user, setUser] = useState(null); \r\n  const navigate = useNavigate();\r\n  const [password, setPassword] = useState('');\r\n  const [password_confirmation, setConfirmPassword] = useState('');\r\n\r\n    \r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      try {\r\n        const token = getToken();\r\n\r\n        if (token) {\r\n          const response = await axios.get('http://localhost:8000/api/user', {\r\n          });\r\n          setUser(response.data.user.id);\r\n        }\r\n      } catch (error) {\r\n        setError(error);\r\n      }\r\n    };\r\n\r\n    fetchUser();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setData(initialData);\r\n  }, [initialData]);\r\n  \r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    role: '',\r\n    password: '',\r\n    password_confirmation: ''\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prevState => ({\r\n      ...prevState,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const handleRoleChange = (e) => {\r\n    setRole(e.target.value);\r\n    handleChange(e)\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      const token = getToken();\r\n  \r\n      if (token) {\r\n        await axios.post('http://localhost:8000/api/logout', null, {\r\n        });\r\n        deleteToken();\r\n        navigate('/');  \r\n      }\r\n    } catch (error) {\r\n      console.error('Logout failed', error);\r\n      }\r\n      };\r\n\r\nconst handleUpdateUser = async (e) => {\r\n  e.preventDefault();\r\n\r\n  // Check if passwords match and meet criteria\r\n  if (password !== password_confirmation) {\r\n    setPasswordError(\"Les mots de passe ne correspondent pas !\");\r\n    return;\r\n  } \r\n  // else if (!passwordRegex.test(password)) {\r\n  //   setPasswordError('Le mot de passe doit contenir au moins 8 caractères, incluant une majuscule, une minuscule et un chiffre.');\r\n  //   return;\r\n  // }\r\n\r\n  setPasswordError(''); // Reset password error\r\n\r\n  try {\r\n    const updatedData = {\r\n      name: formData.name,\r\n      email: formData.email,\r\n      role: formData.role,\r\n      password: formData.password,\r\n      password_confirmation: formData.password_confirmation,\r\n    };\r\n    \r\n    const response = await axios.put(`http://localhost:8000/api/modifier/${selectedRow.id}`, updatedData);\r\n\r\n    if (response.data) {\r\n      reloadData();\r\n      handleCloseModal();\r\n\r\n      if (selectedRow.id !== user) {\r\n        Swal.fire({\r\n          icon: 'success',\r\n          title: 'Mis à jour!',\r\n          text: `Le compte de ${updatedData.name} a été mis à jour avec succès.`,\r\n          confirmButtonColor: '#3085d6',\r\n        });\r\n      } else {\r\n        Swal.fire({\r\n          icon: 'success',\r\n          title: 'Mis à jour!',\r\n          text: `Le compte de ${updatedData.name} a été mis à jour avec succès. Merci de vous reconnecter.`,\r\n          confirmButtonColor: '#3085d6',\r\n        });\r\n        handleLogout();\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Échec de la mise à jour de l'utilisateur :\", error);\r\n    alert(\"Une erreur s'est produite lors de la mise à jour de l'utilisateur.\");\r\n  }\r\n};\r\n\r\nconst handlePasswordChange = (e) => {\r\n  const newPass = e.target.value;\r\n  setPassword(newPass);\r\n    handleChange(e)\r\n  if (!passwordRegex.test(newPass)) {\r\n    setPasswordError('Le mot de passe doit contenir au moins 8 caractères, incluant une majuscule, une minuscule, un chiffre et un caractère spécial.');\r\n  } else {\r\n    setPasswordError('');\r\n  }\r\n\r\n};\r\n\r\n  const handleShowModal = (rowData) => {\r\n    setSelectedRow(rowData);\r\n    setFormData({\r\n      name: rowData.name,\r\n      email: rowData.email,\r\n      role: rowData.roles,\r\n      password: '',\r\n      password_confirmation: ''\r\n    });\r\n    console.log(formData);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setSelectedRow(null);\r\n    setPasswordError(''); // Clear password error when closing modal\r\n  };\r\n\r\n  // const  = (e) => {\r\n  //   setRole(e.target.value);\r\n  //   handleChange(e)\r\n  // };\r\n\r\n  const handleDeleteRow = async () => {\r\n    if (!rowToDelete) return;\r\n\r\n    try {\r\n      const ItemId=rowToDelete.id;\r\n      const response = await axios.delete(`http://localhost:8000/api/supprimer/${ItemId}`);\r\n\r\n      if (response.status !== 200) {\r\n        throw new Error('Failed to delete the user');\r\n      }\r\n\r\n      reloadData();\r\n      setData(data.filter(item => item.id !== rowToDelete.id));\r\n      setRowToDelete(null);\r\n\r\n      Swal.fire({\r\n        icon: 'success',\r\n        title: 'Supprimé!',\r\n        text: `Le compte ${rowToDelete.name} a été supprimé avec succès.`,\r\n        confirmButtonColor: '#3085d6',\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Failed to delete user:\", error);\r\n    }\r\n  };\r\n\r\n  const handleShowDeleteModal = (item) => {\r\n    setRowToDelete(item);\r\n  };  \r\n  const handleConfirmPasswordChange = (e) => {\r\n    setConfirmPassword(e.target.value);\r\n     handleChange(e) \r\n  };\r\n  const totalPages = Math.ceil(data.length / itemsPerPage);\r\n\r\n  const handleChangePage = (page) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  const renderDeleteConfirmationModal = () => {\r\n    if (!rowToDelete) return null;\r\n\r\n    return (\r\n      <div className=\"modal-delete\">\r\n        <div className=\"modal-content\">\r\n          <span className=\"close\" onClick={() => setRowToDelete(null)}>&times;</span>\r\n          <h2>Confirmation de suppression</h2>\r\n          <p>Voulez-vous vraiment supprimer ce compte {rowToDelete.name}?</p>\r\n          <div className='btns' style={{ textAlign: 'center', marginTop: '20px' }}>\r\n            <button className='btn-delete' onClick={handleDeleteRow} style={{ marginRight: '10px'}}>Supprimer</button>\r\n            <button onClick={() => setRowToDelete(null)}>Annuler</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderTableData = () => {\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    return data.slice(startIndex, endIndex).map((item, index) => (\r\n      <tr key={startIndex + index}>\r\n        <td>{item.name}</td>\r\n        <td>{item.email}</td>\r\n        <td>{item.roles}</td>\r\n        <td>***********</td>\r\n        <td>\r\n          <div className='actions'>\r\n            <span className=\"tooltip\">\r\n              <svg onClick={() => handleShowModal(item)} xmlns=\"http://www.w3.org/2000/svg\" width=\"1.2em\" height=\"1.2em\" viewBox=\"0 0 24 24\"><path fill=\"#78c2ff\" d=\"m21.561 5.318l-2.879-2.879A1.495 1.495 0 0 0 17.621 2c-.385 0-.768.146-1.061.439L13 6H4a1 1 0 0 0-1 1v13a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1v-9l3.561-3.561c.293-.293.439-.677.439-1.061s-.146-.767-.439-1.06M11.5 14.672L9.328 12.5l6.293-6.293l2.172 2.172zm-2.561-1.339l1.756 1.728L9 15zM16 19H5V8h6l-3.18 3.18c-.293.293-.478.812-.629 1.289c-.16.5-.191 1.056-.191 1.47V17h3.061c.414 0 1.108-.1 1.571-.29c.464-.19.896-.347 1.188-.64L16 13zm2.5-11.328L16.328 5.5l1.293-1.293l2.171 2.172z\"></path></svg>\r\n              <span className=\"tooltiptext\">Modifier</span>\r\n            </span>\r\n            <span className=\"tooltip\">\r\n              <svg onClick={() => handleShowDeleteModal(item)}  xmlns=\"http://www.w3.org/2000/svg\" width=\"1.6em\" height=\"1.6em\" viewBox=\"0 0 24 24\"><path fill=\"#00a6ed\" d=\"M12 2c5.53 0 10 4.47 10 10s-4.47 10-10 10S2 17.53 2 12S6.47 2 12 2m5 5h-2.5l-1-1h-3l-1 1H7v2h10zM9 18h6a1 1 0 0 0 1-1v-7H8v7a1 1 0 0 0 1 1\"></path></svg>\r\n              <span className=\"tooltiptext\">Supprimer</span>\r\n            </span>\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    ));\r\n  };\r\n\r\n  const renderPagination = () => {\r\n    const pages = [];\r\n    const maxPagesToShow = 5;\r\n    const startPage = Math.max(1, currentPage - Math.floor(maxPagesToShow / 2));\r\n    const endPage = Math.min(totalPages, startPage + maxPagesToShow - 1);\r\n\r\n    for (let i = startPage; i <= endPage; i++) {\r\n      pages.push(\r\n        <li className={`page-item ${currentPage === i ? 'active' : ''}`} key={i}>\r\n          <button className=\"page-link\" onClick={() => handleChangePage(i)}>{i}</button>\r\n        </li>\r\n      );\r\n    }\r\n\r\n    const previousButton = (\r\n      <li className={`page-item ${currentPage === 1 ? 'disabled' : ''}`}>\r\n        <button className=\"page-link\" onClick={() => handleChangePage(currentPage - 1)}>Previous</button>\r\n      </li>\r\n    );\r\n\r\n    const nextButton = (\r\n      <li className={`page-item ${currentPage === totalPages ? 'disabled' : ''}`}>\r\n        <button className=\"page-link\" onClick={() => handleChangePage(currentPage + 1)}>Next</button>\r\n      </li>\r\n    );\r\n\r\n    return (\r\n      <nav>\r\n        <ul className=\"pagination\">\r\n          {previousButton}\r\n          {pages}\r\n          {nextButton}\r\n        </ul>\r\n      </nav>\r\n    );\r\n  };\r\n\r\n  const renderModal = () => {\r\n    if (!selectedRow) return null;\r\n    console.log(formData);\r\n    return (\r\n      <div className=\"modal\">\r\n        <div className=\"modal-content\">\r\n          <span className=\"close\" onClick={handleCloseModal}>&times;</span>\r\n          <h3>Mettre à jour les informations :</h3>\r\n          <form onSubmit={handleUpdateUser}>\r\n            <div className='modal-items'>\r\n              <div className=\"modal-item\">\r\n                <label>Nom Complet :</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={formData.name}\r\n                  onChange={handleChange}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"modal-item\">\r\n                <label>Email:</label>\r\n                <input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  value={formData.email}\r\n                  onChange={handleChange}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"modal-item\">\r\n                <label>Mot de passe:</label>\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  value={formData.password}\r\n                  onChange={handlePasswordChange}\r\n                  required\r\n                  title=\"Le mot de passe doit contenir au moins 8 caractères, incluant une majuscule, une minuscule et un chiffre\"\r\n                  className={passwordError ? 'input-error input-infos' : ''}\r\n                />\r\n              </div>\r\n              <div className=\"modal-item\">\r\n                <label>Confirmer Mot de passe:</label>\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"password_confirmation\"\r\n                  value={formData.password_confirmation}\r\n                  onChange={handleConfirmPasswordChange}\r\n                  required\r\n                  className={passwordError ? 'input-error' : ''}\r\n                />\r\n                {passwordError && <div style={{ color: 'red', marginTop: '5px' }}>{passwordError}</div>}\r\n              </div>\r\n              <div className=\"modal-item\">\r\n                <label htmlFor=\"role\">Rôle:</label>\r\n                <select name=\"role\" id=\"role\" required value={formData.role}  onChange={handleRoleChange} className='selectrole'>\r\n                  <option value=\"\" disabled selected>Choose a role</option>\r\n                  <option value=\"Super Admin\">Super Admin</option>\r\n                  <option value=\"Admin\">Admin</option>\r\n                  <option value=\"Utilisateur\">Utilisateur</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <button type=\"submit\">Enregistrer</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"table-container\">\r\n      <table className=\"table\">\r\n        <thead className=\"thead-dark\">\r\n          <tr>\r\n            <th>Nom</th>\r\n            <th>Adresse Email</th>\r\n            <th>Rôle</th>\r\n            <th>Mot de passe</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {renderTableData()}\r\n        </tbody>\r\n      </table>\r\n      {renderPagination()}\r\n      {renderModal()}\r\n      {renderDeleteConfirmationModal()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableUsers;\r\n"],"mappings":";;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAC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"},"metadata":{},"sourceType":"module","externalDependencies":[]}