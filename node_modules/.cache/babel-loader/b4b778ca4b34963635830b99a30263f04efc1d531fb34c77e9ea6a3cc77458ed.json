{"ast":null,"code":"var _jsxFileName = \"/home/kawtar/Desktop/Invoice_Project_Frontend/src/Components/GestionComptes/GestionCompte.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import '../../css/GestionCompte.css'; // Make sure you have this CSS file in the same folder\n// import TableUsers from '../../Components/GestionComptes/TableUsers';\n// import { useAuth } from '../../ProtectionComponent/auth-context';\n// import { useNavigate } from 'react-router-dom';\n// import Swal from 'sweetalert2';\n\n// const GestionCompte = () => {\n//   const [formVisible, setFormVisible] = useState(false);\n//   const [TableVisible, setTableVisible] = useState(false);\n//   const [activeBoxId, setActiveBoxId] = useState(null);\n//   const [itemsPerPage, setItemsPerPage] = useState(5);\n//   const [name, setName] = useState('');\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [confirmPassword, setConfirmPassword] = useState('');\n//   const [passwordError, setPasswordError] = useState('');\n//   const [role, setRole] = useState('');\n//   const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[A-Za-z\\d@$!%*?&]{8,}$/;\n//   const [error, setError] = useState('');\n//   const { isLogin } = useAuth();\n//   const navigate = useNavigate();\n\n//   const [users, setUsers] = useState(null);\n//   const [isLoading, setIsLoading] = useState(true); // Loading state\n\n//   const fetchUsers = async () => {\n//     setIsLoading(true); // Start loading\n//     try {\n//       const response = await fetch('http://localhost:8000/api/getUsers', {\n//         headers: { 'Content-Type': 'application/json' },\n//         credentials: 'include',\n//       });\n//       if (!response.ok) {\n//         throw new Error(`HTTP error! status: ${response.status}`);\n//       }\n//       const data = await response.json();\n//       setUsers(data);\n//       setIsLoading(false); // Data has been loaded\n//     } catch (error) {\n//       console.error(\"Failed to fetch user:\", error);\n//       setIsLoading(false); // End loading even if there's an error\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchUsers();\n//   }, []);\n\n//   const handlePasswordChange = (e) => {\n//     const newPass = e.target.value;\n//     setPassword(newPass);\n//     if (!passwordRegex.test(newPass)) {\n//       setPasswordError('Le mot de passe doit contenir au moins 8 caractères, incluant une majuscule, une minuscule, un chiffre et un caractère spécial.');\n//     } else {\n//       setPasswordError('');\n//     }\n//   };\n\n//   const handleConfirmPasswordChange = (e) => {\n//     setConfirmPassword(e.target.value);\n//   };\n\n// const handleSubmit = async (e) => {\n//   e.preventDefault();\n\n//   if (role === '') {\n//     alert('Veuillez sélectionner un rôle valide.');\n//     return;\n//   }\n//   if (!passwordRegex.test(password)) {\n//     setPasswordError('Le mot de passe doit respecter les critères requis.');\n//     return;\n//   }\n//   if (password !== confirmPassword) {\n//     setPasswordError(\"Mots de passe différents !\");\n//     return;\n//   }\n\n//   try {\n//     const response = await fetch(\n//       'http://localhost:8000/api/register',\n//       {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         credentials: 'include',\n//         body: JSON.stringify({ name, email, role, password })\n//       }\n//     );\n\n//     if (response.ok) {\n//       Swal.fire({\n//         icon: 'success',\n//         title: 'Enregistré avec succès',\n//         text: 'L\\'utilisateur a été créé avec succès!',\n//         confirmButtonColor: '#3085d6',\n//         confirmButtonText: 'OK'\n//       });\n\n//       // Reset the form and states after successful registration\n//       setName('');\n//       setEmail('');\n//       setPassword('');\n//       setConfirmPassword('');\n//       setRole('');\n//       fetchUsers(); // Reload the data to reflect the new user\n//       isLogin(); // Ensure this updates your authentication state correctly\n\n//     } else {\n//       const errorData = await response.json();\n//       setError(errorData.message || 'Email ou mot de passe incorrect.');\n//       Swal.fire({\n//         icon: 'error',\n//         title: 'Échec de l\\'enregistrement',\n//         text: errorData.message || 'Impossible de créer l\\'utilisateur.',\n//         confirmButtonColor: '#d33',\n//         confirmButtonText: 'OK'\n//       });\n//     }\n//   } catch (err) {\n//     setError('Échec de la connexion due à une erreur serveur');\n//     Swal.fire({\n//       icon: 'error',\n//       title: 'Erreur Serveur',\n//       text: 'Un problème est survenu lors de l\\'enregistrement.',\n//       confirmButtonColor: '#d33',\n//       confirmButtonText: 'OK'\n//     });\n//   }\n// };\n\n//   const handleBoxClick = (boxId) => {\n//     setActiveBoxId(boxId); // Sets the active box ID\n\n//     if (boxId === 'create') {\n//       setTableVisible(false);\n//       setFormVisible(true); // Shows the form when a box is clicked\n//     } else if (boxId === 'manage') {\n//       setFormVisible(false);\n//       setTableVisible(true); // Assumes there is a similar hook for table visibility\n//     }\n//   };\n\n//   const handleItemsPerPageChange = (e) => {\n//     setItemsPerPage(parseInt(e.target.value)); // Convert the value to an integer\n//   };\n\n//   const handleRoleChange = (e) => {\n//     setRole(e.target.value);\n//   };\n\n//   if (isLoading) {\n//     return <div>Loading...</div>; // Or use a spinner/loading graphic\n//   }\n\n//   return (\n//     <div className=\"GestionCompte\">\n//     <div className={`container ${formVisible ? \"smaller\" : \"\"}`}>\n//       <div className={`box add ${activeBoxId === 'create' ? 'active' : ''} ${activeBoxId !== null ? 'active-top' : ''}`} onClick={() => handleBoxClick('create')}>\n//           <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"4em\" height=\"4em\" viewBox=\"0 0 24 24\"><path fill=\"none\" stroke=\"white\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M17 10h3m3 0h-3m0 0V7m0 3v3M1 20v-1a7 7 0 0 1 7-7v0a7 7 0 0 1 7 7v1m-7-8a4 4 0 1 0 0-8a4 4 0 0 0 0 8\"></path></svg>           \n//           <div>Créer un utilisateur</div>\n//       </div>\n//       <div className={`box management ${activeBoxId === 'manage' ? 'active' : ''} ${activeBoxId !== null ? 'active-top' : ''}`} onClick={() => handleBoxClick('manage')}>\n//           <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"4em\" height=\"5em\" viewBox=\"0 0 2048 2048\"><path fill=\"white\" d=\"M1148 1152q-83-62-179-95t-201-33q-88 0-170 23t-153 64t-129 100t-100 130t-65 153t-23 170H0q0-120 35-231t101-205t156-167t204-115q-56-35-100-82t-76-104t-47-119t-17-129q0-106 40-199t110-162T569 41T768 0t199 40t162 110t110 163t41 199q0 66-16 129t-48 119t-76 103t-101 83q60 23 113 54v152zM384 512q0 80 30 149t82 122t122 83t150 30q79 0 149-30t122-82t83-122t30-150q0-79-30-149t-82-122t-123-83t-149-30q-80 0-149 30t-122 82t-83 123t-30 149m1664 768v768H1024v-768h256v-256h512v256zm-640 0h256v-128h-256zm512 384h-128v128h-128v-128h-256v128h-128v-128h-128v256h768zm0-256h-768v128h768z\"></path></svg>  \n//           <div>Editer les comptes</div>\n//       </div>\n\n//     </div>\n\n//     {formVisible && (\n//       <form className=\"form form-add-user\" onSubmit={handleSubmit}>\n//         <div className=\"form-add-row\">\n//           <div className=\"form-group\">\n//             <label htmlFor=\"nom\">Nom Complet</label>\n//             <input\n//               id=\"nom\"\n//               type=\"text\"\n//               placeholder=\"Nom Complet\"\n//               required\n//               value={name} // This ensures the input is controlled by React state\n//               onChange={(e) => setName(e.target.value)}\n//             /></div>\n//           <div className=\"form-group\">\n//               <label htmlFor=\"email\">Adresse Email</label>\n//               <input\n//                 id=\"email\"\n//                 type=\"email\"\n//                 placeholder=\"Adresse Email\"\n//                 required\n//                 value={email} // Binding state to input\n//                 onChange={(e) => setEmail(e.target.value)}\n//               />\n//           </div>\n//           </div>\n//           <div className=\"form-add-row form-add-row-select\">\n//           <div className=\"form-group\">\n//             <label htmlFor=\"role\">Rôle</label>\n//             <select name=\"role\" id=\"role\" required value={role} onChange={handleRoleChange}>\n//               <option disabled value=\"\">[Choisir un rôle]</option>\n//               <option value=\"Super Admin\">Super Admin</option>\n//               <option value=\"Admin\">Admin</option>\n//               <option value=\"Utilisateur\">Utilisateur</option>\n//             </select>\n//           </div>\n//       </div>\n//       <div className=\"form-add-row\">\n//         <div className=\"form-group\">\n//           <label htmlFor=\"password1\">Mot de passe</label>\n//           <input\n//             id=\"password1\"\n//             type=\"password\"\n//             placeholder=\"Mot de passe\"\n//             required\n//             value={password}\n//             onChange={handlePasswordChange}\n//             title=\"Le mot de passe doit contenir au moins 8 caractères, incluant une majuscule, une minuscule et un chiffre\"\n//             className={passwordError ? 'input-error input-infos' : ''}\n//           />\n\n//         </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"password2\">Confirmer le mot de passe</label>\n//           <input\n//             id=\"password2\"\n//             type=\"password\"\n//             placeholder=\"Confirmer le mot de passe\"\n//             required\n//             value={confirmPassword}\n//             onChange={handleConfirmPasswordChange}\n//             className={passwordError ? 'input-error' : ''}\n//           />\n//         </div>\n\n//       </div>\n//       <div className=\"form-add-row\">\n//         <div className=\"form-group\">\n//           { <div className='errorRegex'>{passwordError}</div> && <div className='errorIdentical'>{passwordError}</div>}\n//         </div>\n//         </div>\n//       <button type=\"submit\">Enregistrer</button>\n//       </form>\n\n//     )}\n\n//     {TableVisible && (\n//       <div>\n//         <select\n//           id=\"itemsPerPageSelect\"\n//           onChange={(e) => handleItemsPerPageChange(e)}\n//           title=\"Nombre de colonnes\"\n//         >\n//         <option value=\"5\">5</option>\n//         <option value=\"10\">10</option>\n//         <option value=\"15\">15</option>\n//         <option value=\"20\">20</option>\n//         </select>\n//         <TableUsers data={users} itemsPerPage={itemsPerPage} reloadData={fetchUsers} />\n//       </div>\n//     )}\n\n//   </div>\n//   );\n// }\n\n// export default GestionCompte;\n\nimport React, { useState, useEffect } from 'react';\nimport '../../css/GestionCompte.css'; // Make sure you have this CSS file in the same folder\nimport TableUsers from '../../Components/GestionComptes/TableUsers';\nimport Swal from 'sweetalert2';\nimport axios from '../router/axiosInstance';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GestionCompte = () => {\n  _s();\n  const [formVisible, setFormVisible] = useState(false);\n  const [TableVisible, setTableVisible] = useState(false);\n  const [activeBoxId, setActiveBoxId] = useState(null);\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [password_confirmation, setConfirmPassword] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [role, setRole] = useState('');\n  const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[A-Za-z\\d@$!%*?&]{8,}$/;\n  const [error, setError] = useState('');\n  const [users, setUsers] = useState(null);\n  const [isLoading, setIsLoading] = useState(true); // Loading state\n\n  const fetchUsers = async () => {\n    setIsLoading(true); // Start loading\n    try {\n      const response = await axios.get('http://localhost:8000/api/afficher');\n      if (response.data) {\n        setUsers(response.data.map(user => ({\n          ...user.user,\n          // user information is expected under 'user' key\n          roles: user.roles.join(\", \") // Since roles are now in array form, join them\n        })));\n      }\n    } catch (error) {\n      console.error(\"Failed to fetch user:\", error);\n    } finally {\n      setIsLoading(false); // End loading, success or error\n    }\n  };\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  const handlePasswordChange = e => {\n    const newPass = e.target.value;\n    setPassword(newPass);\n    if (!passwordRegex.test(newPass)) {\n      setPasswordError('Le mot de passe doit contenir au moins 8 caractères, incluant une majuscule, une minuscule, un chiffre et un caractère spécial.');\n    } else {\n      setPasswordError('');\n    }\n  };\n  const handleConfirmPasswordChange = e => {\n    setConfirmPassword(e.target.value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    //const formData = new FormData(e.target);\n    if (role === '') {\n      alert('Veuillez sélectionner un rôle valide.');\n      return;\n    }\n    if (!passwordRegex.test(password)) {\n      setPasswordError('Le mot de passe doit respecter les critères requis.');\n      return;\n    }\n    if (password !== password_confirmation) {\n      setPasswordError(\"Mots de passe différents !\");\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:8000/api/register', {\n        name,\n        email,\n        role,\n        password,\n        password_confirmation\n      });\n      console.log(response.status);\n      if (response.status == 201) {\n        Swal.fire({\n          icon: 'success',\n          title: 'Enregistré avec succès',\n          text: 'L\\'utilisateur a été créé avec succès!',\n          confirmButtonColor: '#3085d6',\n          confirmButtonText: 'OK'\n        });\n\n        // Reset the form and states after successful registration\n        setName('');\n        setEmail('');\n        setPassword('');\n        setConfirmPassword('');\n        setRole('');\n        fetchUsers(); // Reload the data to reflect the new user\n      } else {\n        const errorData = await response.json();\n        setError(errorData.message || 'Email ou mot de passe incorrect.');\n        Swal.fire({\n          icon: 'error',\n          title: 'Échec de l\\'enregistrement',\n          text: errorData.message || 'Impossible de créer l\\'utilisateur.',\n          confirmButtonColor: '#d33',\n          confirmButtonText: 'OK'\n        });\n      }\n    } catch (err) {\n      setError('Échec de la connexion due à une erreur serveur');\n      Swal.fire({\n        icon: 'error',\n        title: 'Erreur Serveur',\n        text: 'Un problème est survenu lors de l\\'enregistrement.',\n        confirmButtonColor: '#d33',\n        confirmButtonText: 'OK'\n      });\n    }\n  };\n  const handleBoxClick = boxId => {\n    setActiveBoxId(boxId); // Sets the active box ID\n\n    if (boxId === 'create') {\n      setTableVisible(false);\n      setFormVisible(true); // Shows the form when a box is clicked\n    } else if (boxId === 'manage') {\n      setFormVisible(false);\n      setTableVisible(true); // Assumes there is a similar hook for table visibility\n    }\n  };\n  const handleItemsPerPageChange = e => {\n    setItemsPerPage(parseInt(e.target.value)); // Convert the value to an integer\n  };\n  const handleRoleChange = e => {\n    setRole(e.target.value);\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 12\n    }, this); // Or use a spinner/loading graphic\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"GestionCompte\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `container ${formVisible ? \"smaller\" : \"\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `box add ${activeBoxId === 'create' ? 'active' : ''} ${activeBoxId !== null ? 'active-top' : ''}`,\n        onClick: () => handleBoxClick('create'),\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          width: \"4em\",\n          height: \"4em\",\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            fill: \"none\",\n            stroke: \"white\",\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 1.5,\n            d: \"M17 10h3m3 0h-3m0 0V7m0 3v3M1 20v-1a7 7 0 0 1 7-7v0a7 7 0 0 1 7 7v1m-7-8a4 4 0 1 0 0-8a4 4 0 0 0 0 8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 96\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Cr\\xE9er un utilisateur\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `box management ${activeBoxId === 'manage' ? 'active' : ''} ${activeBoxId !== null ? 'active-top' : ''}`,\n        onClick: () => handleBoxClick('manage'),\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          width: \"4em\",\n          height: \"5em\",\n          viewBox: \"0 0 2048 2048\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            fill: \"white\",\n            d: \"M1148 1152q-83-62-179-95t-201-33q-88 0-170 23t-153 64t-129 100t-100 130t-65 153t-23 170H0q0-120 35-231t101-205t156-167t204-115q-56-35-100-82t-76-104t-47-119t-17-129q0-106 40-199t110-162T569 41T768 0t199 40t162 110t110 163t41 199q0 66-16 129t-48 119t-76 103t-101 83q60 23 113 54v152zM384 512q0 80 30 149t82 122t122 83t150 30q79 0 149-30t122-82t83-122t30-150q0-79-30-149t-82-122t-123-83t-149-30q-80 0-149 30t-122 82t-83 123t-30 149m1664 768v768H1024v-768h256v-256h512v256zm-640 0h256v-128h-256zm512 384h-128v128h-128v-128h-256v128h-128v-128h-128v256h768zm0-256h-768v128h768z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 100\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Editer les comptes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 5\n    }, this), formVisible && /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form form-add-user\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-add-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"nom\",\n            children: \"Nom Complet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"nom\",\n            type: \"text\",\n            placeholder: \"Nom Complet\",\n            required: true,\n            value: name // This ensures the input is controlled by React state\n            ,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Adresse Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"email\",\n            type: \"email\",\n            placeholder: \"Adresse Email\",\n            required: true,\n            value: email // Binding state to input\n            ,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-add-row form-add-row-select\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"role\",\n            children: \"R\\xF4le\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"role\",\n            id: \"role\",\n            required: true,\n            value: role,\n            onChange: handleRoleChange,\n            className: \"selectrole\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              disabled: true,\n              selected: true,\n              value: \"\",\n              children: \"[Choisir un r\\xF4le]\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Super Admin\",\n              children: \"Super Admin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Admin\",\n              children: \"Admin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Utilisateur\",\n              children: \"Utilisateur\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-add-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password1\",\n            children: \"Mot de passe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"password1\",\n            type: \"password\",\n            placeholder: \"Mot de passe\",\n            required: true,\n            value: password,\n            onChange: handlePasswordChange,\n            title: \"Le mot de passe doit contenir au moins 8 caract\\xE8res, incluant une majuscule, une minuscule et un chiffre\",\n            className: passwordError ? 'input-error input-infos' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password2\",\n            children: \"Confirmer le mot de passe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"password2\",\n            type: \"password\",\n            placeholder: \"Confirmer le mot de passe\",\n            required: true,\n            value: password_confirmation,\n            onChange: handleConfirmPasswordChange,\n            className: passwordError ? 'input-error' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-add-row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\",\n            children: passwordError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 13\n          }, this) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"errorIdentical\",\n            children: passwordError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 56\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Enregistrer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 7\n    }, this), TableVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"itemsPerPageSelect\",\n        onChange: e => handleItemsPerPageChange(e),\n        title: \"Nombre de colonnes\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"5\",\n          children: \"5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"10\",\n          children: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"15\",\n          children: \"15\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"20\",\n          children: \"20\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableUsers, {\n        data: users,\n        itemsPerPage: itemsPerPage,\n        reloadData: fetchUsers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 416,\n    columnNumber: 5\n  }, this);\n};\n_s(GestionCompte, \"DPJNQ9mK+PtZVwDEKCDdJ2iJjL0=\");\n_c = GestionCompte;\nexport default GestionCompte;\nvar _c;\n$RefreshReg$(_c, \"GestionCompte\");","map":{"version":3,"names":["React","useState","useEffect","TableUsers","Swal","axios","jsxDEV","_jsxDEV","GestionCompte","_s","formVisible","setFormVisible","TableVisible","setTableVisible","activeBoxId","setActiveBoxId","itemsPerPage","setItemsPerPage","name","setName","email","setEmail","password","setPassword","password_confirmation","setConfirmPassword","passwordError","setPasswordError","role","setRole","passwordRegex","error","setError","users","setUsers","isLoading","setIsLoading","fetchUsers","response","get","data","map","user","roles","join","console","handlePasswordChange","e","newPass","target","value","test","handleConfirmPasswordChange","handleSubmit","preventDefault","alert","post","log","status","fire","icon","title","text","confirmButtonColor","confirmButtonText","errorData","json","message","err","handleBoxClick","boxId","handleItemsPerPageChange","parseInt","handleRoleChange","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","xmlns","width","height","viewBox","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","onSubmit","htmlFor","id","type","placeholder","required","onChange","disabled","selected","reloadData","_c","$RefreshReg$"],"sources":["/home/kawtar/Desktop/Invoice_Project_Frontend/src/Components/GestionComptes/GestionCompte.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import '../../css/GestionCompte.css'; // Make sure you have this CSS file in the same folder\r\n// import TableUsers from '../../Components/GestionComptes/TableUsers';\r\n// import { useAuth } from '../../ProtectionComponent/auth-context';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import Swal from 'sweetalert2';\r\n\r\n// const GestionCompte = () => {\r\n//   const [formVisible, setFormVisible] = useState(false);\r\n//   const [TableVisible, setTableVisible] = useState(false);\r\n//   const [activeBoxId, setActiveBoxId] = useState(null);\r\n//   const [itemsPerPage, setItemsPerPage] = useState(5);\r\n//   const [name, setName] = useState('');\r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [confirmPassword, setConfirmPassword] = useState('');\r\n//   const [passwordError, setPasswordError] = useState('');\r\n//   const [role, setRole] = useState('');\r\n//   const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[A-Za-z\\d@$!%*?&]{8,}$/;\r\n//   const [error, setError] = useState('');\r\n//   const { isLogin } = useAuth();\r\n//   const navigate = useNavigate();\r\n\r\n//   const [users, setUsers] = useState(null);\r\n//   const [isLoading, setIsLoading] = useState(true); // Loading state\r\n\r\n//   const fetchUsers = async () => {\r\n//     setIsLoading(true); // Start loading\r\n//     try {\r\n//       const response = await fetch('http://localhost:8000/api/getUsers', {\r\n//         headers: { 'Content-Type': 'application/json' },\r\n//         credentials: 'include',\r\n//       });\r\n//       if (!response.ok) {\r\n//         throw new Error(`HTTP error! status: ${response.status}`);\r\n//       }\r\n//       const data = await response.json();\r\n//       setUsers(data);\r\n//       setIsLoading(false); // Data has been loaded\r\n//     } catch (error) {\r\n//       console.error(\"Failed to fetch user:\", error);\r\n//       setIsLoading(false); // End loading even if there's an error\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchUsers();\r\n//   }, []);\r\n\r\n//   const handlePasswordChange = (e) => {\r\n//     const newPass = e.target.value;\r\n//     setPassword(newPass);\r\n//     if (!passwordRegex.test(newPass)) {\r\n//       setPasswordError('Le mot de passe doit contenir au moins 8 caractères, incluant une majuscule, une minuscule, un chiffre et un caractère spécial.');\r\n//     } else {\r\n//       setPasswordError('');\r\n//     }\r\n//   };\r\n\r\n//   const handleConfirmPasswordChange = (e) => {\r\n//     setConfirmPassword(e.target.value);\r\n//   };\r\n\r\n// const handleSubmit = async (e) => {\r\n//   e.preventDefault();\r\n\r\n//   if (role === '') {\r\n//     alert('Veuillez sélectionner un rôle valide.');\r\n//     return;\r\n//   }\r\n//   if (!passwordRegex.test(password)) {\r\n//     setPasswordError('Le mot de passe doit respecter les critères requis.');\r\n//     return;\r\n//   }\r\n//   if (password !== confirmPassword) {\r\n//     setPasswordError(\"Mots de passe différents !\");\r\n//     return;\r\n//   }\r\n\r\n//   try {\r\n//     const response = await fetch(\r\n//       'http://localhost:8000/api/register',\r\n//       {\r\n//         method: 'POST',\r\n//         headers: { 'Content-Type': 'application/json' },\r\n//         credentials: 'include',\r\n//         body: JSON.stringify({ name, email, role, password })\r\n//       }\r\n//     );\r\n\r\n//     if (response.ok) {\r\n//       Swal.fire({\r\n//         icon: 'success',\r\n//         title: 'Enregistré avec succès',\r\n//         text: 'L\\'utilisateur a été créé avec succès!',\r\n//         confirmButtonColor: '#3085d6',\r\n//         confirmButtonText: 'OK'\r\n//       });\r\n\r\n//       // Reset the form and states after successful registration\r\n//       setName('');\r\n//       setEmail('');\r\n//       setPassword('');\r\n//       setConfirmPassword('');\r\n//       setRole('');\r\n//       fetchUsers(); // Reload the data to reflect the new user\r\n//       isLogin(); // Ensure this updates your authentication state correctly\r\n\r\n//     } else {\r\n//       const errorData = await response.json();\r\n//       setError(errorData.message || 'Email ou mot de passe incorrect.');\r\n//       Swal.fire({\r\n//         icon: 'error',\r\n//         title: 'Échec de l\\'enregistrement',\r\n//         text: errorData.message || 'Impossible de créer l\\'utilisateur.',\r\n//         confirmButtonColor: '#d33',\r\n//         confirmButtonText: 'OK'\r\n//       });\r\n//     }\r\n//   } catch (err) {\r\n//     setError('Échec de la connexion due à une erreur serveur');\r\n//     Swal.fire({\r\n//       icon: 'error',\r\n//       title: 'Erreur Serveur',\r\n//       text: 'Un problème est survenu lors de l\\'enregistrement.',\r\n//       confirmButtonColor: '#d33',\r\n//       confirmButtonText: 'OK'\r\n//     });\r\n//   }\r\n// };\r\n\r\n\r\n//   const handleBoxClick = (boxId) => {\r\n//     setActiveBoxId(boxId); // Sets the active box ID\r\n\r\n//     if (boxId === 'create') {\r\n//       setTableVisible(false);\r\n//       setFormVisible(true); // Shows the form when a box is clicked\r\n//     } else if (boxId === 'manage') {\r\n//       setFormVisible(false);\r\n//       setTableVisible(true); // Assumes there is a similar hook for table visibility\r\n//     }\r\n//   };\r\n\r\n//   const handleItemsPerPageChange = (e) => {\r\n//     setItemsPerPage(parseInt(e.target.value)); // Convert the value to an integer\r\n//   };\r\n\r\n//   const handleRoleChange = (e) => {\r\n//     setRole(e.target.value);\r\n//   };\r\n\r\n//   if (isLoading) {\r\n//     return <div>Loading...</div>; // Or use a spinner/loading graphic\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"GestionCompte\">\r\n//     <div className={`container ${formVisible ? \"smaller\" : \"\"}`}>\r\n//       <div className={`box add ${activeBoxId === 'create' ? 'active' : ''} ${activeBoxId !== null ? 'active-top' : ''}`} onClick={() => handleBoxClick('create')}>\r\n//           <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"4em\" height=\"4em\" viewBox=\"0 0 24 24\"><path fill=\"none\" stroke=\"white\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M17 10h3m3 0h-3m0 0V7m0 3v3M1 20v-1a7 7 0 0 1 7-7v0a7 7 0 0 1 7 7v1m-7-8a4 4 0 1 0 0-8a4 4 0 0 0 0 8\"></path></svg>           \r\n//           <div>Créer un utilisateur</div>\r\n//       </div>\r\n//       <div className={`box management ${activeBoxId === 'manage' ? 'active' : ''} ${activeBoxId !== null ? 'active-top' : ''}`} onClick={() => handleBoxClick('manage')}>\r\n//           <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"4em\" height=\"5em\" viewBox=\"0 0 2048 2048\"><path fill=\"white\" d=\"M1148 1152q-83-62-179-95t-201-33q-88 0-170 23t-153 64t-129 100t-100 130t-65 153t-23 170H0q0-120 35-231t101-205t156-167t204-115q-56-35-100-82t-76-104t-47-119t-17-129q0-106 40-199t110-162T569 41T768 0t199 40t162 110t110 163t41 199q0 66-16 129t-48 119t-76 103t-101 83q60 23 113 54v152zM384 512q0 80 30 149t82 122t122 83t150 30q79 0 149-30t122-82t83-122t30-150q0-79-30-149t-82-122t-123-83t-149-30q-80 0-149 30t-122 82t-83 123t-30 149m1664 768v768H1024v-768h256v-256h512v256zm-640 0h256v-128h-256zm512 384h-128v128h-128v-128h-256v128h-128v-128h-128v256h768zm0-256h-768v128h768z\"></path></svg>  \r\n//           <div>Editer les comptes</div>\r\n//       </div>\r\n\r\n//     </div>\r\n    \r\n//     {formVisible && (\r\n//       <form className=\"form form-add-user\" onSubmit={handleSubmit}>\r\n//         <div className=\"form-add-row\">\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"nom\">Nom Complet</label>\r\n//             <input\r\n//               id=\"nom\"\r\n//               type=\"text\"\r\n//               placeholder=\"Nom Complet\"\r\n//               required\r\n//               value={name} // This ensures the input is controlled by React state\r\n//               onChange={(e) => setName(e.target.value)}\r\n//             /></div>\r\n//           <div className=\"form-group\">\r\n//               <label htmlFor=\"email\">Adresse Email</label>\r\n//               <input\r\n//                 id=\"email\"\r\n//                 type=\"email\"\r\n//                 placeholder=\"Adresse Email\"\r\n//                 required\r\n//                 value={email} // Binding state to input\r\n//                 onChange={(e) => setEmail(e.target.value)}\r\n//               />\r\n//           </div>\r\n//           </div>\r\n//           <div className=\"form-add-row form-add-row-select\">\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"role\">Rôle</label>\r\n//             <select name=\"role\" id=\"role\" required value={role} onChange={handleRoleChange}>\r\n//               <option disabled value=\"\">[Choisir un rôle]</option>\r\n//               <option value=\"Super Admin\">Super Admin</option>\r\n//               <option value=\"Admin\">Admin</option>\r\n//               <option value=\"Utilisateur\">Utilisateur</option>\r\n//             </select>\r\n//           </div>\r\n//       </div>\r\n//       <div className=\"form-add-row\">\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"password1\">Mot de passe</label>\r\n//           <input\r\n//             id=\"password1\"\r\n//             type=\"password\"\r\n//             placeholder=\"Mot de passe\"\r\n//             required\r\n//             value={password}\r\n//             onChange={handlePasswordChange}\r\n//             title=\"Le mot de passe doit contenir au moins 8 caractères, incluant une majuscule, une minuscule et un chiffre\"\r\n//             className={passwordError ? 'input-error input-infos' : ''}\r\n//           />\r\n\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"password2\">Confirmer le mot de passe</label>\r\n//           <input\r\n//             id=\"password2\"\r\n//             type=\"password\"\r\n//             placeholder=\"Confirmer le mot de passe\"\r\n//             required\r\n//             value={confirmPassword}\r\n//             onChange={handleConfirmPasswordChange}\r\n//             className={passwordError ? 'input-error' : ''}\r\n//           />\r\n//         </div>\r\n\r\n\r\n//       </div>\r\n//       <div className=\"form-add-row\">\r\n//         <div className=\"form-group\">\r\n//           { <div className='errorRegex'>{passwordError}</div> && <div className='errorIdentical'>{passwordError}</div>}\r\n//         </div>\r\n//         </div>\r\n//       <button type=\"submit\">Enregistrer</button>\r\n//       </form>\r\n\r\n//     )}\r\n\r\n//     {TableVisible && (\r\n//       <div>\r\n//         <select\r\n//           id=\"itemsPerPageSelect\"\r\n//           onChange={(e) => handleItemsPerPageChange(e)}\r\n//           title=\"Nombre de colonnes\"\r\n//         >\r\n//         <option value=\"5\">5</option>\r\n//         <option value=\"10\">10</option>\r\n//         <option value=\"15\">15</option>\r\n//         <option value=\"20\">20</option>\r\n//         </select>\r\n//         <TableUsers data={users} itemsPerPage={itemsPerPage} reloadData={fetchUsers} />\r\n//       </div>\r\n//     )}\r\n\r\n//   </div>\r\n//   );\r\n// }\r\n\r\n// export default GestionCompte;\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport '../../css/GestionCompte.css'; // Make sure you have this CSS file in the same folder\r\nimport TableUsers from '../../Components/GestionComptes/TableUsers';\r\nimport Swal from 'sweetalert2';\r\nimport axios from '../router/axiosInstance';\r\n\r\nconst GestionCompte = () => {\r\n  const [formVisible, setFormVisible] = useState(false);\r\n  const [TableVisible, setTableVisible] = useState(false);\r\n  const [activeBoxId, setActiveBoxId] = useState(null);\r\n  const [itemsPerPage, setItemsPerPage] = useState(5);\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [password_confirmation, setConfirmPassword] = useState('');\r\n  const [passwordError, setPasswordError] = useState('');\r\n  const [role, setRole] = useState('');\r\n  const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[A-Za-z\\d@$!%*?&]{8,}$/;\r\n  const [error, setError] = useState('');\r\n\r\n  const [users, setUsers] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true); // Loading state\r\n\r\n  const fetchUsers = async () => {\r\n      setIsLoading(true); // Start loading\r\n      try {\r\n        const response = await axios.get('http://localhost:8000/api/afficher');\r\n        if (response.data) {\r\n          setUsers(response.data.map(user => ({\r\n              ...user.user,  // user information is expected under 'user' key\r\n              roles: user.roles.join(\", \")  // Since roles are now in array form, join them\r\n          })));\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Failed to fetch user:\", error);\r\n      } finally {\r\n        setIsLoading(false); // End loading, success or error\r\n      }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  const handlePasswordChange = (e) => {\r\n    const newPass = e.target.value;\r\n    setPassword(newPass);\r\n    if (!passwordRegex.test(newPass)) {\r\n      setPasswordError('Le mot de passe doit contenir au moins 8 caractères, incluant une majuscule, une minuscule, un chiffre et un caractère spécial.');\r\n    } else {\r\n      setPasswordError('');\r\n    }\r\n  };\r\n\r\n  const handleConfirmPasswordChange = (e) => {\r\n    setConfirmPassword(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    //const formData = new FormData(e.target);\r\n    if (role === '') {\r\n      alert('Veuillez sélectionner un rôle valide.');\r\n      return;\r\n    }\r\n    if (!passwordRegex.test(password)) {\r\n      setPasswordError('Le mot de passe doit respecter les critères requis.');\r\n      return;\r\n    }\r\n    if (password !== password_confirmation) {\r\n      setPasswordError(\"Mots de passe différents !\");\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      const response = await axios.post('http://localhost:8000/api/register',{ name,email,role,password,password_confirmation});\r\n      console.log(response.status);\r\n      if (response.status==201) {\r\n        Swal.fire({\r\n          icon: 'success',\r\n          title: 'Enregistré avec succès',\r\n          text: 'L\\'utilisateur a été créé avec succès!',\r\n          confirmButtonColor: '#3085d6',\r\n          confirmButtonText: 'OK'\r\n        });\r\n\r\n        // Reset the form and states after successful registration\r\n        setName('');\r\n        setEmail('');\r\n        setPassword('');\r\n        setConfirmPassword('');\r\n        setRole('');\r\n        fetchUsers(); // Reload the data to reflect the new user\r\n\r\n      } else {\r\n        const errorData = await response.json();\r\n        setError(errorData.message || 'Email ou mot de passe incorrect.');\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Échec de l\\'enregistrement',\r\n          text: errorData.message || 'Impossible de créer l\\'utilisateur.',\r\n          confirmButtonColor: '#d33',\r\n          confirmButtonText: 'OK'\r\n        });\r\n      }\r\n    } catch (err) {\r\n      setError('Échec de la connexion due à une erreur serveur');\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Erreur Serveur',\r\n        text: 'Un problème est survenu lors de l\\'enregistrement.',\r\n        confirmButtonColor: '#d33',\r\n        confirmButtonText: 'OK'\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n  const handleBoxClick = (boxId) => {\r\n    setActiveBoxId(boxId); // Sets the active box ID\r\n\r\n    if (boxId === 'create') {\r\n      setTableVisible(false);\r\n      setFormVisible(true); // Shows the form when a box is clicked\r\n    } else if (boxId === 'manage') {\r\n      setFormVisible(false);\r\n      setTableVisible(true); // Assumes there is a similar hook for table visibility\r\n    }\r\n  };\r\n\r\n  const handleItemsPerPageChange = (e) => {\r\n    setItemsPerPage(parseInt(e.target.value)); // Convert the value to an integer\r\n  };\r\n\r\n  const handleRoleChange = (e) => {\r\n    setRole(e.target.value);\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <div>Loading...</div>; // Or use a spinner/loading graphic\r\n  }\r\n\r\n  return (\r\n    <div className=\"GestionCompte\">\r\n    <div className={`container ${formVisible ? \"smaller\" : \"\"}`}>\r\n      <div className={`box add ${activeBoxId === 'create' ? 'active' : ''} ${activeBoxId !== null ? 'active-top' : ''}`} onClick={() => handleBoxClick('create')}>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"4em\" height=\"4em\" viewBox=\"0 0 24 24\"><path fill=\"none\" stroke=\"white\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M17 10h3m3 0h-3m0 0V7m0 3v3M1 20v-1a7 7 0 0 1 7-7v0a7 7 0 0 1 7 7v1m-7-8a4 4 0 1 0 0-8a4 4 0 0 0 0 8\"></path></svg>           \r\n          <div>Créer un utilisateur</div>\r\n      </div>\r\n      <div className={`box management ${activeBoxId === 'manage' ? 'active' : ''} ${activeBoxId !== null ? 'active-top' : ''}`} onClick={() => handleBoxClick('manage')}>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"4em\" height=\"5em\" viewBox=\"0 0 2048 2048\"><path fill=\"white\" d=\"M1148 1152q-83-62-179-95t-201-33q-88 0-170 23t-153 64t-129 100t-100 130t-65 153t-23 170H0q0-120 35-231t101-205t156-167t204-115q-56-35-100-82t-76-104t-47-119t-17-129q0-106 40-199t110-162T569 41T768 0t199 40t162 110t110 163t41 199q0 66-16 129t-48 119t-76 103t-101 83q60 23 113 54v152zM384 512q0 80 30 149t82 122t122 83t150 30q79 0 149-30t122-82t83-122t30-150q0-79-30-149t-82-122t-123-83t-149-30q-80 0-149 30t-122 82t-83 123t-30 149m1664 768v768H1024v-768h256v-256h512v256zm-640 0h256v-128h-256zm512 384h-128v128h-128v-128h-256v128h-128v-128h-128v256h768zm0-256h-768v128h768z\"></path></svg>  \r\n          <div>Editer les comptes</div>\r\n      </div>\r\n\r\n    </div>\r\n    \r\n    {formVisible && (\r\n      <form className=\"form form-add-user\" onSubmit={handleSubmit}>\r\n        <div className=\"form-add-row\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"nom\">Nom Complet</label>\r\n            <input\r\n              id=\"nom\"\r\n              type=\"text\"\r\n              placeholder=\"Nom Complet\"\r\n              required\r\n              value={name} // This ensures the input is controlled by React state\r\n              onChange={(e) => setName(e.target.value)}\r\n            /></div>\r\n          <div className=\"form-group\">\r\n              <label htmlFor=\"email\">Adresse Email</label>\r\n              <input\r\n                id=\"email\"\r\n                type=\"email\"\r\n                placeholder=\"Adresse Email\"\r\n                required\r\n                value={email} // Binding state to input\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n          </div>\r\n          </div>\r\n          <div className=\"form-add-row form-add-row-select\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"role\">Rôle</label>\r\n            <select name=\"role\" id=\"role\" required value={role} onChange={handleRoleChange} className='selectrole'>\r\n              <option disabled selected value=\"\">[Choisir un rôle]</option>\r\n              <option value=\"Super Admin\">Super Admin</option>\r\n              <option value=\"Admin\">Admin</option>\r\n              <option value=\"Utilisateur\">Utilisateur</option>\r\n            </select>\r\n          </div>\r\n      </div>\r\n      <div className=\"form-add-row\">\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password1\">Mot de passe</label>\r\n          <input\r\n            id=\"password1\"\r\n            type=\"password\"\r\n            placeholder=\"Mot de passe\"\r\n            required\r\n            value={password}\r\n            onChange={handlePasswordChange}\r\n            title=\"Le mot de passe doit contenir au moins 8 caractères, incluant une majuscule, une minuscule et un chiffre\"\r\n            className={passwordError ? 'input-error input-infos' : ''}\r\n          />\r\n\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password2\">Confirmer le mot de passe</label>\r\n          <input\r\n            id=\"password2\"\r\n            type=\"password\"\r\n            placeholder=\"Confirmer le mot de passe\"\r\n            required\r\n            value={password_confirmation}\r\n            onChange={handleConfirmPasswordChange}\r\n            className={passwordError ? 'input-error' : ''}\r\n          />\r\n        </div>\r\n\r\n      </div>\r\n      <div className=\"form-add-row\">\r\n        <div className=\"form-group\">\r\n          { <div className=''>{passwordError}</div> && <div className='errorIdentical'>{passwordError}</div>}\r\n        </div>\r\n        </div>\r\n      <button type=\"submit\">Enregistrer</button>\r\n      </form>\r\n\r\n    )}\r\n\r\n    {TableVisible && (\r\n      <div>\r\n        <select\r\n          id=\"itemsPerPageSelect\"\r\n          onChange={(e) => handleItemsPerPageChange(e)}\r\n          title=\"Nombre de colonnes\"\r\n        >\r\n        <option value=\"5\">5</option>\r\n        <option value=\"10\">10</option>\r\n        <option value=\"15\">15</option>\r\n        <option value=\"20\">20</option>\r\n        </select>\r\n        <TableUsers data={users} itemsPerPage={itemsPerPage} reloadData={fetchUsers} />\r\n      </div>\r\n    )}\r\n\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default GestionCompte;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}