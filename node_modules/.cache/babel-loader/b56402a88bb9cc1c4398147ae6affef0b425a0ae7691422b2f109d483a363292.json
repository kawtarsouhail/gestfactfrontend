{"ast":null,"code":"var _jsxFileName = \"/home/kawtar/Desktop/Invoice_Project_Frontend/src/Components/Suivi/Suivi.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import Table from './Table';\n// import '../../css/Visualiser.css';\n\n// const Suivi = () => {\n//   const [filtrageItem, setItemFiltrage] = useState('Valeur :');\n//   const [itemsPerPage, setItemsPerPage] = useState(5);\n//   const [remiseNum, setRemiseNum] = useState('');\n//   const [totalMontant, setTotalMontant] = useState(0);\n//   const [data, setData] = useState([]);\n//   const [displayData, setDisplayData] = useState([]);\n//   const [loading, setLoading] = useState(false);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       setLoading(true);\n//       try {\n//         const response = await fetch('http://localhost:8000/api/getFactures');\n//         if (!response.ok) throw new Error('Failed to fetch');\n//         const result = await response.json();\n//         setData(result.donnees);\n//       } catch (error) {\n//         setError(error.message);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchData();\n//   }, []);\n\n//   useEffect(() => {\n//     setDisplayData(data);\n//   }, [data]);\n\n//   // useEffect(() => {\n//   //   if (filtrageItem === 'Nº De Remise:') {\n//   //     const total = displayData.reduce((acc, curr) => acc + (curr.montant || 0), 0);\n//   //     setTotalMontant(total);\n//   //   }\n//   // }, [displayData, filtrageItem]);\n\n//   const handleChangefiltrage = (e) => {\n//     const newFiltrageItem = e.target.value;\n//     setItemFiltrage(newFiltrageItem);\n\n//     // Réinitialiser l'état de l'input de filtrage et les données affichées\n//     setRemiseNum('');\n//     setTotalMontant(0);\n//     setDisplayData(data);\n\n//     // Si on sélectionne \"Toutes les Factures\", on réinitialise complètement\n//     if (newFiltrageItem === 'Valeur :') {\n//       setRemiseNum(''); // Assurez-vous que l'input est vidé\n//     }\n//   };\n\n//   const handleItemsPerPageChange = (e) => {\n//     setItemsPerPage(parseInt(e.target.value, 10));\n//   };\n\n//   const CalculMontantantTotal=(inputRemise)=>{\n//     const total = data.reduce((total, item) => {\n//       console.log(item); // Log each item to see its structure\n//       if (String(item.remise?.NumRemise).trim().toUpperCase() === inputRemise) {\n//         console.log('Match found', item);\n//         return total + (item.MontantEnc || 0);\n//       }\n//       return total;\n//     }, 0);\n//     console.log('Total Calculated:', total);\n//     setTotalMontant(total);\n//   }\n\n//   // const handleNumChequeChange = (e) => {\n//   //   const inputCheque = e.target.value.toUpperCase();\n//   //   setRemiseNum(inputCheque);\n//   //   if (inputCheque.trim()) {\n//   //     const filteredData = data.filter(item => String(item.cheque?.NumCheque) === inputCheque.trim());\n//   //     setDisplayData(filteredData);\n//   //   } else {\n//   //     setDisplayData(data);\n//   //   }\n//   // };\n\n//   const handleInputChange = (e) => {\n//     const value = e.target.value.trim().toUpperCase();\n//     setRemiseNum(value);  // Mettre à jour l'état avec la nouvelle valeur\n\n//     if (filtrageItem === 'Nº De Remise:') {\n//       CalculMontantantTotal(value);\n//       const filteredData = data.filter(item => String(item.remise?.NumRemise).trim().toUpperCase() === value);\n//       setDisplayData(filteredData.length > 0 ? filteredData : data);\n//     } else if (filtrageItem === 'Nº De Cheque :') {\n//       const filteredData = data.filter(item => String(item.cheque?.NumCheque).trim().toUpperCase() === value);\n//       setDisplayData(filteredData.length > 0 ? filteredData : data);\n//     }\n//   };\n\n//   const renderInputOrSelect = () => {\n//     if (filtrageItem === 'Nº De Remise:' || filtrageItem === 'Nº De Cheque :') {\n//       return (\n//         <input\n//           type=\"text\"\n//           className=\"form-control\"\n//           id=\"textInput\"\n//           placeholder=\"Entrer Valeur\"\n//           value={remiseNum}\n//           onChange={handleInputChange}\n//           disabled={filtrageItem === 'Valeur :'}\n//         />\n//       );\n//     } else {\n//       // Cette branche peut ne pas être nécessaire si aucune entrée n'est requise pour \"Valeur :\"\n//       return (\n//         <input\n//           type=\"text\"\n//           className=\"form-control\"\n//           id=\"textInput\"\n//           placeholder=\"Enter value\"\n//           value=\"\" // Garantir que l'input est vide\n//           disabled={true}\n//         />\n//       );\n//     }\n//   };\n\n//   if (loading) return <div className='loader'></div>;\n//   if (error) return <div>Error: {error}</div>;\n//   if (!data.length) return <div>No data available</div>;\n\n//   return (\n//     <div className=\"Visualiser\">\n//       <center>\n//         <h2>Suivi des paiements</h2>\n//       </center>\n//       <div className=\"form-group\">\n//         <label htmlFor=\"selectOption\">Element de Filtrage:</label>\n//         <select id=\"selectOption\" className=\"form-control\" onChange={handleChangefiltrage}>\n//           <option value=\"Valeur :\">[ Toutes les Factures ]</option>\n//           <option value=\"Nº De Remise:\">Nº De Remise</option>\n//           <option value=\"Nº De Cheque :\">Nº De Cheque</option>\n//         </select>\n//         <label htmlFor=\"textInput\">{filtrageItem}</label>\n//         {renderInputOrSelect()}\n//         <select id=\"itemsPerPageSelect\" onChange={handleItemsPerPageChange} title=\"Nombre de colonnes\">\n//           <option value=\"5\">5</option>\n//           <option value=\"10\">10</option>\n//           <option value=\"15\">15</option>\n//           <option value=\"20\">20</option>\n//         </select>\n//       </div>\n//       <div className='total-montant'>\n//         {filtrageItem === 'Nº De Remise:' && (\n//           <p className='total'>Total du montant encaissé : {totalMontant.toFixed(2)} Dh</p>\n//         )}\n//       </div>\n\n//       <Table data={displayData} itemsPerPage={itemsPerPage} />\n//     </div>\n//   );\n// };\n\n// export default Suivi;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from '../router/axiosInstance';\nimport Table from './Table';\nimport '../../css/Visualiser.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Suivi = () => {\n  _s();\n  const [filtrageItem, setItemFiltrage] = useState('Valeur :');\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const [remiseNum, setRemiseNum] = useState('');\n  const [totalMontant, setTotalMontant] = useState(0);\n  const [data, setData] = useState([]);\n  const [displayData, setDisplayData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    try {\n      axios.get('http://localhost:8000/api/getFacture').then(response => {\n        setData(response.data.donnees);\n      });\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  }, []);\n  useEffect(() => {\n    setDisplayData(data);\n  }, [data]);\n\n  // useEffect(() => {\n  //   if (filtrageItem === 'Nº De Remise:') {\n  //     const total = displayData.reduce((acc, curr) => acc + (curr.montant || 0), 0);\n  //     setTotalMontant(total);\n  //   }\n  // }, [displayData, filtrageItem]);\n\n  const handleChangefiltrage = e => {\n    const newFiltrageItem = e.target.value;\n    setItemFiltrage(newFiltrageItem);\n\n    // Réinitialiser l'état de l'input de filtrage et les données affichées\n    setRemiseNum('');\n    setTotalMontant(0);\n    setDisplayData(data);\n\n    // Si on sélectionne \"Toutes les Factures\", on réinitialise complètement\n    if (newFiltrageItem === 'Valeur :') {\n      setRemiseNum(''); // Assurez-vous que l'input est vidé\n    }\n  };\n  const handleItemsPerPageChange = e => {\n    setItemsPerPage(parseInt(e.target.value, 10));\n  };\n  const CalculMontantantTotal = inputRemise => {\n    const total = data.reduce((total, item) => {\n      var _item$remise;\n      console.log(item); // Log each item to see its structure\n      if (String((_item$remise = item.remise) === null || _item$remise === void 0 ? void 0 : _item$remise.NumRemise).trim().toUpperCase() === inputRemise) {\n        console.log('Match found', item);\n        return total + (item.MontantEnc || 0);\n      }\n      return total;\n    }, 0);\n    console.log('Total Calculated:', total);\n    setTotalMontant(total);\n  };\n\n  // const handleNumChequeChange = (e) => {\n  //   const inputCheque = e.target.value.toUpperCase();\n  //   setRemiseNum(inputCheque);\n  //   if (inputCheque.trim()) {\n  //     const filteredData = data.filter(item => String(item.cheque?.NumCheque) === inputCheque.trim());\n  //     setDisplayData(filteredData);\n  //   } else {\n  //     setDisplayData(data);\n  //   }\n  // };\n\n  const handleInputChange = e => {\n    const value = e.target.value.trim().toUpperCase();\n    setRemiseNum(value); // Mettre à jour l'état avec la nouvelle valeur\n\n    if (filtrageItem === 'Nº De Remise:') {\n      CalculMontantantTotal(value);\n      const filteredData = data.filter(item => {\n        var _item$remise2;\n        return String((_item$remise2 = item.remise) === null || _item$remise2 === void 0 ? void 0 : _item$remise2.NumRemise).trim().toUpperCase() === value;\n      });\n      setDisplayData(filteredData.length > 0 ? filteredData : data);\n    } else if (filtrageItem === 'Nº De Cheque :') {\n      const filteredData = data.filter(item => {\n        var _item$cheque;\n        return String((_item$cheque = item.cheque) === null || _item$cheque === void 0 ? void 0 : _item$cheque.NumCheque).trim().toUpperCase() === value;\n      });\n      setDisplayData(filteredData.length > 0 ? filteredData : data);\n    }\n  };\n  const renderInputOrSelect = () => {\n    if (filtrageItem === 'Nº De Remise:' || filtrageItem === 'Nº De Cheque :') {\n      return /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"textInput\",\n        placeholder: \"Entrer Valeur\",\n        value: remiseNum,\n        onChange: handleInputChange,\n        disabled: filtrageItem === 'Valeur :'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this);\n    } else {\n      // Cette branche peut ne pas être nécessaire si aucune entrée n'est requise pour \"Valeur :\"\n      return /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"textInput\",\n        placeholder: \"Enter value\",\n        value: \"\" // Garantir que l'input est vide\n        ,\n        disabled: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loader\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 299,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 300,\n    columnNumber: 21\n  }, this);\n  if (!data.length) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No data available\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 301,\n    columnNumber: 28\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Visualiser\",\n    children: [/*#__PURE__*/_jsxDEV(\"center\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Suivi des paiements\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"selectOption\",\n        children: \"Element de Filtrage:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"selectOption\",\n        className: \"form-control\",\n        onChange: handleChangefiltrage,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Valeur :\",\n          children: \"[ Toutes les Factures ]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"N\\xBA De Remise:\",\n          children: \"N\\xBA De Remise\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"N\\xBA De Cheque :\",\n          children: \"N\\xBA De Cheque\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"textInput\",\n        children: filtrageItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this), renderInputOrSelect(), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"itemsPerPageSelect\",\n        onChange: handleItemsPerPageChange,\n        title: \"Nombre de colonnes\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"5\",\n          children: \"5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"10\",\n          children: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"15\",\n          children: \"15\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"20\",\n          children: \"20\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"total-montant\",\n      children: filtrageItem === 'Nº De Remise:' && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"total\",\n        children: [\"Total du montant encaiss\\xE9 : \", totalMontant.toFixed(2), \" Dh\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      data: displayData,\n      itemsPerPage: itemsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 304,\n    columnNumber: 5\n  }, this);\n};\n_s(Suivi, \"2C9yCHrv4xHa05f8/5TWS4E1O6k=\");\n_c = Suivi;\nexport default Suivi;\nvar _c;\n$RefreshReg$(_c, \"Suivi\");","map":{"version":3,"names":["React","useState","useEffect","axios","Table","jsxDEV","_jsxDEV","Suivi","_s","filtrageItem","setItemFiltrage","itemsPerPage","setItemsPerPage","remiseNum","setRemiseNum","totalMontant","setTotalMontant","data","setData","displayData","setDisplayData","loading","setLoading","error","setError","get","then","response","donnees","console","handleChangefiltrage","e","newFiltrageItem","target","value","handleItemsPerPageChange","parseInt","CalculMontantantTotal","inputRemise","total","reduce","item","_item$remise","log","String","remise","NumRemise","trim","toUpperCase","MontantEnc","handleInputChange","filteredData","filter","_item$remise2","length","_item$cheque","cheque","NumCheque","renderInputOrSelect","type","className","id","placeholder","onChange","disabled","fileName","_jsxFileName","lineNumber","columnNumber","children","htmlFor","title","toFixed","_c","$RefreshReg$"],"sources":["/home/kawtar/Desktop/Invoice_Project_Frontend/src/Components/Suivi/Suivi.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import Table from './Table';\r\n// import '../../css/Visualiser.css';\r\n\r\n// const Suivi = () => {\r\n//   const [filtrageItem, setItemFiltrage] = useState('Valeur :');\r\n//   const [itemsPerPage, setItemsPerPage] = useState(5);\r\n//   const [remiseNum, setRemiseNum] = useState('');\r\n//   const [totalMontant, setTotalMontant] = useState(0);\r\n//   const [data, setData] = useState([]);\r\n//   const [displayData, setDisplayData] = useState([]);\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       setLoading(true);\r\n//       try {\r\n//         const response = await fetch('http://localhost:8000/api/getFactures');\r\n//         if (!response.ok) throw new Error('Failed to fetch');\r\n//         const result = await response.json();\r\n//         setData(result.donnees);\r\n//       } catch (error) {\r\n//         setError(error.message);\r\n//       } finally {\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//     fetchData();\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     setDisplayData(data);\r\n//   }, [data]);\r\n\r\n//   // useEffect(() => {\r\n//   //   if (filtrageItem === 'Nº De Remise:') {\r\n//   //     const total = displayData.reduce((acc, curr) => acc + (curr.montant || 0), 0);\r\n//   //     setTotalMontant(total);\r\n//   //   }\r\n//   // }, [displayData, filtrageItem]);\r\n\r\n//   const handleChangefiltrage = (e) => {\r\n//     const newFiltrageItem = e.target.value;\r\n//     setItemFiltrage(newFiltrageItem);\r\n  \r\n//     // Réinitialiser l'état de l'input de filtrage et les données affichées\r\n//     setRemiseNum('');\r\n//     setTotalMontant(0);\r\n//     setDisplayData(data);\r\n  \r\n//     // Si on sélectionne \"Toutes les Factures\", on réinitialise complètement\r\n//     if (newFiltrageItem === 'Valeur :') {\r\n//       setRemiseNum(''); // Assurez-vous que l'input est vidé\r\n//     }\r\n//   };\r\n  \r\n  \r\n\r\n//   const handleItemsPerPageChange = (e) => {\r\n//     setItemsPerPage(parseInt(e.target.value, 10));\r\n//   };\r\n\r\n//   const CalculMontantantTotal=(inputRemise)=>{\r\n//     const total = data.reduce((total, item) => {\r\n//       console.log(item); // Log each item to see its structure\r\n//       if (String(item.remise?.NumRemise).trim().toUpperCase() === inputRemise) {\r\n//         console.log('Match found', item);\r\n//         return total + (item.MontantEnc || 0);\r\n//       }\r\n//       return total;\r\n//     }, 0);\r\n//     console.log('Total Calculated:', total);\r\n//     setTotalMontant(total);\r\n//   }\r\n\r\n//   // const handleNumChequeChange = (e) => {\r\n//   //   const inputCheque = e.target.value.toUpperCase();\r\n//   //   setRemiseNum(inputCheque);\r\n//   //   if (inputCheque.trim()) {\r\n//   //     const filteredData = data.filter(item => String(item.cheque?.NumCheque) === inputCheque.trim());\r\n//   //     setDisplayData(filteredData);\r\n//   //   } else {\r\n//   //     setDisplayData(data);\r\n//   //   }\r\n//   // };\r\n\r\n//   const handleInputChange = (e) => {\r\n//     const value = e.target.value.trim().toUpperCase();\r\n//     setRemiseNum(value);  // Mettre à jour l'état avec la nouvelle valeur\r\n  \r\n//     if (filtrageItem === 'Nº De Remise:') {\r\n//       CalculMontantantTotal(value);\r\n//       const filteredData = data.filter(item => String(item.remise?.NumRemise).trim().toUpperCase() === value);\r\n//       setDisplayData(filteredData.length > 0 ? filteredData : data);\r\n//     } else if (filtrageItem === 'Nº De Cheque :') {\r\n//       const filteredData = data.filter(item => String(item.cheque?.NumCheque).trim().toUpperCase() === value);\r\n//       setDisplayData(filteredData.length > 0 ? filteredData : data);\r\n//     }\r\n//   };\r\n  \r\n\r\n//   const renderInputOrSelect = () => {\r\n//     if (filtrageItem === 'Nº De Remise:' || filtrageItem === 'Nº De Cheque :') {\r\n//       return (\r\n//         <input\r\n//           type=\"text\"\r\n//           className=\"form-control\"\r\n//           id=\"textInput\"\r\n//           placeholder=\"Entrer Valeur\"\r\n//           value={remiseNum}\r\n//           onChange={handleInputChange}\r\n//           disabled={filtrageItem === 'Valeur :'}\r\n//         />\r\n//       );\r\n//     } else {\r\n//       // Cette branche peut ne pas être nécessaire si aucune entrée n'est requise pour \"Valeur :\"\r\n//       return (\r\n//         <input\r\n//           type=\"text\"\r\n//           className=\"form-control\"\r\n//           id=\"textInput\"\r\n//           placeholder=\"Enter value\"\r\n//           value=\"\" // Garantir que l'input est vide\r\n//           disabled={true}\r\n//         />\r\n//       );\r\n//     }\r\n//   };\r\n  \r\n\r\n//   if (loading) return <div className='loader'></div>;\r\n//   if (error) return <div>Error: {error}</div>;\r\n//   if (!data.length) return <div>No data available</div>;\r\n\r\n//   return (\r\n//     <div className=\"Visualiser\">\r\n//       <center>\r\n//         <h2>Suivi des paiements</h2>\r\n//       </center>\r\n//       <div className=\"form-group\">\r\n//         <label htmlFor=\"selectOption\">Element de Filtrage:</label>\r\n//         <select id=\"selectOption\" className=\"form-control\" onChange={handleChangefiltrage}>\r\n//           <option value=\"Valeur :\">[ Toutes les Factures ]</option>\r\n//           <option value=\"Nº De Remise:\">Nº De Remise</option>\r\n//           <option value=\"Nº De Cheque :\">Nº De Cheque</option>\r\n//         </select>\r\n//         <label htmlFor=\"textInput\">{filtrageItem}</label>\r\n//         {renderInputOrSelect()}\r\n//         <select id=\"itemsPerPageSelect\" onChange={handleItemsPerPageChange} title=\"Nombre de colonnes\">\r\n//           <option value=\"5\">5</option>\r\n//           <option value=\"10\">10</option>\r\n//           <option value=\"15\">15</option>\r\n//           <option value=\"20\">20</option>\r\n//         </select>\r\n//       </div>\r\n//       <div className='total-montant'>\r\n//         {filtrageItem === 'Nº De Remise:' && (\r\n//           <p className='total'>Total du montant encaissé : {totalMontant.toFixed(2)} Dh</p>\r\n//         )}\r\n//       </div>\r\n\r\n//       <Table data={displayData} itemsPerPage={itemsPerPage} />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Suivi;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from '../router/axiosInstance';\r\nimport Table from './Table';\r\nimport '../../css/Visualiser.css';\r\n\r\n\r\nconst Suivi = () => {\r\n  const [filtrageItem, setItemFiltrage] = useState('Valeur :');\r\n  const [itemsPerPage, setItemsPerPage] = useState(5);\r\n  const [remiseNum, setRemiseNum] = useState('');\r\n  const [totalMontant, setTotalMontant] = useState(0);\r\n  const [data, setData] = useState([]);\r\n  const [displayData, setDisplayData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n\r\n  useEffect(() => {\r\n    try {\r\n      axios.get('http://localhost:8000/api/getFacture')\r\n        .then(response => {\r\n          setData(response.data.donnees);\r\n        });\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setDisplayData(data);\r\n  }, [data]);\r\n\r\n  // useEffect(() => {\r\n  //   if (filtrageItem === 'Nº De Remise:') {\r\n  //     const total = displayData.reduce((acc, curr) => acc + (curr.montant || 0), 0);\r\n  //     setTotalMontant(total);\r\n  //   }\r\n  // }, [displayData, filtrageItem]);\r\n\r\n  const handleChangefiltrage = (e) => {\r\n    const newFiltrageItem = e.target.value;\r\n    setItemFiltrage(newFiltrageItem);\r\n  \r\n    // Réinitialiser l'état de l'input de filtrage et les données affichées\r\n    setRemiseNum('');\r\n    setTotalMontant(0);\r\n    setDisplayData(data);\r\n  \r\n    // Si on sélectionne \"Toutes les Factures\", on réinitialise complètement\r\n    if (newFiltrageItem === 'Valeur :') {\r\n      setRemiseNum(''); // Assurez-vous que l'input est vidé\r\n    }\r\n  };\r\n  \r\n  \r\n\r\n  const handleItemsPerPageChange = (e) => {\r\n    setItemsPerPage(parseInt(e.target.value, 10));\r\n  };\r\n\r\n  const CalculMontantantTotal=(inputRemise)=>{\r\n    const total = data.reduce((total, item) => {\r\n      console.log(item); // Log each item to see its structure\r\n      if (String(item.remise?.NumRemise).trim().toUpperCase() === inputRemise) {\r\n        console.log('Match found', item);\r\n        return total + (item.MontantEnc || 0);\r\n      }\r\n      return total;\r\n    }, 0);\r\n    console.log('Total Calculated:', total);\r\n    setTotalMontant(total);\r\n  }\r\n\r\n  // const handleNumChequeChange = (e) => {\r\n  //   const inputCheque = e.target.value.toUpperCase();\r\n  //   setRemiseNum(inputCheque);\r\n  //   if (inputCheque.trim()) {\r\n  //     const filteredData = data.filter(item => String(item.cheque?.NumCheque) === inputCheque.trim());\r\n  //     setDisplayData(filteredData);\r\n  //   } else {\r\n  //     setDisplayData(data);\r\n  //   }\r\n  // };\r\n\r\n  const handleInputChange = (e) => {\r\n    const value = e.target.value.trim().toUpperCase();\r\n    setRemiseNum(value);  // Mettre à jour l'état avec la nouvelle valeur\r\n  \r\n    if (filtrageItem === 'Nº De Remise:') {\r\n      CalculMontantantTotal(value);\r\n      const filteredData = data.filter(item => String(item.remise?.NumRemise).trim().toUpperCase() === value);\r\n      setDisplayData(filteredData.length > 0 ? filteredData : data);\r\n    } else if (filtrageItem === 'Nº De Cheque :') {\r\n      const filteredData = data.filter(item => String(item.cheque?.NumCheque).trim().toUpperCase() === value);\r\n      setDisplayData(filteredData.length > 0 ? filteredData : data);\r\n    }\r\n  };\r\n  \r\n\r\n  const renderInputOrSelect = () => {\r\n    if (filtrageItem === 'Nº De Remise:' || filtrageItem === 'Nº De Cheque :') {\r\n      return (\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          id=\"textInput\"\r\n          placeholder=\"Entrer Valeur\"\r\n          value={remiseNum}\r\n          onChange={handleInputChange}\r\n          disabled={filtrageItem === 'Valeur :'}\r\n        />\r\n      );\r\n    } else {\r\n      // Cette branche peut ne pas être nécessaire si aucune entrée n'est requise pour \"Valeur :\"\r\n      return (\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          id=\"textInput\"\r\n          placeholder=\"Enter value\"\r\n          value=\"\" // Garantir que l'input est vide\r\n          disabled={true}\r\n        />\r\n      );\r\n    }\r\n  };\r\n  \r\n\r\n  if (loading) return <div className='loader'></div>;\r\n  if (error) return <div>Error: {error}</div>;\r\n  if (!data.length) return <div>No data available</div>;\r\n\r\n  return (\r\n    <div className=\"Visualiser\">\r\n      <center>\r\n        <h2>Suivi des paiements</h2>\r\n      </center>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"selectOption\">Element de Filtrage:</label>\r\n        <select id=\"selectOption\" className=\"form-control\" onChange={handleChangefiltrage}>\r\n          <option value=\"Valeur :\">[ Toutes les Factures ]</option>\r\n          <option value=\"Nº De Remise:\">Nº De Remise</option>\r\n          <option value=\"Nº De Cheque :\">Nº De Cheque</option>\r\n        </select>\r\n        <label htmlFor=\"textInput\">{filtrageItem}</label>\r\n        {renderInputOrSelect()}\r\n        <select id=\"itemsPerPageSelect\" onChange={handleItemsPerPageChange} title=\"Nombre de colonnes\">\r\n          <option value=\"5\">5</option>\r\n          <option value=\"10\">10</option>\r\n          <option value=\"15\">15</option>\r\n          <option value=\"20\">20</option>\r\n        </select>\r\n      </div>\r\n      <div className='total-montant'>\r\n        {filtrageItem === 'Nº De Remise:' && (\r\n          <p className='total'>Total du montant encaissé : {totalMontant.toFixed(2)} Dh</p>\r\n        )}\r\n      </div>\r\n\r\n      <Table data={displayData} itemsPerPage={itemsPerPage} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Suivi;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,yBAAyB;AAC3C,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGlC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,UAAU,CAAC;EAC5D,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,CAAC,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"},"metadata":{},"sourceType":"module","externalDependencies":[]}