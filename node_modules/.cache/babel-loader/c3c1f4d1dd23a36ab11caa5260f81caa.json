{"ast":null,"code":"var _jsxFileName = \"/home/kawtar/Desktop/STAGEGITFRONTEND/gestfactfrontend/src/component/GestionCompte.js\";\nimport React, { useState, useEffect } from 'react';\nconst GestionCompte = () => {\n  const [csrfToken, setCsrfToken] = useState(null);\n  useEffect(() => {\n    async function fetchToken() {\n      const response = await fetch('/sanctum/csrf-token');\n      const token = response.headers.get('X-CSRF-TOKEN');\n      setCsrfToken(token);\n    }\n    fetchToken();\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const formData = new FormData();\n      formData.append('name', 'John Doe');\n      formData.append('email', 'johndoe@example.com');\n      formData.append('password', 'password123');\n      formData.append('role', 'user');\n      const response = await fetch('http://127.0.0.1:8000/api/register', {\n        method: 'POST',\n        body: formData,\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRF-TOKEN': csrfToken\n        }\n      });\n      console.log(response);\n    } catch (error) {\n      console.error(error);\n    }\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      id: \"name\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"Email\",\n      name: \"email\",\n      id: \"email\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      id: \"password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"role\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, \"Role\"), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"role\",\n      id: \"role\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"user\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, \"User\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"admin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }, \"Admin\")), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, \"Enregistrer\"));\n  };\n};\nexport default GestionCompte;","map":{"version":3,"names":["React","useState","useEffect","GestionCompte","csrfToken","setCsrfToken","fetchToken","response","fetch","token","headers","get","handleSubmit","e","preventDefault","formData","FormData","append","method","body","console","log","error","createElement","onSubmit","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","name","id","required","value"],"sources":["/home/kawtar/Desktop/STAGEGITFRONTEND/gestfactfrontend/src/component/GestionCompte.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst GestionCompte = () => {\r\n        const [csrfToken, setCsrfToken] = useState(null);\r\n        useEffect(() => {\r\n            async function fetchToken() {\r\n                const response = await fetch('/sanctum/csrf-token');\r\n                const token = response.headers.get('X-CSRF-TOKEN');\r\n                setCsrfToken(token);\r\n            }\r\n            fetchToken();\r\n        }, []);\r\n    \r\n        const handleSubmit = async (e) => {\r\n            e.preventDefault();\r\n    \r\n            try {\r\n    \r\n                const formData = new FormData();\r\n                formData.append('name', 'John Doe');\r\n                formData.append('email', 'johndoe@example.com');\r\n                formData.append('password', 'password123');\r\n                formData.append('role', 'user');\r\n    \r\n                const response = await fetch('http://127.0.0.1:8000/api/register', {\r\n                    method: 'POST',\r\n                    body: formData,\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'X-CSRF-TOKEN': csrfToken,\r\n                    },\r\n                });\r\n                console.log(response);\r\n    \r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n    \r\n        return (\r\n    \r\n            <form onSubmit={handleSubmit}>\r\n    \r\n                <label htmlFor=\"name\">Name</label>\r\n                <input type=\"text\" name=\"name\" id=\"name\" required />\r\n    \r\n                <label htmlFor=\"email\">Email</label>\r\n                <input type=\"Email\" name=\"email\" id=\"email\" required />\r\n    \r\n                <label htmlFor=\"password\">Password</label>\r\n                <input type=\"password\" name=\"password\" id=\"password\" required />\r\n    \r\n                <label htmlFor=\"role\">Role</label>\r\n                <select name=\"role\" id=\"role\" required >\r\n                    <option value=\"user\">User</option>\r\n                    <option value=\"admin\">Admin</option>\r\n                </select>\r\n    \r\n                <button type=\"submit\">Enregistrer</button>\r\n            </form>\r\n    \r\n        );\r\n    }\r\n}\r\n\r\nexport default GestionCompte;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}