{"ast":null,"code":"var _jsxFileName = \"/home/kawtar/Desktop/STAGEGIT/gestfactfrontend/src/component/Invoice.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import '../css/invoice.css'; // Assurez-vous de créer un fichier Form.css pour les styles\n\n// const Invoice = () => {\n//   const [formData, setFormData] = useState({\n//     input1: '',\n//     input2: '',\n//     // Ajoutez les autres champs d'entrée de la même manière\n//     // input3: '', input4: '', ..., input16: ''\n//   });\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({\n//       ...formData,\n//       [name]: value\n//     });\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     // Ajoutez ici la logique pour soumettre le formulaire\n//     console.log(formData);\n//   };\n\n//   return (\n//         <div>\n//             <center><h3>Facture</h3></center>\n//             <form className=\"form\" onSubmit={handleSubmit}>\n//             <div className=\"input-container\">\n//                 <div className='item'>\n//                     <label htmlFor=\"Input1\">\n//                         Nº de Facture\n//                     </label>\n//                     <input\n//                     type=\"text\"\n//                     name=\"input1\"\n//                     value={formData.input1}\n//                     onChange={handleChange}\n//                     placeholder=\"Input 1\"\n//                     />\n//                 </div>\n//                 <div className='item'>\n//                     <label htmlFor=\"Input1\">\n//                         Nom Client\n//                     </label>\n//                     <input\n//                     type=\"text\"\n//                     name=\"input1\"\n//                     value={formData.input1}\n//                     onChange={handleChange}\n//                     placeholder=\"Input 1\"\n//                     />\n//                 </div>\n//                 <div className='item'>\n//                     <label htmlFor=\"Input1\">\n//                         Nº Bon de Livraison\n//                     </label>\n//                     <input\n//                     type=\"text\"\n//                     name=\"input1\"\n//                     value={formData.input1}\n//                     onChange={handleChange}\n//                     placeholder=\"Input 1\"\n//                     />\n//                 </div>\n//                 <div className='item'>\n//                     <label htmlFor=\"Input1\">\n//                         Date de Livraison\n//                     </label>\n//                     <input\n//                     type=\"text\"\n//                     name=\"input1\"\n//                     value={formData.input1}\n//                     onChange={handleChange}\n//                     placeholder=\"Input 1\"\n//                     />\n//                 </div>\n\n//                 <div className='item'>\n//                     <label htmlFor=\"Input1\">\n//                         Type de validation\n//                     </label>\n//                     <input\n//                     type=\"text\"\n//                     name=\"input1\"\n//                     value={formData.input1}\n//                     onChange={handleChange}\n//                     placeholder=\"Input 1\"\n//                     />\n//                 </div>\n//                 <div className='item'>\n//                     <label htmlFor=\"Input1\">\n//                         Montant Ht\n//                     </label>\n//                     <input\n//                     type=\"text\"\n//                     name=\"input1\"\n//                     value={formData.input1}\n//                     onChange={handleChange}\n//                     placeholder=\"Input 1\"\n//                     />\n//                 </div>\n//                 <div className='item'>\n//                     <label htmlFor=\"Input1\">\n//                         Date Facture\n//                     </label>\n//                     <input\n//                     type=\"text\"\n//                     name=\"input1\"\n//                     value={formData.input1}\n//                     onChange={handleChange}\n//                     placeholder=\"Input 1\"\n//                     />\n//                 </div>\n//                 <div className='item'>\n//                     <label htmlFor=\"Input1\">\n//                         Taux\n//                     </label>\n//                     <input\n//                     type=\"text\"\n//                     name=\"input1\"\n//                     value={formData.input1}\n//                     onChange={handleChange}\n//                     placeholder=\"Input 1\"\n//                     />\n//                 </div>\n//                 <div className='item'>\n//                     <label htmlFor=\"Input1\">\n//                         TVA\n//                     </label>\n//                     <input\n//                     type=\"text\"\n//                     name=\"input1\"\n//                     value={formData.input1}\n//                     onChange={handleChange}\n//                     placeholder=\"Input 1\"\n//                     />\n//                 </div>\n//                 <div className='item'>\n//                     <label htmlFor=\"Input1\">\n//                         Montant TTC\n//                     </label>\n//                     <input\n//                     type=\"text\"\n//                     name=\"input1\"\n//                     value={formData.input1}\n//                     onChange={handleChange}\n//                     placeholder=\"Input 1\"\n//                     />\n//                 </div>\n//                 <div className='item'>\n//                     <label htmlFor=\"Input1\">\n//                         Emetteur\n//                     </label>\n//                     <input\n//                     type=\"text\"\n//                     name=\"input1\"\n//                     value={formData.input1}\n//                     onChange={handleChange}\n//                     placeholder=\"Input 1\"\n//                     />\n//                 </div>\n//                 <div className='item'>\n//                     <label htmlFor=\"Input1\">\n//                         TypeContact\n//                     </label>\n//                     <input\n//                     type=\"text\"\n//                     name=\"input1\"\n//                     value={formData.input1}\n//                     onChange={handleChange}\n//                     placeholder=\"Input 1\"\n//                     />\n//                 </div>\n//                 <div className='item'>\n//                     <label htmlFor=\"Input1\">\n//                         Etablit Par \n//                     </label>\n//                     <input\n//                     type=\"text\"\n//                     name=\"input1\"\n//                     value={formData.input1}\n//                     onChange={handleChange}\n//                     placeholder=\"Input 1\"\n//                     />\n//                 </div>\n//                 <div className='item'>\n//                     <label htmlFor=\"Input1\">\n//                         Payee/Impayee\n//                     </label>\n//                     <input\n//                     type=\"text\"\n//                     name=\"input1\"\n//                     value={formData.input1}\n//                     onChange={handleChange}\n//                     placeholder=\"Input 1\"\n//                     />\n//                 </div>\n//                 <div className='item'>\n//                     <label htmlFor=\"Input1\">\n//                         Mode Reglement\n//                     </label>\n//                     <input\n//                     type=\"text\"\n//                     name=\"input1\"\n//                     value={formData.input1}\n//                     onChange={handleChange}\n//                     placeholder=\"Input 1\"\n//                     />\n//                 </div>\n//                 <div className='item'>\n//                     <label htmlFor=\"Input1\">\n//                         Montant Encaisse\n//                     </label>\n//                     <input\n//                     type=\"text\"\n//                     name=\"input1\"\n//                     value={formData.input1}\n//                     onChange={handleChange}\n//                     placeholder=\"Input 1\"\n//                     />\n//                 </div>\n//                 {/* Ajoutez d'autres champs d'entrée ici */}\n//             </div>\n//             <div className=\"button-container\">\n//                 <button type=\"submit\">Submit</button>\n//             </div>\n//             </form>\n//         </div>\n//   );\n// };\n\n// export default Invoice;\nimport React, { useState } from 'react';\nimport '../css/invoice.css'; // Assurez-vous de créer un fichier Form.css pour les styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Invoice = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    input1: '',\n    input2: '',\n    select1: '',\n    date1: ''\n    // Ajoutez les autres champs d'entrée de la même manière\n    // input3: '', input4: '', ..., input16: ''\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Ajoutez ici la logique pour soumettre le formulaire\n    console.log(formData);\n  };\n\n  // Tableau de configuration des champs\n  const fieldsConfig = [{\n    label: 'Nº de Facture',\n    type: 'number'\n  }, {\n    label: 'Nom Client',\n    type: 'text'\n  }, {\n    label: 'Nº Bon de livraison',\n    type: 'number'\n  }, {\n    label: 'Date de Livraison',\n    type: 'date'\n  }, {\n    label: 'Type de validation',\n    type: 'select',\n    options: ['[Choisir Type de livraison ]', 'WhatsApp', 'Bon de Commande', 'Bon accord']\n  }, {\n    label: 'Montant HT',\n    type: 'number'\n  }, {\n    label: 'Date de Facture',\n    type: 'date'\n  }, {\n    label: 'Teaux',\n    type: 'number'\n  }, {\n    label: 'TVA',\n    type: 'number'\n  }, {\n    label: 'Montant TTC',\n    type: 'number'\n  }, {\n    label: 'EMETTEUR',\n    type: 'select',\n    options: ['[Choisir Type de livraison ]', 'Contract', 'Ponctuel']\n  }, {\n    label: 'Type de Contract',\n    type: 'select',\n    options: ['[Choisir Type de livraison ]', 'Contract', 'Ponctuel']\n  }, {\n    label: 'Etablit Par',\n    type: 'text'\n  }, {\n    label: 'PAYEE / IMPAYEE',\n    type: 'select',\n    options: ['[Choisir PAYEE / IMPAYEE]', 'PAYEE', 'IMPAYEE']\n  }, {\n    label: 'MODE DE REGLEMENT',\n    type: 'select',\n    options: ['[MODE DE REGLEMENT]', 'ESPÈCE', 'CHÈQUE ', 'VIREMENT', 'PAR EFFET']\n  }, {\n    label: 'MONTANT ENCAISSE',\n    type: 'number'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"invoice\",\n    children: [/*#__PURE__*/_jsxDEV(\"center\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Nouvelle Facture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: fieldsConfig.map((field, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: field.label,\n            children: field.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this), field.type === 'select' ? /*#__PURE__*/_jsxDEV(\"select\", {\n            name: field.name,\n            value: formData[field.name],\n            onChange: handleChange,\n            children: field.options.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option,\n              disabled: option === '[MODE DE REGLEMENT]' || option === '[Choisir PAYEE / IMPAYEE]' || option === '[Choisir Type de livraison ]',\n              children: option\n            }, optionIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: field.type,\n            name: field.label,\n            value: formData[field.name],\n            onChange: handleChange,\n            placeholder: field.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Enregistrer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 287,\n    columnNumber: 3\n  }, this);\n};\n_s(Invoice, \"yVgoGGUkHAqsxoTqQOW/rDgu7oI=\");\n_c = Invoice;\nexport default Invoice;\nvar _c;\n$RefreshReg$(_c, \"Invoice\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Invoice","_s","formData","setFormData","input1","input2","select1","date1","handleChange","e","name","value","target","handleSubmit","preventDefault","console","log","fieldsConfig","label","type","options","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","map","field","index","htmlFor","onChange","option","optionIndex","disabled","placeholder","_c","$RefreshReg$"],"sources":["/home/kawtar/Desktop/STAGEGIT/gestfactfrontend/src/component/Invoice.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import '../css/invoice.css'; // Assurez-vous de créer un fichier Form.css pour les styles\r\n\r\n// const Invoice = () => {\r\n//   const [formData, setFormData] = useState({\r\n//     input1: '',\r\n//     input2: '',\r\n//     // Ajoutez les autres champs d'entrée de la même manière\r\n//     // input3: '', input4: '', ..., input16: ''\r\n//   });\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData({\r\n//       ...formData,\r\n//       [name]: value\r\n//     });\r\n//   };\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     // Ajoutez ici la logique pour soumettre le formulaire\r\n//     console.log(formData);\r\n//   };\r\n\r\n//   return (\r\n//         <div>\r\n//             <center><h3>Facture</h3></center>\r\n//             <form className=\"form\" onSubmit={handleSubmit}>\r\n//             <div className=\"input-container\">\r\n//                 <div className='item'>\r\n//                     <label htmlFor=\"Input1\">\r\n//                         Nº de Facture\r\n//                     </label>\r\n//                     <input\r\n//                     type=\"text\"\r\n//                     name=\"input1\"\r\n//                     value={formData.input1}\r\n//                     onChange={handleChange}\r\n//                     placeholder=\"Input 1\"\r\n//                     />\r\n//                 </div>\r\n//                 <div className='item'>\r\n//                     <label htmlFor=\"Input1\">\r\n//                         Nom Client\r\n//                     </label>\r\n//                     <input\r\n//                     type=\"text\"\r\n//                     name=\"input1\"\r\n//                     value={formData.input1}\r\n//                     onChange={handleChange}\r\n//                     placeholder=\"Input 1\"\r\n//                     />\r\n//                 </div>\r\n//                 <div className='item'>\r\n//                     <label htmlFor=\"Input1\">\r\n//                         Nº Bon de Livraison\r\n//                     </label>\r\n//                     <input\r\n//                     type=\"text\"\r\n//                     name=\"input1\"\r\n//                     value={formData.input1}\r\n//                     onChange={handleChange}\r\n//                     placeholder=\"Input 1\"\r\n//                     />\r\n//                 </div>\r\n//                 <div className='item'>\r\n//                     <label htmlFor=\"Input1\">\r\n//                         Date de Livraison\r\n//                     </label>\r\n//                     <input\r\n//                     type=\"text\"\r\n//                     name=\"input1\"\r\n//                     value={formData.input1}\r\n//                     onChange={handleChange}\r\n//                     placeholder=\"Input 1\"\r\n//                     />\r\n//                 </div>\r\n\r\n//                 <div className='item'>\r\n//                     <label htmlFor=\"Input1\">\r\n//                         Type de validation\r\n//                     </label>\r\n//                     <input\r\n//                     type=\"text\"\r\n//                     name=\"input1\"\r\n//                     value={formData.input1}\r\n//                     onChange={handleChange}\r\n//                     placeholder=\"Input 1\"\r\n//                     />\r\n//                 </div>\r\n//                 <div className='item'>\r\n//                     <label htmlFor=\"Input1\">\r\n//                         Montant Ht\r\n//                     </label>\r\n//                     <input\r\n//                     type=\"text\"\r\n//                     name=\"input1\"\r\n//                     value={formData.input1}\r\n//                     onChange={handleChange}\r\n//                     placeholder=\"Input 1\"\r\n//                     />\r\n//                 </div>\r\n//                 <div className='item'>\r\n//                     <label htmlFor=\"Input1\">\r\n//                         Date Facture\r\n//                     </label>\r\n//                     <input\r\n//                     type=\"text\"\r\n//                     name=\"input1\"\r\n//                     value={formData.input1}\r\n//                     onChange={handleChange}\r\n//                     placeholder=\"Input 1\"\r\n//                     />\r\n//                 </div>\r\n//                 <div className='item'>\r\n//                     <label htmlFor=\"Input1\">\r\n//                         Taux\r\n//                     </label>\r\n//                     <input\r\n//                     type=\"text\"\r\n//                     name=\"input1\"\r\n//                     value={formData.input1}\r\n//                     onChange={handleChange}\r\n//                     placeholder=\"Input 1\"\r\n//                     />\r\n//                 </div>\r\n//                 <div className='item'>\r\n//                     <label htmlFor=\"Input1\">\r\n//                         TVA\r\n//                     </label>\r\n//                     <input\r\n//                     type=\"text\"\r\n//                     name=\"input1\"\r\n//                     value={formData.input1}\r\n//                     onChange={handleChange}\r\n//                     placeholder=\"Input 1\"\r\n//                     />\r\n//                 </div>\r\n//                 <div className='item'>\r\n//                     <label htmlFor=\"Input1\">\r\n//                         Montant TTC\r\n//                     </label>\r\n//                     <input\r\n//                     type=\"text\"\r\n//                     name=\"input1\"\r\n//                     value={formData.input1}\r\n//                     onChange={handleChange}\r\n//                     placeholder=\"Input 1\"\r\n//                     />\r\n//                 </div>\r\n//                 <div className='item'>\r\n//                     <label htmlFor=\"Input1\">\r\n//                         Emetteur\r\n//                     </label>\r\n//                     <input\r\n//                     type=\"text\"\r\n//                     name=\"input1\"\r\n//                     value={formData.input1}\r\n//                     onChange={handleChange}\r\n//                     placeholder=\"Input 1\"\r\n//                     />\r\n//                 </div>\r\n//                 <div className='item'>\r\n//                     <label htmlFor=\"Input1\">\r\n//                         TypeContact\r\n//                     </label>\r\n//                     <input\r\n//                     type=\"text\"\r\n//                     name=\"input1\"\r\n//                     value={formData.input1}\r\n//                     onChange={handleChange}\r\n//                     placeholder=\"Input 1\"\r\n//                     />\r\n//                 </div>\r\n//                 <div className='item'>\r\n//                     <label htmlFor=\"Input1\">\r\n//                         Etablit Par \r\n//                     </label>\r\n//                     <input\r\n//                     type=\"text\"\r\n//                     name=\"input1\"\r\n//                     value={formData.input1}\r\n//                     onChange={handleChange}\r\n//                     placeholder=\"Input 1\"\r\n//                     />\r\n//                 </div>\r\n//                 <div className='item'>\r\n//                     <label htmlFor=\"Input1\">\r\n//                         Payee/Impayee\r\n//                     </label>\r\n//                     <input\r\n//                     type=\"text\"\r\n//                     name=\"input1\"\r\n//                     value={formData.input1}\r\n//                     onChange={handleChange}\r\n//                     placeholder=\"Input 1\"\r\n//                     />\r\n//                 </div>\r\n//                 <div className='item'>\r\n//                     <label htmlFor=\"Input1\">\r\n//                         Mode Reglement\r\n//                     </label>\r\n//                     <input\r\n//                     type=\"text\"\r\n//                     name=\"input1\"\r\n//                     value={formData.input1}\r\n//                     onChange={handleChange}\r\n//                     placeholder=\"Input 1\"\r\n//                     />\r\n//                 </div>\r\n//                 <div className='item'>\r\n//                     <label htmlFor=\"Input1\">\r\n//                         Montant Encaisse\r\n//                     </label>\r\n//                     <input\r\n//                     type=\"text\"\r\n//                     name=\"input1\"\r\n//                     value={formData.input1}\r\n//                     onChange={handleChange}\r\n//                     placeholder=\"Input 1\"\r\n//                     />\r\n//                 </div>\r\n//                 {/* Ajoutez d'autres champs d'entrée ici */}\r\n//             </div>\r\n//             <div className=\"button-container\">\r\n//                 <button type=\"submit\">Submit</button>\r\n//             </div>\r\n//             </form>\r\n//         </div>\r\n//   );\r\n// };\r\n\r\n// export default Invoice;\r\nimport React, { useState } from 'react';\r\nimport '../css/invoice.css'; // Assurez-vous de créer un fichier Form.css pour les styles\r\n\r\nconst Invoice = () => {\r\n\r\n  \r\n  const [formData, setFormData] = useState({\r\n    input1: '',\r\n    input2: '',\r\n    select1: '',\r\n    date1: '',\r\n    // Ajoutez les autres champs d'entrée de la même manière\r\n    // input3: '', input4: '', ..., input16: ''\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Ajoutez ici la logique pour soumettre le formulaire\r\n    console.log(formData);\r\n  };\r\n\r\n  // Tableau de configuration des champs\r\n  const fieldsConfig = [\r\n    { label: 'Nº de Facture', type: 'number' },\r\n    { label: 'Nom Client', type: 'text',  },\r\n    { label: 'Nº Bon de livraison', type: 'number' },\r\n    { label: 'Date de Livraison', type: 'date' },\r\n    { label: 'Type de validation', type: 'select', options: ['[Choisir Type de livraison ]','WhatsApp', 'Bon de Commande', 'Bon accord'] },\r\n    { label: 'Montant HT', type: 'number' },\r\n    { label: 'Date de Facture', type: 'date' },\r\n    { label: 'Teaux', type: 'number' },\r\n    { label: 'TVA', type: 'number' },\r\n    { label: 'Montant TTC', type: 'number' },\r\n    { label: 'EMETTEUR', type: 'select', options: ['[Choisir Type de livraison ]','Contract', 'Ponctuel']  },\r\n    { label: 'Type de Contract', type: 'select', options: ['[Choisir Type de livraison ]','Contract', 'Ponctuel'] },\r\n    { label: 'Etablit Par', type: 'text' },\r\n    { label: 'PAYEE / IMPAYEE', type: 'select', options: ['[Choisir PAYEE / IMPAYEE]','PAYEE', 'IMPAYEE'] },\r\n    { label: 'MODE DE REGLEMENT', type: 'select', options: ['[MODE DE REGLEMENT]','ESPÈCE', 'CHÈQUE ','VIREMENT','PAR EFFET'] },\r\n    { label: 'MONTANT ENCAISSE', type: 'number',  },\r\n\r\n\r\n  ];\r\n\r\nreturn (\r\n  <div className='invoice'>\r\n    <center><h1>Nouvelle Facture</h1></center>\r\n    <form className=\"form\" onSubmit={handleSubmit}>\r\n      <div className=\"input-container\">\r\n        {/* Boucle pour générer les champs d'entrée */}\r\n        {fieldsConfig.map((field, index) => (\r\n          <div key={index} className='item'>\r\n            <label htmlFor={field.label}>\r\n              {field.label}\r\n            </label>\r\n            {/* Générez le champ d'entrée en fonction du type */}\r\n            {field.type === 'select' ? (\r\n              <select\r\n                name={field.name}\r\n                value={formData[field.name]}\r\n                onChange={handleChange}\r\n              >\r\n                {/* Générez les options du select */}\r\n                {field.options.map((option, optionIndex) => (\r\n                  <option\r\n                    key={optionIndex}\r\n                    value={option}\r\n                    disabled={option === '[MODE DE REGLEMENT]' || option === '[Choisir PAYEE / IMPAYEE]' || option === '[Choisir Type de livraison ]'}\r\n                  >\r\n                    {option}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            ) : (\r\n              <input\r\n                type={field.type}\r\n                name={field.label}\r\n                value={formData[field.name]}\r\n                onChange={handleChange}\r\n                placeholder={field.label}\r\n              />\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"button-container\">\r\n        <button type=\"submit\">Enregistrer</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n);\r\n\r\n};\r\n\r\nexport default Invoice;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,oBAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}