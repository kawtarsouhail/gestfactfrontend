{"ast":null,"code":"var _jsxFileName = \"/home/kawtar/Desktop/STAGEGITFRONTEND/gestfactfrontend/src/component/GestionCompte.js\";\nimport '../css/GestionCompte.css';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nconst GestionCompte = () => {\n  const [csrfToken, setCsrfToken] = useState('');\n  const [registerInput, setRegisterInput] = useState({\n    name: '',\n    email: '',\n    password: '',\n    error_list: []\n  });\n  useEffect(() => {\n    axios.get('/sanctum/csrf-cookie').then(response => {\n      const token = response.data.csrf_token;\n      setCsrfToken(token);\n    });\n  }, []);\n  const handleInput = e => {\n    e.persist();\n    setRegisterInput(prevState => ({\n      ...prevState,\n      [e.target.name]: e.target.value\n    }));\n  };\n  const registerSubmit = e => {\n    e.preventDefault();\n    const data = {\n      name: registerInput.name,\n      email: registerInput.email,\n      password: registerInput.password\n    };\n    axios.post(\"/api/register\", data, {\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRF-TOKEN': csrfToken\n      }\n    }).then(res => {\n      if (res.data.status === 200) {\n        // Succès de l'enregistrement, effectuez les actions nécessaires\n        console.log(\"Enregistrement réussi !\");\n      } else {\n        // Erreur lors de l'enregistrement, mettez à jour l'état avec les erreurs de validation\n        setRegisterInput(prevState => ({\n          ...prevState,\n          error_list: res.data.validation_errors\n        }));\n      }\n    }).catch(error => {\n      console.error('Erreur lors de l\\'enregistrement:', error);\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: registerSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    value: registerInput.name,\n    onChange: handleInput,\n    placeholder: \"Nom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    value: registerInput.email,\n    onChange: handleInput,\n    placeholder: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    value: registerInput.password,\n    onChange: handleInput,\n    placeholder: \"Mot de passe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, \"S'inscrire\")), registerInput.error_list.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, \"Erreurs de validation :\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, registerInput.error_list.map((error, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 29\n    }\n  }, error)))));\n};\nexport default GestionCompte;","map":{"version":3,"names":["React","useState","useEffect","axios","GestionCompte","csrfToken","setCsrfToken","registerInput","setRegisterInput","name","email","password","error_list","get","then","response","token","data","csrf_token","handleInput","e","persist","prevState","target","value","registerSubmit","preventDefault","post","headers","res","status","console","log","validation_errors","catch","error","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","length","map","index","key"],"sources":["/home/kawtar/Desktop/STAGEGITFRONTEND/gestfactfrontend/src/component/GestionCompte.js"],"sourcesContent":["import '../css/GestionCompte.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios'\r\n\r\nconst GestionCompte = () => {\r\n    const [csrfToken, setCsrfToken] = useState('');\r\n    const [registerInput, setRegisterInput] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        error_list: [],\r\n    });\r\n\r\n    useEffect(() => {\r\n        axios.get('/sanctum/csrf-cookie').then(response => {\r\n            const token = response.data.csrf_token;\r\n            setCsrfToken(token);\r\n        });\r\n    }, []);\r\n\r\n    const handleInput = (e) => {\r\n        e.persist();\r\n        setRegisterInput(prevState => ({\r\n            ...prevState,\r\n            [e.target.name]: e.target.value\r\n        }));\r\n    };\r\n\r\n    const registerSubmit = e => {\r\n        e.preventDefault();\r\n        const data = {\r\n            name: registerInput.name,\r\n            email: registerInput.email,\r\n            password: registerInput.password,\r\n        };\r\n        axios.post(\"/api/register\", data, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'X-CSRF-TOKEN': csrfToken\r\n            }\r\n        }).then(res => {\r\n            if (res.data.status === 200) {\r\n                // Succès de l'enregistrement, effectuez les actions nécessaires\r\n                console.log(\"Enregistrement réussi !\");\r\n            } else {\r\n                // Erreur lors de l'enregistrement, mettez à jour l'état avec les erreurs de validation\r\n                setRegisterInput(prevState => ({\r\n                    ...prevState,\r\n                    error_list: res.data.validation_errors\r\n                }));\r\n            }\r\n        }).catch(error => {\r\n            console.error('Erreur lors de l\\'enregistrement:', error);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={registerSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={registerInput.name}\r\n                    onChange={handleInput}\r\n                    placeholder=\"Nom\"\r\n                />\r\n                <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value={registerInput.email}\r\n                    onChange={handleInput}\r\n                    placeholder=\"Email\"\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={registerInput.password}\r\n                    onChange={handleInput}\r\n                    placeholder=\"Mot de passe\"\r\n                />\r\n                <button type=\"submit\">S'inscrire</button>\r\n            </form>\r\n            {registerInput.error_list.length > 0 &&\r\n                <div>\r\n                    <h3>Erreurs de validation :</h3>\r\n                    <ul>\r\n                        {registerInput.error_list.map((error, index) => (\r\n                            <li key={index}>{error}</li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GestionCompte;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}